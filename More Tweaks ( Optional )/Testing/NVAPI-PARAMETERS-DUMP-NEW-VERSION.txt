
------------------------------------------------------------
AAFEATUREBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various AA feature bits

DEFAULT                                             (= 0x00000000)  // Default
FORCE AA ON A16B16G16R16F TEXTURES OF PRIMARY SIZE  (= 0x00000001)  // Force AA on 4xFP16 textures the same size as the primary flip chain
FORCE AA ON X16B16G16R16F TEXTURES OF PRIMARY SIZE  (= 0x00000001)  // Synonym for the above
FORCE AA ON A32B32G32R32F TEXTURES OF PRIMARY SIZE  (= 0x00000002)  // Force AA on 4xFP32 textures the same size as the primary flip chain
DISABLE AA ON PRIMARY                               (= 0x00000004)  // Disable AA on the primary flip chain
ENABLE Z PARTITIONING FOR VCAA                      (= 0x00000008)  // Enable Z partitioning when using VCAA
UPGRADE Z24 TO Z32 FOR Z PARTITIONING               (= 0x00000010)  // Upgrade Z24 surfaces to Z32 when Z partitioning is enabled
FORCE SUPERSAMPLING ON PRIMARY                      (= 0x00000020)  // Force supersampling on the primary flip chain
FORCE AA ON A8R8G8B8 TEXTURES OF PRIMARY SIZE       (= 0x00000040)  // Force AA on 4xFX8 textures the same size as the primary flip chain
FORCE AA ON X8R8G8B8 TEXTURES OF PRIMARY SIZE       (= 0x00000040)  // Synonym for the above
FORCE OFFSCREEN SUPERBUFFERS TO NOT DOWNFILTER      (= 0x00000080)  // When used as textures, offscreen superbuffers should be read from the super (non-downfiltered) copy
SHARE A16B16G16R16F TEXTURE SUPERBUFFERS            (= 0x00000100)  // Attempt to use a single superbuffer for all 4xFP16 AA textures
FORCE AA ON R32F TEXTURES OF PRIMARY SIZE           (= 0x00000200)  // Force AA on 1xFP32 textures the same size as the primary flip chain
USE ALTERNATE BIOSHOCK TONE MAPPING SHADER          (= 0x00000400)  // Bioshock needs a custom tone mapping shader when texturing from the superbuffer
FORCE SHADER REPLAY FOR A8R8G8B8                    (= 0x00000800)  // Force shader replay on when we have an A8R8G8B8 render target.  Bioshock-specific.
ALLOW AA WITH MRT                                   (= 0x00001000)  // Allow AA in combination with MRT (normally disallowed due to the DX9 spec)
FORCE SHADER SUPERSAMPLING WITH AA TEXTURES         (= 0x00002000)  // Force shader supersampling when at least one texture has AA
USE ALTERNATE STALKER TONE MAPPING SHADER           (= 0x00004000)  // Use STALKER-specific tone-map shader
DISABLE FOS                                         (= 0x00008000)  // Disable filter-on-scanout
FORCE FILTERING ON AA TEXTURES                      (= 0x00010000)  // Force linear or aniso (depending on AA mode) min filtering on textures with AA
FORCE AA ON G16R16 TEXTURES OF PRIMARY SIZE         (= 0x00020000)  // Force AA on 2xFX16 textures the same size as the primary flip chain
FORCE SHADER REPLAY WITH R32F AA TEXTURES           (= 0x00040000)  // Force shader replay when at least one texture is R32F and AA.  Jericho-specific.
FORCE POINT SAMPLING WITH R32F AA TEXTURES          (= 0x00080000)  // Force point sampling for R32F AA source textures.  Jericho-specific.
ONLY APPLY AA ON FIRST A16B16G16R16F RT             (= 0x00100000)  // Only apply AA on the first 4xFP16 render target that's allocated
SHARE A8R8G8B8 TEXTURE SUPERBUFFERS                 (= 0x00200000)  // Attempt to use a single superbuffer for all 4xFX8 AA textures
FORCE AA ON Z24S8 TEXTURES OF PRIMARY SIZE          (= 0x00400000)  // Force AA on depth textures the same size as the primary flip chain
FORCE AA ON Z24X8 TEXTURES OF PRIMARY SIZE          (= 0x00400000)  // Force AA on depth textures the same size as the primary flip chain
FORCE AA ON SIZES GREATER OR EQUAL                  (= 0x08000000)  // Normally we only force AA on textures the same size as the primary.  However, some apps create textures which may be larger--so this bit allows AA creation as long as the width and height are at least as large as the primary.
FORCE TEXLDP TO TEXLD                               (= 0x10000000)  // Projective texture lookups don't work with shader replay.  Convert them to an rcp/mul/tex sequence in AA mode.
FORCE CENTROID EVERYWHERE                           (= 0x20000000)  // Force centroid mapping for all interpolators.
DISABLE TESLA AA QUALITY LEVELS                     (= 0x40000000)  // Only expose a single quality level for each multisample mode (only relevant on Tesla+).  Used for apps that automatically select the highest QL without understanding the perf consequences.
COMPILE BOOL CONSTS STATICALLY                      (= 0x80000000)  // Compile pixel shaders with boolean consts statically (i.e., fold bools into uniqueness).  Doesn't really belong in AA feature bits, but we don't yet have a separate perf bit profile.
MASK                                                (= 0xf87fffff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 

------------------------------------------------------------
AAMASKENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x71066283)
ON, 1, TRUE, ENABLED     (= 0x27658080)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
AAMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

NONE                               (= 0x00000000)  // OGL and D3D -- CP
SUPERSAMPLE 2X H                   (= 0x00000001)  // D3D only
SUPERSAMPLE 2X V                   (= 0x00000002)  // D3D only -- CP
SUPERSAMPLE 1 5X1 5                (= 0x00000002)  // OGL only - 1.5 x 1.5 -- CP
FREE 0x03                          (= 0x00000003)
FREE 0x04                          (= 0x00000004)
SUPERSAMPLE 4X                     (= 0x00000005)  // D3D only, can be gamma corrected
SUPERSAMPLE 4X BIAS                (= 0x00000006)  // D3D only
SUPERSAMPLE 4X GAUSSIAN            (= 0x00000007)  // D3D only
FREE 0x08                          (= 0x00000008)
FREE 0x09                          (= 0x00000009)
SUPERSAMPLE 9X                     (= 0x0000000a)  // unused by CP, but functional via regkey
SUPERSAMPLE 9X BIAS                (= 0x0000000b)  // unused by CP, but functional via regkey
SUPERSAMPLE 16X                    (= 0x0000000c)  // unused by CP, but functional via regkey
SUPERSAMPLE 16X BIAS               (= 0x0000000d)  // unused by CP, but functional via regkey
MULTISAMPLE 2X DIAGONAL            (= 0x0000000e)  // OGL and D3D -- CP, can be gamma corrected
MULTISAMPLE 2X QUINCUNX            (= 0x0000000f)  // OGL and D3D -- CP
MULTISAMPLE 4X                     (= 0x00000010)  // OGL and D3D -- CP, can be gamma corrected
FREE 0x11                          (= 0x00000011)
MULTISAMPLE 4X GAUSSIAN            (= 0x00000012)  // OGL and D3D -- CP
MIXEDSAMPLE 4X SKEWED 4TAP         (= 0x00000013)  // D3D only -- CP
FREE 0x14                          (= 0x00000014)
FREE 0x15                          (= 0x00000015)
MIXEDSAMPLE 6X                     (= 0x00000016)  // D3D only
MIXEDSAMPLE 6X SKEWED 6TAP         (= 0x00000017)  // D3D only -- CP
MIXEDSAMPLE 8X                     (= 0x00000018)  // 4xMS, 2xSS OGL and D3D -- CP
MIXEDSAMPLE 8X SKEWED 8TAP         (= 0x00000019)  // 2xMS, 4xSS OGL and D3D
MIXEDSAMPLE 16X                    (= 0x0000001a)  // OGL only -- CP
MULTISAMPLE 4X GAMMA               (= 0x0000001b)  // D3D only
MULTISAMPLE 16X                    (= 0x0000001c)  // D3D and OGL
VCAA 32X 8v24                      (= 0x0000001d)  // D3D and OGL
CORRUPTION CHECK                   (= 0x0000001e)  // D3D only
6X CT                              (= 0x0000001f)  // D3D only
MULTISAMPLE 2X DIAGONAL GAMMA      (= 0x00000020)  // D3D only
SUPERSAMPLE 4X GAMMA               (= 0x00000021)  // D3D only
MULTISAMPLE 4X FOSGAMMA            (= 0x00000022)  // D3D only
MULTISAMPLE 2X DIAGONAL FOSGAMMA   (= 0x00000023)  // D3D only
SUPERSAMPLE 4X FOSGAMMA            (= 0x00000024)  // D3D only
MULTISAMPLE 8X                     (= 0x00000025)  // OGL and D3D
VCAA 8X 4v4                        (= 0x00000026)  // OGL and D3D
VCAA 16X 4v12                      (= 0x00000027)  // OGL and D3D
VCAA 16X 8v8                       (= 0x00000028)  // OGL and D3D
MIXEDSAMPLE 32X                    (= 0x00000029)  // OGL only
SUPERVCAA 64X 4v12                 (= 0x0000002a)  // D3D
SUPERVCAA 64X 8v8                  (= 0x0000002b)  // D3D
MIXEDSAMPLE 64X                    (= 0x0000002c)  // OGL only
MIXEDSAMPLE 128X                   (= 0x0000002d)  // OGL only
COUNT                              (= 0x0000002e)
METHOD MASK                        (= 0x0000ffff)  // contains one of the methods enumerated below
METHOD MAX                         (= 0xf1c57815)  // AA METHOD COUNT-1
SELECTOR MASK                      (= 0x30000000)
SELECTOR APP CONTROL               (= 0x00000000)  // do what the app says
SELECTOR OVERRIDE                  (= 0x10000000)  // override the app setting with what the user says (via CP/registry) for both enable and mode
SELECTOR ENHANCE                   (= 0x20000000)  // enhance the app-specified mode (but not enable) with the CP mode
SELECTOR SLIAA MASK                (= 0x40000000)  // support for SLIAA this bit should tell us if we have selected SLIAA from CPL.
SELECTOR MAX                       (= 0x20000000)
REPLAY SAMPLES MASK                (= 0x07000000)  // number of times to replay the geometry
REPLAY SAMPLES ONE                 (= 0x00000000)
REPLAY SAMPLES TWO                 (= 0x01000000)
REPLAY SAMPLES FOUR                (= 0x02000000)
REPLAY SAMPLES EIGHT               (= 0x03000000)
REPLAY SAMPLES MAX                 (= 0x03000000)  // Since Tesla has 8xMS
REPLAY MODE MASK                   (= 0x00f00000)  // convert alpha to coverage for D3D app
REPLAY MODE OFF                    (= 0x00000000)  // disabled
REPLAY MODE ALPHA TEST             (= 0x00100000)  // alpha tested primitives
REPLAY MODE PIXEL KILL             (= 0x00200000)  // pixel-kill shaders
REPLAY MODE DYN BRANCH             (= 0x00400000)  // pixel-kill shaders
REPLAY MODE OPTIMAL                (= 0x00400000)  // Optimal Replay mode
REPLAY MODE ALL                    (= 0x00800000)  // all types
REPLAY MODE MAX                    (= 0x00f00000)
REPLAY TRANSPARENCY                (= 0x02300000)  // the standard control-panel setting (REPLAY MODE ALPHA TEST|REPLAY MODE PIXEL KILL|REPLAY SAMPLES FOUR)
REPLAY TRANSPARENCY DEFAULT        (= 0x00000000)
REPLAY TRANSPARENCY DEFAULT TESLA  (= 0x00000000)
REPLAY TRANSPARENCY DEFAULT FERMI  (= 0x00000000)
FORCE FOS MASK                     (= 0x00080000)
FORCE FOS DISABLED                 (= 0x00080000)
FORCE FOS PASSIVE                  (= 0x00000000)
IGNORE FOS MEM LIMITS MASK         (= 0x08000000)
IGNORE FOS MEM LIMITS ENABLE       (= 0x08000000)
IGNORE FOS MEM LIMITS PASSIVE      (= 0x00000000)
ALPHATOCOVERAGE MODE MASK          (= 0x00040000)  // convert alpha to coverage for D3D app
ALPHATOCOVERAGE MODE OFF           (= 0x00000000)  // Only for alpha tested primitive
ALPHATOCOVERAGE MODE ON            (= 0x00040000)
ALPHATOCOVERAGE MODE MAX           (= 0x00040000)
GAMMACORRECTION MASK               (= 0x00030000)  // use gamma corrected AA mode when possible (2X diagonal and 4x only, at this time)
GAMMACORRECTION OFF                (= 0x00000000)
GAMMACORRECTION ON IF FOS          (= 0x00010000)
GAMMACORRECTION ON ALWAYS          (= 0x00020000)
GAMMACORRECTION MAX                (= 0x00020000)
GAMMACORRECTION DEFAULT            (= 0x00000000)  // GAMMACORRECTION OFF
GAMMACORRECTION DEFAULT TESLA      (= 0x00020000)  // GAMMACORRECTION ON ALWAYS
GAMMACORRECTION DEFAULT FERMI      (= 0x00020000)  // GAMMACORRECTION ON ALWAYS

Default values for this setting:
DEFAULT:    NONE
DEFAULT FERMI:    GAMMACORRECTION ON ALWAYS
DEFAULT TESLA:    GAMMACORRECTION ON ALWAYS

------------------------------------------------------------
AATOGGLEHOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0x00000000)
MAX  (= 0x0000ffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
AA BEHAVIOR FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Flags for altering how the driver interprets 'Antialiasing - Setting'

NONE                                    (= 0x00000000)
TREAT OVERRIDE AS APP CONTROLLED        (= 0x00000001)
TREAT OVERRIDE AS ENHANCE               (= 0x00000002)
DISABLE OVERRIDE                        (= 0x00000003)
TREAT ENHANCE AS APP CONTROLLED         (= 0x00000004)
TREAT ENHANCE AS OVERRIDE               (= 0x00000008)
DISABLE ENHANCE                         (= 0x0000000c)
MAP VCAA TO MULTISAMPLING               (= 0x00010000)  // Map VCAA modes to their equivalent multisampling format
SLI DISABLE TRANSPARENCY SUPERSAMPLING  (= 0x00020000)  // Disable transparency supersampling mode for SLI
DISABLE CPLAA                           (= 0x00040000)  // Disable CPL AA ,opengl only
SKIP RT DIM CHECK FOR ENHANCE           (= 0x00080000)  // Don't check the render target dimensions when considering enhance mode
DISABLE SLIAA                           (= 0x00100000)  // Disable SLIAA
DEFAULT                                 (= 0x00000000)
AA RT BPP DIV 4                         (= 0xf0000000)  // The number of bytes needed for AA render targets divided by 4 (not including the AA buffers themselves)
AA RT BPP DIV 4 SHIFT                   (= 0x0000001c)
NON AA RT BPP DIV 4                     (= 0x0f000000)  // The number of bytes needed for non-AA render targets divided by 4
NON AA RT BPP DIV 4 SHIFT               (= 0x00000018)
MASK                                    (= 0xff1f000f)

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
AA MODE ALPHATOCOVERAGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

MODE MASK  (= 0x00000004)  // convert alpha to coverage for D3D app
MODE OFF   (= 0x00000000)  // Only for alpha tested primitive
MODE ON    (= 0x00000004)
MODE MAX   (= 0x00000004)

Default values for this setting:
DEFAULT:    MODE OFF
DEFAULT FERMI:    MODE OFF
DEFAULT TESLA:    MODE OFF

------------------------------------------------------------
AA MODE FOS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

FORCE FOS MASK                 (= 0x00000008)
FORCE FOS DISABLED             (= 0x00000008)
FORCE FOS PASSIVE              (= 0x00000000)
IGNORE FOS MEM LIMITS MASK     (= 0x00000080)
IGNORE FOS MEM LIMITS ENABLE   (= 0x00000080)
IGNORE FOS MEM LIMITS PASSIVE  (= 0x00000000)

Default values for this setting:
DEFAULT:    FORCE FOS PASSIVE
DEFAULT FERMI:    FORCE FOS PASSIVE
DEFAULT TESLA:    FORCE FOS PASSIVE

------------------------------------------------------------
AA MODE GAMMACORRECTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

MASK           (= 0x00000003)  // use gamma corrected AA mode when possible (2X diagonal and 4x only, at this time)
OFF            (= 0x00000000)
ON IF FOS      (= 0x00000001)
ON ALWAYS      (= 0x00000002)
MAX            (= 0x00000002)
DEFAULT        (= 0x00000000)  // OFF
DEFAULT TESLA  (= 0x00000002)  // ON ALWAYS
DEFAULT FERMI  (= 0x00000002)  // ON ALWAYS

Default values for this setting:
DEFAULT:    OFF
DEFAULT FERMI:    ON ALWAYS
DEFAULT TESLA:    ON ALWAYS

------------------------------------------------------------
AA MODE METHOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls method and number of antialising samples

NONE                              (= 0x00000000)  // OGL and D3D -- CP
SUPERSAMPLE 2X H                  (= 0x00000001)  // D3D only
SUPERSAMPLE 2X V                  (= 0x00000002)  // D3D only -- CP
SUPERSAMPLE 1 5X1 5               (= 0x00000002)  // OGL only - 1.5 x 1.5 -- CP
FREE 0x03                         (= 0x00000003)
FREE 0x04                         (= 0x00000004)
SUPERSAMPLE 4X                    (= 0x00000005)  // D3D only, can be gamma corrected
SUPERSAMPLE 4X BIAS               (= 0x00000006)  // D3D only
SUPERSAMPLE 4X GAUSSIAN           (= 0x00000007)  // D3D only
FREE 0x08                         (= 0x00000008)
FREE 0x09                         (= 0x00000009)
SUPERSAMPLE 9X                    (= 0x0000000a)  // unused by CP, but functional via regkey
SUPERSAMPLE 9X BIAS               (= 0x0000000b)  // unused by CP, but functional via regkey
SUPERSAMPLE 16X                   (= 0x0000000c)  // unused by CP, but functional via regkey
SUPERSAMPLE 16X BIAS              (= 0x0000000d)  // unused by CP, but functional via regkey
MULTISAMPLE 2X DIAGONAL           (= 0x0000000e)  // OGL and D3D -- CP, can be gamma corrected
MULTISAMPLE 2X QUINCUNX           (= 0x0000000f)  // OGL and D3D -- CP
MULTISAMPLE 4X                    (= 0x00000010)  // OGL and D3D -- CP, can be gamma corrected
FREE 0x11                         (= 0x00000011)
MULTISAMPLE 4X GAUSSIAN           (= 0x00000012)  // OGL and D3D -- CP
MIXEDSAMPLE 4X SKEWED 4TAP        (= 0x00000013)  // D3D only -- CP
FREE 0x14                         (= 0x00000014)
FREE 0x15                         (= 0x00000015)
MIXEDSAMPLE 6X                    (= 0x00000016)  // D3D only
MIXEDSAMPLE 6X SKEWED 6TAP        (= 0x00000017)  // D3D only -- CP
MIXEDSAMPLE 8X                    (= 0x00000018)  // 4xMS, 2xSS OGL and D3D -- CP
MIXEDSAMPLE 8X SKEWED 8TAP        (= 0x00000019)  // 2xMS, 4xSS OGL and D3D
MIXEDSAMPLE 16X                   (= 0x0000001a)  // OGL only -- CP
MULTISAMPLE 4X GAMMA              (= 0x0000001b)  // D3D only
MULTISAMPLE 16X                   (= 0x0000001c)  // D3D and OGL
VCAA 32X 8v24                     (= 0x0000001d)  // D3D and OGL
CORRUPTION CHECK                  (= 0x0000001e)  // D3D only
6X CT                             (= 0x0000001f)  // D3D only
MULTISAMPLE 2X DIAGONAL GAMMA     (= 0x00000020)  // D3D only
SUPERSAMPLE 4X GAMMA              (= 0x00000021)  // D3D only
MULTISAMPLE 4X FOSGAMMA           (= 0x00000022)  // D3D only
MULTISAMPLE 2X DIAGONAL FOSGAMMA  (= 0x00000023)  // D3D only
SUPERSAMPLE 4X FOSGAMMA           (= 0x00000024)  // D3D only
MULTISAMPLE 8X                    (= 0x00000025)  // OGL and D3D
VCAA 8X 4v4                       (= 0x00000026)  // OGL and D3D
VCAA 16X 4v12                     (= 0x00000027)  // OGL and D3D
VCAA 16X 8v8                      (= 0x00000028)  // OGL and D3D
MIXEDSAMPLE 32X                   (= 0x00000029)  // OGL only
SUPERVCAA 64X 4v12                (= 0x0000002a)  // D3D
SUPERVCAA 64X 8v8                 (= 0x0000002b)  // D3D
MIXEDSAMPLE 64X                   (= 0x0000002c)  // OGL only
MIXEDSAMPLE 128X                  (= 0x0000002d)  // OGL only
COUNT                             (= 0x0000002e)
METHOD MASK                       (= 0x0000ffff)  // contains one of the methods enumerated below
METHOD MAX                        (= 0xf1c57815)  // AA METHOD COUNT-1

Default values for this setting:
DEFAULT:    NONE
DEFAULT FERMI:    NONE
DEFAULT TESLA:    NONE

------------------------------------------------------------
AA MODE REPLAY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

SAMPLES MASK                (= 0x00000070)  // number of times to replay the geometry
SAMPLES ONE                 (= 0x00000000)
SAMPLES TWO                 (= 0x00000010)
SAMPLES FOUR                (= 0x00000020)
SAMPLES EIGHT               (= 0x00000030)
SAMPLES MAX                 (= 0x00000030)  // Since Tesla has 8xMS
MODE MASK                   (= 0x0000000f)  // convert alpha to coverage for D3D app
MODE OFF                    (= 0x00000000)  // disabled
MODE ALPHA TEST             (= 0x00000001)  // alpha tested primitives
MODE PIXEL KILL             (= 0x00000002)  // pixel-kill shaders
MODE DYN BRANCH             (= 0x00000004)  // pixel-kill shaders
MODE OPTIMAL                (= 0x00000004)  // Optimal Replay mode
MODE ALL                    (= 0x00000008)  // all types
MODE MAX                    (= 0x0000000f)
TRANSPARENCY                (= 0x00000023)  // the standard control-panel setting (REPLAY MODE ALPHA TEST|REPLAY MODE PIXEL KILL|REPLAY SAMPLES FOUR)
DISALLOW TRAA               (= 0x00000100)  // some apps do not work correctly with TRAA. Disallow it even if the user has created an app profile with it enabled.
TRANSPARENCY DEFAULT        (= 0x00000000)
TRANSPARENCY DEFAULT TESLA  (= 0x00000000)
TRANSPARENCY DEFAULT FERMI  (= 0x00000000)
MASK                        (= 0x0000017f)

Default values for this setting:
DEFAULT:    SAMPLES ONE
DEFAULT FERMI:    SAMPLES ONE
DEFAULT TESLA:    SAMPLES ONE

------------------------------------------------------------
AA MODE SELECTOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

MASK         (= 0x00000003)
APP CONTROL  (= 0x00000000)  // do what the app says
OVERRIDE     (= 0x00000001)  // override the app setting with what the user says (via CP/registry) for both enable and mode
ENHANCE      (= 0x00000002)  // enhance the app-specified mode (but not enable) with the CP mode
MAX          (= 0x00000002)

Default values for this setting:
DEFAULT:    APP CONTROL
DEFAULT FERMI:    APP CONTROL
DEFAULT TESLA:    APP CONTROL

------------------------------------------------------------
AA MODE SELECTOR SLIAA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // Do not use SLI AA
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Use SLI AA

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
AA QUAD LINE WIDTH
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the line width used when rendering quadrilateral lines


Default values for this setting:
DEFAULT:    1.000000

------------------------------------------------------------
ACE POWERMODE CPU FREQUENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Override CPU frequency for ACE power Mode, can be set differently for each game

NO OVERRIDE    (= 0xffffffff)  // Do not over ride, disabled
DEFAULT VALUE  (= 0x00000000)  // Default value for CPU frequency

Default values for this setting:
DEFAULT:    DEFAULT VALUE

------------------------------------------------------------
ADA A TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

5 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount / RtvCbCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x0003331B

------------------------------------------------------------
ADA A TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
ADA A TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
ADA A TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.700000

------------------------------------------------------------
ADA A TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
AFRSLIAA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x51621661)
ON, 1, TRUE, ENABLED     (= 0x29060798)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
AFTERMATH ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Use to enable/disable the Aftermath system.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Default - normal behaviour.
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Force the driver to create an Aftermath system on device creation.

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
AFTERMATH FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This is the filename used to dump aftermath logs when LOG TO FILE is enabled


------------------------------------------------------------
AFTERMATH FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Use to set flags for the Aftermath system. All flags should enable their respective features when set, and disable the feature when unset.

OFF, 0, FALSE, DISABLED     (= 0x00000000)  // Default - normal behaviour, all features are OFF.
MARKERS                     (= 0x00000001)  // When set, marker checkpointing will be available.
RESOURCE TRACKING           (= 0x00000002)  // When set, resource tracking will be available.
GENERATE CRASH DUMPS        (= 0x00000004)  // When set, create GPU crash dump files if the GPU crash dump monitor is active.
GENERATE SHADER DEBUG INFO  (= 0x00000008)  // When set, create shader debug information files if the GPU crash dump monitor is active.
LOG TO FILE                 (= 0x20000000)  // Log aftermath dump out to a file (AFTERMATH FILENAME)
DETAILED MARKERS            (= 0x40000000)  // Insert detailed driver markers (e.g. CPU callstacks)
AUTOMATIC MODE              (= 0x80000000)  // Aftermath will use run automatically when possible.

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
AFTERMATH FLAGS DISABLE MASK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enabling a bit in this mask guarantees that the corresponding flag in AFTERMATH FLAGS will be force-disabled. This disable happens after all other flag-setting logic and will override all preceding settings.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
AFTERMATH INDICATOR ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Should we display an indicator when Aftermath is enabled.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Default - normal behaviour.
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Indicator to be displayed when Aftermath is in use.

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
AFTERMATH NUM EVENTS PER BUNDLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The number of bytes in ring buffer per D3D12 baked bundle.


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
AFTERMATH NUM EVENTS PER COMMANDLIST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The number of bytes in ring buffer per D3D12 commandlist.


Default values for this setting:
DEFAULT:    0x00000400

------------------------------------------------------------
AFTERMATH NUM EVENTS PER COMMANDQUEUE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The number of bytes in ring buffer per D3D11 immediate context.


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
AFTERMATH NUM EVENTS PER IMMCONTEXT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The number of bytes in ring buffer per D3D11 immediate context.


Default values for this setting:
DEFAULT:    0x00004000

------------------------------------------------------------
ALLOW DUALPIXEL RENDERING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
ALLOW TC PS BARRIER BEFORE EARLYZ
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

GA10x+ only.  Enables PixelShader and TiledCache Barriers to also operate before EarlyZ, instead of just before Pixel shader as done on previous chips.  See http://nvbugs/2080801

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ALPHA2COVG DITHER FOOTPRINT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Value for NV9097 SET ALPHA TO COVERAGE DITHER CONTROL

PIXELS 1X1                  (= 0x00000000)
PIXELS 2X2                  (= 0x00000001)
PIXELS 1X1 VIRTUAL SAMPLES  (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000002
	PIXELS 1X1 VIRTUAL SAMPLES              

------------------------------------------------------------
ALPHABIAS
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0.000000)
MAX  (= 255.000000)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
AL SIZE 12ON7
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls initial allocation list size for D3D12 on Win7 applications.


Default values for this setting:
DEFAULT:    0x00003000

------------------------------------------------------------
AMPERE A TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

5 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount / RtvCbCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x00022313

------------------------------------------------------------
AMPERE A TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
AMPERE A TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
AMPERE A TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
AMPERE A TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
AMPERE B TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

5 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount / RtvCbCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x0003331B

------------------------------------------------------------
AMPERE B TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
AMPERE B TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
AMPERE B TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.700000

------------------------------------------------------------
AMPERE B TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
AMPERE COMPLETION TRACKER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Use new compute completion tracking based on Ampere QMD dependence counters

DISABLE                        (= 0x00000000)  // Setting 0 disables the new tracker
ENABLE                         (= 0x00000001)  // Enables the tracker
FORCE FOR GRAPHICS TIMESTAMPS  (= 0x00000002)  // Stress-testing: force the compute tracker for the graphics timestamps too
DISALLOW FOR DIRECT QUEUES     (= 0x00000004)  // Disable the tracker for direct queues
FORCE SINGLE QMD MODE          (= 0x00000010)  // Force driver to use single-QMD mode instead of start/end QMD mode
FORCE START END QMD MODE       (= 0x00000020)  // Force driver to use start/end QMD mode instead of single-QMD mode
FORCE START BY MME MODE        (= 0x00000040)  // Force driver to use MME for building the tracker QMDs
FORCE CPU PATCH MODE           (= 0x00000080)  // If set in addition to FORCE START BY MME MODE it makes the driver to update semaphore info back in the pushbuffer instead of doing an extra GPU blit.
FORCE DEPENDENT AFTER BARRIER  (= 0x00000100)  // Make the first API launch after the barrier to be launched by the tracker dependent pointer. Barrier is moved after the first launch
DISALLOW ACQUIRE DEFERRAL      (= 0x00000200)  // When defer the barrier to the first dispatch, disallow further deferring of the host acquire, instead do it right after the dispatch.
DISALLOW DSC DEFERRED BARRIER  (= 0x00000400)  // Make the first DSC API launch after the barrier to be launched by the tracker dependent pointer. Barrier is moved after the first launch
DBG SKIP SYSMEMBAR             (= 0x00001000)  // Debug only: skip sysmembar of the tracker completion semaphore
DBG SKIP INC DEC PCAS          (= 0x00004000)  // Debug only: skip increment/decrement PCAS to the tracker
DBG RESET ON DISPATCH          (= 0x00008000)  // Debug only: reset the tracker on every dispatch (effectively forcing max tracked launches to true 0)
MAX TRACKED LAUNCHES SHIFT     (= 0x00000010)  // High 16 bits of the regkey store max number of launches per batch. When reached, the driver inserts a sync point.
MAX TRACKED LAUNCHES DEFAULT   (= 0x00000000)  // 0 for this field lets the driver to decide the default (0xFFFF is max supported by Ampere)

Default values for this setting:
DEFAULT:    0x000001C1
	ENABLE                                  
	FORCE START BY MME MODE                 
	FORCE CPU PATCH MODE                    
	FORCE DEPENDENT AFTER BARRIER           

------------------------------------------------------------
AMPERE FORCE MUTABLE AS HEAVYWEIGHT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Force mutable bundles as heavyweight. Ampere's default is lightweight

DISABLE  (= 0x00000000)
ENABLE   (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
AMPERE GCC CACHE BUG WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Selection of WAR options for GCC cache invalidation bug 200648621

DISABLE              (= 0x00000000)
ALL LINES BY METHOD  (= 0x00000001)  // The WAR forces all TSL2 lines to be invalidated by the invalidation methods
ALL GCC BY PRI       (= 0x00000002)  // The WAR sets PRI to force invalidation of all of GCC

Default values for this setting:
DEFAULT:    0x00000001
	ALL LINES BY METHOD                     

------------------------------------------------------------
AMPERE WAR HWBUG 3123136
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables T$ always to avoid HW Bug 3123136

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ANISOMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls how the anisotropic filtering mode is applied

SELECTOR MASK      (= 0xf0000000)
SELECTOR APP       (= 0x00000000)  // do what the app says
SELECTOR USER      (= 0x10000000)  // do what the user says (via CP/registry)
SELECTOR COND      (= 0x20000000)  // do what the user says unless the app already specified something
SELECTOR MAX       (= 0x20000000)
LEVEL MASK         (= 0x0000ffff)
LEVEL NONE POINT   (= 0x00000000)  // no aniso, fall back to point
LEVEL NONE LINEAR  (= 0x00000001)  // no aniso, fall back to linear
LEVEL MAX          (= 0x00000010)
DEFAULT            (= 0x00000001)  // (SELECTOR APP|LEVEL NONE LINEAR)

Default values for this setting:
DEFAULT:    LEVEL NONE LINEAR

------------------------------------------------------------
ANISO MODE LEVEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls number of samples and algorithm of anisotropic filtering

MASK         (= 0x0000ffff)
NONE POINT   (= 0x00000000)  // no aniso, fall back to point
NONE LINEAR  (= 0x00000001)  // no aniso, fall back to linear
MAX          (= 0x00000010)
DEFAULT      (= 0x00000001)  // NONE LINEAR

Default values for this setting:
DEFAULT:    NONE LINEAR

------------------------------------------------------------
ANISO MODE SELECTOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

MASK     (= 0x0000000f)
APP      (= 0x00000000)  // do what the app says
USER     (= 0x00000001)  // do what the user says (via CP/registry)
COND     (= 0x00000002)  // do what the user says unless the app already specified something
MAX      (= 0x00000002)
DEFAULT  (= 0x00000000)  // APP

Default values for this setting:
DEFAULT:    APP

------------------------------------------------------------
ANISO QUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

MIN               (= 0x00000000)
tpsNV30, 0        (= 0x00000000)
tpsNV40, 1        (= 0x00000001)
tpsDefault, 2     (= 0x00000002)
tpsAssertive, 3   (= 0x00000003)
tpsAggressive, 4  (= 0x00000004)
tpsFerocious, 5   (= 0x00000005)
tpsNSettings, 6   (= 0x00000006)
MAX               (= 0x00000006)  // tpsNSettings

Default values for this setting:
DEFAULT:    tpsDefault

------------------------------------------------------------
ANSEL ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Empowers an app profile to disallow Ansel

DISALLOWED, 0, OFF, DISABLED  (= 0x00000000)  // Ansel is not allowed
ALLOWED, 1, ON, ENABLED       (= 0x00000001)  // Ansel is allowed

Default values for this setting:
DEFAULT:    ALLOWED

------------------------------------------------------------
ANSEL ALLOWLISTED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Temporary allowlisting of apps allowed to enable Ansel

DISALLOWED, 0, OFF, DISABLED  (= 0x00000000)  // Ansel is not allowed
ALLOWED, 1, ON, ENABLED       (= 0x00000001)  // Ansel is allowed

Default values for this setting:
DEFAULT:    DISALLOWED

------------------------------------------------------------
ANSEL ALLOW FREESTYLE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Ansel Global Enablement Key

DISABLED  (= 0x00000000)  // FreeStyle mode is not allowed
ENABLED   (= 0x00000001)  // FreeStyle mode is allowed

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
ANSEL ALLOW OFFLINE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Determines if Ansel is allowed to be loaded and activated offline without the need for any network checks.

DISALLOWED, 0, OFF, DISABLED  (= 0x00000000)  // Offline Ansel is not allowed
ALLOWED, 1, ON, ENABLED       (= 0x00000001)  // Offline Ansel is allowed

Default values for this setting:
DEFAULT:    DISALLOWED

------------------------------------------------------------
ANSEL BUFFERS DEPTH SETTINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Toggle various settings useful for tuning how to identify Depth buffers in Ansel. More info: https://confluence.nvidia.com/display/NGX/Depth+Buffer+Detection+Design.

NONE              (= 0x00000000)  // None of the depth settings will be enabled.
USE STATS         (= 0x00000001)  // Use the Stats Mechanism to identify which buffer has Depth information.
USE VIEWPORT      (= 0x00000002)  // Use Viewport ratio to compare with backbuffer ratio as a metric for determining whether a buffer has Depth.
VIEWPORT SCALING  (= 0x00000004)  // Use Viewport information to scale Depth image which is needed for games with Dynamic Resolution Scaling. Can only be used when USE VIEWPORT is enabled.
OVERRIDE EN       (= 0x00000008)  // Enable Depth Settings overrides for Y/Z Inversion.
INVERT Y          (= 0x00000010)  // Indicate whether a game's depth is inverted in Y-plane, if OVERRIDE EN is set. Inverted means Bottom=1.0, Top = 0.0
INVERT Z          (= 0x00000020)  // Indicate whether a game's depth is inverted in Z-plane, if OVERRIDE EN is set. Inverted means Near=1.0, Far = 0.0
ALL               (= 0xffffffff)  // All of the depth settings will be enabled.

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
ANSEL BUFFERS DEPTH WEIGHTS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Key-value pair in the form 'string=uint32'. Each keyval pair delimited by comma. The weights can be used to fine-tune a game based on in-game heuristics for correctly finding the depth buffer.


Default values for this setting:
???T???????????:    

------------------------------------------------------------
ANSEL BUFFERS DISABLED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Specifies which buffers are blocked from being captured in NvCamera. Specify multiple buffers by or'ing them tegether with '|'.

NONE         (= 0x00000000)  // Disables nothing. All buffers can be captured.
DEPTH        (= 0x00000001)  // Disables Depth buffer capture.
HDR          (= 0x00000002)  // Disables HDR buffer capture.
HUDLESS      (= 0x00000004)  // Disables HUDless buffer capture.
FINAL COLOR  (= 0x00000008)  // Disables Final Color buffer capture.
ALL          (= 0xffffffff)  // Disables everything. No buffers can be captured other than the default present buffer.

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
ANSEL BUFFERS HUDLESS DRAWCALL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the draw call at which point the Hudless buffer will be copied, with the goal of selecting the last draw call before any HUD draws occur. More info: https://confluence.nvidia.com/display/NGX/Hudless+Buffer+Detection+Design.


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
ANSEL BUFFERS HUDLESS SETTINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Toggle various settings useful for tuning how to identify Hudless buffers in Ansel. More info: https://confluence.nvidia.com/display/NGX/Hudless+Buffer+Detection+Design.

NONE                   (= 0x00000000)  // None of the hudless settings will be enabled.
USE STATS              (= 0x00000001)  // Use the Stats Mechanism to identify which buffer has Hudless information.
ONLY SINGLE RTV BINDS  (= 0x00000002)  // Toggle whether to restrict buffer candidates to those which are bound individually.
RESTRICT FORMATS       (= 0x00000004)  // Toggle whether to restrict buffer candidates to specific colour formats.
ALL                    (= 0xffffffff)  // All of the hudless settings will be enabled.

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
ANSEL BUFFERS HUDLESS WEIGHTS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Key-value pair in the form 'string=uint32'. Each keyval pair delimited by comma. The weights can be used to fine-tune a game based on in-game heuristics for correctly finding the hudless buffer.


Default values for this setting:
???T1:    

------------------------------------------------------------
ANSEL DENYLIST ALL PROFILED
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies denylisting combinations for Ansel. This is meant to be set identically for all Ansel enabled profiles.


Default values for this setting:
???T:    

------------------------------------------------------------
ANSEL DENYLIST PER GAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies denylisting combinations for Ansel. Set this per-game.


Default values for this setting:
???T??????:    

------------------------------------------------------------
ANSEL ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Toggle Ansel on or off

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ANSEL ENABLE OPTIMUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Toggle Ansel on or off on Optimus systems

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ANSEL FREESTYLE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

List of supported FreeStyle modes

DISABLED                           (= 0x00000000)  // Ansel freestyle mode is not allowed
ENABLED                            (= 0x00000001)  // Takes precedence over all other bits
MULTIPLAYER DISABLED               (= 0x00000002)  // Disabled in multiplayer/network activity
APPROVED ONLY                      (= 0x00000004)  // Restrict to NV-approved filters
MULTIPLAYER APPROVED ONLY          (= 0x00000008)  // Restrict to MultiPlayer-approved filters
MULTIPLAYER DISABLE EXTRA BUFFERS  (= 0x00000010)  // Disable all special buffers, including depth
MULTIPLAYER DISABLE DEPTH          (= 0x00000020)  // Disable depth

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
AO2PARAMETERBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

HBAO+ parameters

DEFAULT                      (= 0x00000000)  // Default
NDOTV BIAS                   (= 0x00000007)  // angle (N dot V) Bias: 0,1,2,...,16
R MULTIPLIER                 (= 0x000000f0)  // Multiplier: 1,2,3,...,16
AOFOG DIST OF HALF STRENGTH  (= 0x0000f000)  // AO fadeoff factor = [logsace(0,4,63), off] = 10^((0,1,2,...,63)*4/62) = [1, 1.16, 1.34, ..., 108, ..., 1116, ..., 10000, off]
AOFOG AMOUNT                 (= 0x000f0000)  // AO-fog amount.
BLUR SHARPNESS               (= 0x00f00000)  // Blur sharpness
STRENGTH                     (= 0x0f000000)  // Strength
POWER EXPONENT               (= 0x30000000)  // Power exponent
USE FP16 LINEARZ             (= 0x80000000)  // Linear Z format = R32F(bit=0), or R16F(bit=1)
MASK                         (= 0xbffff0f7)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 

------------------------------------------------------------
AOPARAMETERBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

SSAO (Screen Space Ambient Occlusion) paramaters

DEFAULT               (= 0x0033341e)  // Default: angle bias=30, multiplier=4, directions=8, samples=8, sharpness=10, strength=1, buffer scale=1
ANGLE BIAS            (= 0x0000003f)  // Bias: 0,1,2,...,63
SSAO SHADER TYPE      (= 0x000000c0)  // SSAO shader types
R MULTIPLIER          (= 0x00000f00)  // Multiplier: 1,2,3,...,16
NUMBER OF DIRECTIONS  (= 0x0000f000)  // NumDirections:          bits=  0   1   2   3   4   5   6   7   8   9   a   b   c   d   e   f
NUMBER OF SAMPLES     (= 0x000f0000)  // NumSamples:   NumDir/NumSamp=  2   4   6   8  10  12  14  16  18  20  22  24  26  28  30  32
SHARPNESS             (= 0x00f00000)  // Sharpness:         Sharpness=  1   2   5  10  25  50  75 100 125 150 175 200 225 250 275 300
STRENGTH              (= 0x0f000000)  // Strength:           Strength= .5  .6  .7  .8  .9 1.0 1.1 1.2 1.3 1.4 1.6 1.8 2.0 2.2 2.4 2.6
USE HALFRES AO        (= 0x10000000)  // Compute AO in a buffer whose size is half of the RT
USE HALFRES LINEARZ   (= 0x20000000)  // Use a LinearZ buffer whose size is half of the RT
USE FP16 LINEARZ      (= 0x40000000)  // Linear Z format = R32F(bit=0), or R16F(bit=1)
MASK                  (= 0x7fffffff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x0033341E
	DEFAULT                                 

------------------------------------------------------------
AOPARAMETEREXBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Extended SSAO (Screen Space Ambient Occlusion) paramaters

DEFAULT                              (= 0x0007020a)  // Default: BlurRadius=10, FogDist=11574
BLUR RADIUS                          (= 0x0000003f)  // Blur radius = 0,1,2,...,63
AOFOG DIST OF HALF STRENGTH          (= 0x00000fc0)  // AO fadeoff factor = [logsace(0,4,63), off] = 10^((0,1,2,...,63)*4/62) = [1, 1.16, 1.34, ..., 108, ..., 1116, ..., 10000, off]
AOFOG AMOUNT                         (= 0x0000f000)  // AO-fog amount.
MAX RADIUS IN SCREEN FRACTION        (= 0x00070000)  // Bound the AO line search radius: [.01, .02, .04, .07, .095, .15, .19, .30]
USE QUARTER RESOLUTION               (= 0x00080000)  // Use quarter resolution for multi-res refinement
USE BLOCK REJECTION                  (= 0x00100000)  // Use the block rejection for the AO pass
USE BLUR BLOCK REJECTION             (= 0x00200000)  // Use the block rejection for the blur passes
USE MULTI RESOLUTION                 (= 0x00400000)  // Use multi-resolutin
USE FULLRES REFINEMENT FOR LOW MODE  (= 0x00800000)  // Use full-resolutin refinement for low mode
DUALRES VARIATION THRESHOLD          (= 0x0f000000)  // If variation in coarser level is greater than this threshold, we refine
MASK                                 (= 0x0fffffff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x0007020A
	DEFAULT                                 

------------------------------------------------------------
AO MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Ambient occlusion mode

OFF     (= 0x00000000)
LOW     (= 0x00000001)
MEDIUM  (= 0x00000002)
HIGH    (= 0x00000003)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
AO MODE ACTIVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Setting provided to CPL to indicate whether the NVIDIA driver uses Ambient Occlusion or not

DISABLED, OFF  (= 0x00000000)  // Ambient Occlusion is not available
ENABLED, ON    (= 0x00000001)  // Ambient Occlusion is active

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
AO MODE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Ambient occlusion mode flags

NONE  (= 0x00000000)

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
APIINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Display the API version indicator

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable API version indicator
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable API version indicator

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
APPCOMMANDLINE
------------------------------------------------------------
This key is of type BINARY
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
APPLICATION PROFILE NOTIFICATION TIMEOUT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specifies how many seconds the popup displaying information about which profile is being applied should appear. Zero counts as disabled.

DISABLED, OFF, ZERO  (= 0x00000000)  // This value disables the popup from appearing.
NINE SECONDS         (= 0x00000009)  // The popup will appear for 9 seconds
FIFTEEN SECONDS      (= 0x0000000f)  // The popup will appear for 15 seconds
THIRTY SECONDS       (= 0x0000001e)  // The popup will appear for 30 seconds
ONE MINUTE           (= 0x0000003c)  // The popup will appear for 1 minute
TWO MINUTES          (= 0x00000078)  // The popup will appear for 2 minutes

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
APPLICATION STEAM ID
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Steam Application ID is used to identify which Steam applications are installed


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
APP COMPAT SHIM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

A shim for DX1x app bugs workarounds

DISABLED, OFF, 0                            (= 0x00000000)
DX11 FORCE DDI CRITICAL SECTION             (= 0x00000001)  // Force a critical section on all non-reentrant DX11 DDI
DX11 FORCE DDI CRITICAL SECTION FOR STEREO  (= 0x00000002)  // Force a critical section on all non-reentrant DX11 DDI if stereo shim is enabled 
MASK                                        (= 0x00000003)  // Mask of all valid bits

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DISABLED                                

------------------------------------------------------------
ASYNC10 DEVFLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

DISPLAY HISTORY                 (= 0x00000001)  // Display history of async device enable for last 64 frames.
DISPLAY CPU METER               (= 0x00000002)  // Display meters that show cpu activity.
DISPLAY FPS                     (= 0x00000004)  // Display frames per second counter.
DISPLAY ONLY WHEN HOT KEY DOWN  (= 0x00000008)  // Display history/meter only when the hot key is down.
DUMP STATISTICS                 (= 0x00000010)  // Output lots of statistics at device destroy time.
INCLUDE PER FRAME STATS         (= 0x00000020)  // Include per-frame times.
INCLUDE QUEUE LENGTH STATS      (= 0x00000040)  // Include async queue length statistics.
INCLUDE COMMUNICATION STATS     (= 0x00000080)  // Measure overhead of communication protocols.
RECORD ONLY WHEN HOT KEY DOWN   (= 0x00000100)  // Record stats only when the hot key is down. Useful for ignoring start/stop frames.
SET ALLOWED PROCESSOR           (= 0x00001000)  // Set the allowed processor for the client (app) thread to 0 and the server (driver) thread to 1.
SET IDEAL PROCESSOR             (= 0x00002000)  // Set the ideal (preferred) processor for the client (app) thread to 0 and the server (driver) thread to 1.
SET IDEAL PROCESSOR AVOID DPCS  (= 0x00004000)  // If setting ideal processor, query the KMD for cores which are serving DPCs and avoid those cores.
DISABLE REFCOUNT PRESENTLIMIT   (= 0x00080000)  // Disable limiting the present limit via refcount.
DISABLE OS THREADING APIS       (= 0x00100000)  // Do not call GetProcessAffinityMask/SetThreadIdealProcessor/Thread32First/etc.
ON ONLY WHEN HOT KEY DOWN       (= 0x04000000)  // Enable async device only when the hot key is down.
FORCE DUAL CORE                 (= 0x20000000)  // Force async device even if single core processor is detected.

------------------------------------------------------------
ASYNC10 ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable DX10 Dual core optimization (multithreaded driver)

APP  (= 0x37605835)  // Enable dual core optimizations unless the application requested to disable them
OFF  (= 0x53850673)  // Disable dual core optimizations
ON   (= 0x42563729)  // Enable dual core optimizations

------------------------------------------------------------
ASYNC10 HOT KEYS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Hotkey pair used to control some debug functions. First hotkey is in low WORD, second is in high WORD. Default is VK SHIFT.


------------------------------------------------------------
ASYNC10 NVAPI MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Control NVAPI processing behaviour

ALLOW NONBLOCKING NVAPI    (= 0x00000001)  // generally allow some nvapi calls to not block async device
ALLOW NOBLOCKING SLISTATE  (= 0x00000002)  // Allow specific non-blocking optimizations for GetCurrentSliState NVAPI

Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
ASYNC10 PRESENT MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Force DX10 present to async or sync call 

DEFAULT    (= 0x96184013)  // DX10 present will be in default mode
SYNC       (= 0x53855200)  // DX10 present will be sync call
ASYNC      (= 0x89624578)  // DX10 present will be async call
ASYNC ALL  (= 0x89344578)  // DX10 both fullscreen and windowed present will be async call

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
ASYNC10 QUERYGETDATA GPUWAIT COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

How many query getData calls are allowed before we consider it a gpu wait


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
ASYNC10 QUERYGETDATA SLEEP COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

How many query getData calls are allowed before the client thread using Sleep()


Default values for this setting:
DEFAULT:    0x000003E8

------------------------------------------------------------
ASYNC10 QUEUE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Total size (bytes) of the queue used to pass operations to the device thread.


------------------------------------------------------------
ASYNC10 SPIN COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Spin count for thread synchronization protocols. After spin count is reached, OS wait is performed.


------------------------------------------------------------
ASYNC10 STACK SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Size of stack for async device threads, default is 256KB.


------------------------------------------------------------
ASYNC10 STATS FIRST FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Dump detailed statistics about frames betwen first frame and last.


------------------------------------------------------------
ASYNC10 STATS LAST FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Dump detailed statistics about frames betwen first frame and last.


------------------------------------------------------------
ASYNC10 SYNCHRONIZE RENDERCB
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Force DX10 renderCB to async or sync call

OFF, 0, FALSE, DISABLED  (= 0x00000001)  // disable async renderCB
ON, 1, TRUE, ENABLED     (= 0x00000000)  // enable async renderCB

Default values for this setting:
DEFAULT:    0x00000001
	OFF                                     

------------------------------------------------------------
ASYNC10 SYNC CALLBACK MASK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A mask that forces callbacks from the UM to the runtime to be synchronous.


------------------------------------------------------------
ASYNC10 THREAD PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If set, the DX11 async device thread will set its thread priority to this value.


------------------------------------------------------------
ASYNC9 AFFINITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

Control processor affinity for client and server threads.

AVOID CLIENT AFFINITY   (= 0x00000000)  // Dynamically set affinities to avoid client ideal processor.
DONT CHANGE AFFINITY    (= 0x00000001)  // Don't change affinities.
FORCE AFFINITY ONCE     (= 0x00000002)  // Set affinities once to the specific processor below (a perf debugging aid).
FORCE AFFINITY          (= 0x00000003)  // Set affinities at each frame to the specific processor below (a perf debugging aid).
AFFINITY MASK           (= 0x000000ff)  // Mask for the commands above.
CLIENT PROCESSOR MASK   (= 0x0000ff00)  // Mask for client processor number (if FORCE AFFINITY ONCE or FORCE AFFINITY).
SERVER PROCESSOR MASK   (= 0x00ff0000)  // Mask for server processor number (if FORCE AFFINITY ONCE or FORCE AFFINITY).
CLIENT PROCESSOR SHIFT  (= 0x00000008)  // Shift count for client processor number.
SERVER PROCESSOR SHIFT  (= 0x00000010)  // Shift count for server processor number.

------------------------------------------------------------
ASYNC9 DEVFLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

DISPLAY CPU METER               (= 0x00000002)  // Display meters that show cpu activity.
DISPLAY FPS                     (= 0x00000004)  // Display frames per second counter.
DISPLAY ONLY WHEN HOT KEY DOWN  (= 0x00000008)  // Display history/meter only when the hot key is down.
DUMP STATISTICS                 (= 0x00000010)  // Output lots of statistics at device destroy time.
INCLUDE PER FRAME STATS         (= 0x00000020)  // Include per-frame times.
INCLUDE QUEUE LENGTH STATS      (= 0x00000040)  // Include async queue length statistics.
INCLUDE COMMUNICATION STATS     (= 0x00000080)  // Measure overhead of communication protocols.
RECORD ONLY WHEN HOT KEY DOWN   (= 0x00000100)  // Record stats only when the hot key is down. Useful for ignoring start/stop frames.
PAUSE FOR DEBUG AT CREATION     (= 0x00000200)  // Pops up a message box at device creation so that you can attach a user mode debugger to the app at that time.
SET ALLOWED PROCESSOR           (= 0x00001000)  // Set the allowed processor for the client (app) thread to 0 and the server (driver) thread to 1.
SET IDEAL PROCESSOR             (= 0x00002000)  // Set the ideal (preferred) processor for the client (app) thread to 0 and the server (driver) thread to 1.
DISABLE ASYNC LOCKS             (= 0x00010000)  // Disable asynchronous locks.
DISABLE UM STREAM0 OPT          (= 0x00080000)  // Disable conversion of UM stream 0 and indices to VB draws.
DISABLE UM DRAW WHILE LOCKED    (= 0x00100000)  // Disable UM stream 0 vertex buffer draw while locked optimization.
FORCE DUAL CORE                 (= 0x20000000)  // Force async device even if single core processor is detected.

------------------------------------------------------------
ASYNC9 ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable DX9 Dual core optimization (multithreaded driver)

APP         (= 0x37605835)  // Enable AsyncDevice except in configs that do not work (some SLI, Optimus) or if the application requested to disable them
WHENSAFE    (= 0x37605846)  // Enable AsyncDevice except in configs that do not work (some SLI, Optimus)
OFF         (= 0x53850673)  // Disable AsyncDevice and MS dual core optimization
ON          (= 0x42563729)  // Enable AsyncDevice ignoring safety or application requests.
ONIFQUADRO  (= 0x42563730)  // Enable AsyncDevice if a Quadro or GeForce SMB GPU is being used, otherwise disable AsyncDevice and MS dual core optimization
MICROSOFT   (= 0x75328097)  // Disable AsyncDevice but allow MS dual core optimization

------------------------------------------------------------
ASYNC9 HOT KEYS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Hotkey pair used to control some debug functions. First hotkey is in low WORD, second is in high WORD. Default is VK SHIFT.


------------------------------------------------------------
ASYNC9 MAX QUEUED UPDATE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max size (bytes) of data that calls twill copy, otherwise a synchronous operation is performce.


------------------------------------------------------------
ASYNC9 PRESENT MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable or disable asynchronous presents when the multithreaded driver is used

SYNC          (= 0x53855200)  // All DX9 presents will be synchronous
ASYNC         (= 0x96184013)  // All DX9 presents will be asynchronous if AllowFlipBatching is set
ASYNCFS       (= 0x57236402)  // Only full screen DX9 presents will be asynchronous if AllowFlipBatching is set
FORCEASYNC    (= 0x89624578)  // All DX9 presents will be asynchronous
FORCEASYNCFS  (= 0x32469276)  // Only full screen DX9 presents will be asynchronous

------------------------------------------------------------
ASYNC9 QUEUE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Total size (bytes) of the queue used to pass operations to the device thread.


------------------------------------------------------------
ASYNC9 SPIN COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Spin count for thread synchronization protocols. After spin count is reached, OS wait is performed.


------------------------------------------------------------
ASYNC9 STACK SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Size of stack for async device threads, default is 256KB.


------------------------------------------------------------
ASYNC9 STATS FIRST FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Dump detailed statistics about frames betwen first frame and last.


------------------------------------------------------------
ASYNC9 STATS LAST FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Dump detailed statistics about frames betwen first frame and last.


------------------------------------------------------------
ASYNC9 THREAD PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If set, the DX9 async device thread will set its thread priority to this value.


------------------------------------------------------------
ASYNC UMD METERING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

UMD metering control

ALLOW 2WAY      (= 0x00000001)  // allow UMD metering on 2-Way SLI
ALLOW 3WAY      (= 0x00000002)  // allow UMD metering on 3-Way SLI
ALLOW 4WAY      (= 0x00000004)  // allow UMD metering on 4-Way SLI
METER0 ENABLED  (= 0x00000008)  // metering first successfull query on every frame
METER1 ENABLED  (= 0x00000010)  // metering present calls

Default values for this setting:
DEFAULT:    0x00000017
	ALLOW 2WAY                              
	ALLOW 3WAY                              
	ALLOW 4WAY                              
	METER1 ENABLED                          

------------------------------------------------------------
ATOCBIAS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0x00000000)
MAX  (= 0x000000ff)

Default values for this setting:
DEFAULT:    0x0000007F

------------------------------------------------------------
ATOCSHARPNESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0x00000000)
MAX  (= 0x00002000)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
AUDIO INJECT RXINPUT DLL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Decide whether to inject rxinput.dll or not

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
AUTOFL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable AutoFL support.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
AUTO LODBIASADJUST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

ignored if LODBIASADJUST is set

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
AVOID HOST REMAPPERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Try to avoid host remappers. If application is locking BL RT in vidmem, demote it to pitch so that lock won't require remapper.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
BAR INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables a plethora of bar drawing options to debug flip pattern issues

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // No indicator
DISPLAY COUNT MASK       (= 0x0000000f)  // 0-15 bars to be drawn at regular intervals, mostly to get one per display (though it can do more than one per display).
FRAME COUNT MASK         (= 0x000000f0)  // Number of different offsets to draw the bars in, to distinguish different frames. Useful for SLI to distinguish frames drawn by different GPUs if set to (a multiple of) the number of GPUs.
WIDTH PERCENT MASK       (= 0x00007f00)  // Percentage of the screen size to be used as the bar width.
SPEED MASK               (= 0x00ff0000)  // Speed which the bar moves in the screen. Zero is no movement, each added unit is 10% of the bar width.
DRAW PORTRAIT            (= 0x00008000)  // Draw bar from left-to-right instead of top-to-bottom. Useful for portrait modes.
SWITCH COLORS            (= 0x80000000)  // make bars change colors when drawn by the same GPU (so the same color is used by all frames before it is updated).
MASK                     (= 0x80ffffff)  // Mask of all valid bits
SINGLE MOVING BAR        (= 0x00100000)  // Legacy mode of a single white bar moving left-right on the screen

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     
	OFF                                     
	OFF                                     
	OFF                                     
	OFF                                     
	OFF                                     

------------------------------------------------------------
BATTERY BOOST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables the Battery Boost functionality, cap FPS for DC mode only

MIN       (= 0x00000001)  // Minimum
MAX       (= 0x000003ff)  // Maximum
ENABLED   (= 0x10000000)  // Enabled
DISABLED  (= 0x00000000)  // Disabled
XQM       (= 0x1000001e)  // External Quiet Mode Setting

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
BATTERY BOOST APP FPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Override FPS for Battery Boost, can be set differently for each application

MIN          (= 0x00000001)  // Minimum
MAX          (= 0x000003ff)  // Maximum
NO OVERRIDE  (= 0x00000000)  // No override

Default values for this setting:
DEFAULT:    NO OVERRIDE

------------------------------------------------------------
BCTEXCOMPRESSENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This regkey toggles compression for BC Texture resources.

OFF  (= 0x00000000)  // Disable compression on all BC textures
ON   (= 0x00000001)  // Enable compression on all BC textures

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
BG FRL FPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Background Application Max Frame Rate

DISABLED  (= 0x00000000)  // Disabled
MIN       (= 0x00000000)
MAX       (= 0x000003ff)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
BG FRL FPS NVCPL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Background Application Max Frame Rate for NVCPL 

DISABLED  (= 0x00000000)  // Disabled
MIN       (= 0x00000000)
MAX       (= 0x000003ff)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
BM OFFER RECLAIM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DX10 - allowed in release and for app profiles

DISABLE OFFER SMALL BLOCKS      (= 0x00000001)  // DX10     Disable offering of suballocated Blocks
DISABLE INTERNAL OFFER RECLAIM  (= 0x00000002)  // DX10     Diable internal Offer/Reclaim
DISABLE ALL OFFER RECLAIM       (= 0x00000004)  // DX10     Diable all Offer/Reclaim

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
BOUND RESOURCE TEX HEADER VERSIONING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables tex header versioning for resources that are already bound. For bug 2657980

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
BREAK ON DEVICE REPORTERROR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

trigger int3 on certain device report errors

BREAK ON D3DDDIERR DEVICEREMOVED       (= 0x00000001)
BREAK ON E OUTOFMEMORY                 (= 0x00000002)
BREAK ON DXGI DDI ERR NONEXCLUSIVE     (= 0x00000004)
BREAK ON DXGI DDI ERR WASSTILLDRAWING  (= 0x00000008)
BREAK ON DXGI DDI ERR UNSUPPORTED      (= 0x00000010)
BREAK ON E INVALIDARG                  (= 0x00000020)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
BREAK ON ENTRY
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A semi-colon delineated set of strings. These strings are substrings of entry point function names to assert on.


------------------------------------------------------------
BREAK ON ENTRY CALLS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A string to specify which (numerically ordered) occurrence of a function call to break on. The input should be two integer values separated by a space. For example, '2 5' will break on calls 2 through 5. If the two numbers are the same, the program will break on all calls after that number. So, '0 0' will break on all frames and '5 5' will break on all calls to function X after the 5th.


------------------------------------------------------------
BREAK ON ENTRY FRAMES
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A string to specify which frames to break on. The input should be two integer values separated by a space. For example, '2 5' will break on frames 2 through 5. If the two numbers are the same, the program will break on all frames after that number. So, '0 0' will break on all frames and '5 5' will break on all frames frame 5 and after.


------------------------------------------------------------
BREAK ON OCG ASSERT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

break when an assert occurs in OCG. Disable this to record multiple asserts when OCG CRASH DUMP=1.

OFF, 0, FALSE, DISABLED  (= 0x16564886)
ON, 1, TRUE, ENABLED     (= 0x18826043)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
BREAK ON OCG CRASH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

breakpoint when an OCG crash occurs. Disable this to attempt to continue execution after the exception handler for OCG returns.

OFF, 0, FALSE, DISABLED  (= 0x16564886)
ON, 1, TRUE, ENABLED     (= 0x18826043)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
BROADCAST EXPLICIT SLI DESCRIPTOR HEAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Control broadcast of descriptor heaps for explicit SLI

DISABLE  (= 0x00000000)  // Disable broadcast descriptor heap for explicit SLI
ENABLE   (= 0x00000001)  // Enable broadcast descriptor heap for explicit SLI

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
BUFFERCOMPRESSENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This regkey disables compression for buffer resources. This includes DX12 heaps. Make sure to include this key when disabling all types of compression

OFF, 0, FALSE, DISABLED  (= 0x99388100)  // Disable compression on buffers
ON, 1, TRUE, ENABLED     (= 0x25558997)  // Allow the driver to enable compression when possible
FORCE ON                 (= 0x25678997)  // Force enabling compression on all buffers (might cause issues)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
CBF THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Min number of scalar vertex shader inputs to enable CBF (see bug 501556)

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

Default values for this setting:
DEFAULT:    0x0000000C

------------------------------------------------------------
CB ALPHA CACHELINES PER SM
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of cachelines per SM we request for alpha circular buffers. Zero means to use driver default.

MIN, AUTOMATIC  (= 0x00000000)
FERMI MAX       (= 0x000003ff)
MAXWELL MAX     (= 0x00003fff)
PASCAL MAX      (= 0x003fffff)
MAX             (= 0x003fffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
CB CACHELINES PER SM
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of cachelines per SM we request for circular buffers. Zero means to use driver default.

MIN, AUTOMATIC  (= 0x00000000)
FERMI MAX       (= 0x000003ff)
MAXWELL MAX     (= 0x00003fff)
PASCAL MAX      (= 0x003fffff)
MAX             (= 0x003fffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
CE LARGE PUSHBUFFER RENAMING CHAIN LENGTH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Copy engine context small pushbuffer renaming chain length


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
CE LARGE PUSHBUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Copy engine context large pushbuffer size


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
CE SMALL PUSHBUFFER RENAMING CHAIN LENGTH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Copy engine context small pushbuffer renaming chain length


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
CE SMALL PUSHBUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Copy engine context small pushbuffer size


Default values for this setting:
DEFAULT:    0x00004000

------------------------------------------------------------
CHANNEL P2P COPY NODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Configuration of CHANNEL P2P COPY

DISABLE       (= 0x00000000)  // Do not create CHANNEL P2P COPY
LOW NODE      (= 0x00000001)  // CE5 - NodeDmaCopyLow - Alias to CE2
MEDIUM NODE   (= 0x00000002)  // CE4 - NodeDmaCopyMedium - Alias to CE1
HIGH NODE     (= 0x00000003)  // CE3 - NodeDmaCopyHigh - Alias to CE0
CE0 NODE      (= 0x00000004)  // CE0 - default CE for paging
CE1 NODE      (= 0x00000005)  // CE1 - default CE for sysmem access (see COPY ENGINE key)
CE2 NODE      (= 0x00000006)  // CE2 - fastest CE for NVLINK (multiple PCEs assigned to this LCE)
DISABLE MASK  (= 0xf0000000)  // mask of bits controlling individual driver disablement
DISABLE DX11  (= 0x10000000)  // Disable the channel for DX11
DISABLE DX12  (= 0x20000000)  // Disable the channel for DX12

Default values for this setting:
DEFAULT:    0x20000006

------------------------------------------------------------
CHANNEL PRESENT COPY NODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Configure node for CHANNEL PRESENT COPY

DISABLE      (= 0x00000000)  // Default behaviour, create CHANNEL PRESENT COPY on the same node as CHANNEL ASYNC COPY
LOW NODE     (= 0x00000001)  // CHANNEL PRESENT COPY created on virtual node NodeDmaCopyLow
MEDIUM NODE  (= 0x00000002)  // CHANNEL PRESENT COPY created on virtual node NodeDmaCopyMedium
HIGH NODE    (= 0x00000003)  // CHANNEL PRESENT COPY created on virtual node NodeDmaCopyHigh
CE0 NODE     (= 0x00000004)  // CHANNEL PRESENT COPY created on physical Node CE0
CE1 NODE     (= 0x00000005)  // CHANNEL PRESENT COPY created on physical Node CE1
CE2 NODE     (= 0x00000006)  // CHANNEL PRESENT COPY created on physical Node CE2

Default values for this setting:
DEFAULT:    LOW NODE

------------------------------------------------------------
CKREF
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0x00000000)
MAX  (= 0x0000007f)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
CNULLWAR
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEVELOP) || defined(DEBUG)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NONE                     (= 0x00000000)  // No workarounds applied
MIN                      (= 0x00000000)  // Minimum allowable setting
PIXELKILL                (= 0x00000001)  // Pixel-kill workaround applied
ALPHATEST                (= 0x00000002)  // Alpha-test workaround applied
PIXELKILL AND ALPHATEST  (= 0x00000003)  // Pixel-kill and alpha-test workarounds applied
MAX                      (= 0x00000003)  // Maximum allowable setting

Default values for this setting:
DEFAULT:    PIXELKILL

------------------------------------------------------------
COLLECTGFEINFO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Switches to enable/disable GFE data collection

DISABLE                      (= 0x00000000)  // The default mode, the driver will collect no data.
GFE MS PER FRAME HIST        (= 0x00000001)
GFE MS PER FRAME DERIV HIST  (= 0x00000002)
GFE PSTATE HIST              (= 0x00000004)
GFE PCT BATTERY              (= 0x00000008)
GFE STEREO INFO              (= 0x00000010)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
COLORCOMPRESSENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x99388100)
ON, 1, TRUE, ENABLED     (= 0x25558997)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
COMPILER KNOBS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing compiler knobs, deprecates OCGCONTROL KNOBS STRING.


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
COMPILER STATS FILE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

File where Compiler Stats will be written.


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
COMPILER STATS LEVEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control support for Granularity of Dumping Compile Time and Memory Usage of CGC and OCG Compiler.

LEVEL0, DISABLED  (= 0x00000000)  // Disable.
LEVEL1            (= 0x00000001)  // Level 1 Profiling
LEVEL2            (= 0x00000002)  // Level 2 Profiling
LEVEL3            (= 0x00000003)  // Level 3 Profiling
LEVEL4            (= 0x00000004)  // Level 4 Profiling

Default values for this setting:
DEFAULT:    0x00000000
	LEVEL0                                  

------------------------------------------------------------
COMPUTE MME SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disabling this regkey will allow the driver to behave like compute MME is not supported even on supported hw - GA10x+

DISABLED, OFF  (= 0x00000000)  // Compute MME is not supported on GA10x+
ENABLED, ON    (= 0x00000001)  // Compute MME is supported on GA10x+

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
COMPUTE UAV HAZARD CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

control for handling compute uav hazards

DRIVER CONTROLLED          (= 0x00000000)  // Right now, default == use semaphore
FORCE WFI                  (= 0x00000001)
FORCE SEMAPHORE            (= 0x00000002)
IGNORE HAZARD              (= 0x00000004)
MODE CONTROL MASK          (= 0x000000ff)  // The mask for the field representing above modes
DISABLE GP10x HYSTERESIS   (= 0x00000100)  //  a flag to disable GP10x CWD hysteresis on CS to CS hazards
FORCE FE METHOD SEMAPHORE  (= 0x00000200)  //  a flag to force FE method semaphore in addition to QMD seaphores on CS to CS hazards (old code)

Default values for this setting:
DEFAULT:    DRIVER CONTROLLED

------------------------------------------------------------
CONDITIONAL COPY QUEUE PROMOTION MSHYBRID
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Conditionally promote only DX runtime created copy commandlist/queue which have a cross adapter copy queued on it. If zero, all copy commandlist/queues on MSHybrid will be promoted to support 3D

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // Promote all copy commandlist/queues on MSHybrid to support 3D
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Conditionally promote only DX runtime created copy commandlist/queue which have a cross adapter copy queued

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
CONSTANT COLOR RENDERING ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

When set to ENABLED, the driver will enable the hardware's constant color rendering feature on chips that support it (beginning with GK20A).

ON, 1, TRUE, ENABLED     (= 0x00000001)
OFF, 0, FALSE, DISABLED  (= 0x00000000)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
CONSTANT COLOR RENDERING OVERRIDE COLOR ALPHA
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Constant color override for alpha channel.


Default values for this setting:
DEFAULT:    1065353216.000000

------------------------------------------------------------
CONSTANT COLOR RENDERING OVERRIDE COLOR BLUE
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Constant color override for blue channel.


Default values for this setting:
DEFAULT:    1065353216.000000

------------------------------------------------------------
CONSTANT COLOR RENDERING OVERRIDE COLOR ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

When set to ENABLED, the color used for any constant color rendering will be overridden with the color specified by CONSTANT COLOR RENDERING OVERRIDE COLOR {RED,GREEN,BLUE,ALPHA}.

ON, 1, TRUE, ENABLED     (= 0x00000001)
OFF, 0, FALSE, DISABLED  (= 0x00000000)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
CONSTANT COLOR RENDERING OVERRIDE COLOR GREEN
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Constant color override for green channel.


Default values for this setting:
DEFAULT:    0.000000

------------------------------------------------------------
CONSTANT COLOR RENDERING OVERRIDE COLOR RED
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Constant color override for red channel.


Default values for this setting:
DEFAULT:    1065353216.000000

------------------------------------------------------------
CONSUMER STEREO ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
CONTROLFLOWGUARD ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Toggle CFG on or off (For release, default is ON else default is OFF)

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
CONVERT TO LDG ENABLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey specifies enabled functionality used by convert-to-LDG

NONE                                         (= 0x00000000)
UNUSED                                       (= 0x00000001)  // Formerly OCG RANGE, which is now permanently the way of things
OCG RANGE HEADER                             (= 0x00000002)  // Use the OCG OOR check in getVAandSizeFromResource - this will enable constExpr for the header loads
ULDC LOAD                                    (= 0x00000004)  // Allow conversion from LDG to ULDC for data loads
ULDC LOAD HEADER                             (= 0x00000008)  // Allow conversion from LDG to ULDC for header loads
REDUCED TEXHEADER11                          (= 0x00000040)  // Use a simplified (VA and Size) header for anything that will *only* be done with CtLDG, DX11 only
REDUCED TEXHEADER12                          (= 0x00000080)  // Same thing as above, but for DX12
ULDC LOAD DISABLE CONST INVALIDATION         (= 0x00000100)  // Disable const cache invalidations for ULDC loads of data per PSO change. For DX12 only
ULDC LOAD HEADER DISABLE CONST INVALIDATION  (= 0x00000200)  // Disable const cache invalidations for header ULDC loads per PSO change. For DX12 only

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
CONVERT TO LDG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey specifies flags used by convert-to-LDG

NONE             (= 0x00000000)
NORANGECHECK     (= 0x00000001)  // Disable range checking for converted loads
DISABLESRV       (= 0x00000002)  // Disable convert-to-ldg for SRVs
DISABLEUAV       (= 0x00000004)  // Disable convert-to-ldg for UAVs
FORCERANGECHECK  (= 0x00000008)  // Force range-check on, even for RootSig V1.1
CROSSRESDISABLE  (= 0x00000010)  // One disallowed resource disables other resources from CONVERT TO LDG. DXIL only.

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
CONVERT TO LDG HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If specified, only this shader will get emulation. Specific type (vertex, pixel, etc) flags still apply


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
CONVERT TO LDG LDC BOUNDS MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This regkey specifies LDC-to-LDG bounds-check options (DXIL-only)

ONLY REQUIRED  (= 0x00000000)  // Only emit bounds check if requried by API
FORCE ON       (= 0x00000001)  // Force bounds checking on
FORCE OFF      (= 0x00000002)  // Force bounds checking off

Default values for this setting:
DEFAULT:    ONLY REQUIRED

------------------------------------------------------------
CONVERT TO LDG LDC TRANSLATION MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This regkey specifies LDC-to-LDG translation options (DXIL-only)

DISABLED             (= 0x00000000)  // No translation of LDC to LDG
DIVERGENT ONLY       (= 0x00000001)  // Only translate divergent, dynamically-indexed LDCs
ALL DYNAMIC INDEXED  (= 0x00000002)  // Translate all dynamically-indexed LDCs
ALL                  (= 0x00000003)  // Translate ALL LDCs

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
CONVERT TO LDG LDC USE ULDC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

If set, allow ULDC to be used if applicable instead of LDG.E.CONSTANT.SYS

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
CONVERT TO LDG SB TO LDC SRV
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A string specifying which registers to convert to LDC SRV. For Example: To convert registers 6, 10 through 15, and 20 through 25, you would set this string to '6,10-15,20-25'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
CONVERT TO LDG SB TO LDC UAV
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A string specifying which registers to convert to LDC UAV. For Example: To convert registers 6, 10 through 15, and 20 through 25, you would set this string to '6,10-15,20-25'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
CONVERT TO LDG STAGES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey specifies the shader stages to which emulation applies. Flags are BIT(DsiShaderType)

NONE             (= 0x00000000)  // No Emulation
VERTEX SHADER    (= 0x00000001)  // Emulate for vertex shaders
HULL SHADER      (= 0x00000002)  // Emulate for hull shaders
DOMAIN SHADER    (= 0x00000004)  // Emulate for domain shaders
GEOMETRY SHADER  (= 0x00000008)  // Emulate for geometry shaders
PIXEL SHADER     (= 0x00000010)  // Emulate for pixel shaders
COMPUTE SHADER   (= 0x00000020)  // Emulate for compute shaders
ALL              (= 0x0000003f)  // Emulate for all shader stages

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
CONVERT TO LDG STG CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey specifies enabled convert-to-STG functionality

NONE                   (= 0x00000000)
ENABLE STG RAW         (= 0x00000001)  // ConvertToSTG - do global stores for store raw
ENABLE STG STRUCTURED  (= 0x00000002)  // ConvertToSTG - do global stores for store structured
STG ALL                (= 0x00000003)  // ConvertToSTG generally enabled

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
CONVERT TO LDG TYPES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey specifies the types of emulation to be done

NONE             (= 0x00000000)  // No Emulation
UNUSED1          (= 0x00000001)  // Unused
UNUSED2          (= 0x00000002)  // Unused
STRUCTURED LOAD  (= 0x00000004)  // Emulate ld structured with LDG
RAW LOAD         (= 0x00000008)  // Emulate ld raw with LDG
ALL              (= 0x0000000c)  // All handled types are emulated

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
COPROC STAGING BUFFER PLACEMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls the placement of the staging buffer.

DEFAULT WITH FALLBACK  (= 0x00000000)  // Prefer Aperture memory, with fallback
APERTURE ONLY          (= 0x00000001)  // Aperture placement only.
SYSMEM ONLY            (= 0x00000002)  // Force system mem only.
HALLOC ONLY            (= 0x00000003)  // Using KMT hAllocation for present.
CPUCOPY ONLY           (= 0x00000004)  // Use CPU Copy with memcpy.
CPUSSE2COPY ONLY       (= 0x00000005)  // Use CPU Copy with SSE2 memcpy.
CPUSSE2THREAD1 ONLY    (= 0x00000006)  // Use CPU Copy with 1 thread.
CPUSSE2THREAD2 ONLY    (= 0x00000007)  // Use CPU Copy with 2 threads.
CPUSSE2THREAD4 ONLY    (= 0x00000008)  // Use CPU Copy with 4 threads.

Default values for this setting:
DEFAULT:    DEFAULT WITH FALLBACK

------------------------------------------------------------
COPROC WINSAT SPLIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Used to control winsat dwm/d3d determination

DISABLE    (= 0x00000000)  // Do not split dwm/d3d tests.
ENABLE     (= 0x00000001)  // Split dwm/d3d tests.
IGPU ONLY  (= 0x00000002)  // Direct all winsat tests onto iGPU.
DGPU ONLY  (= 0x00000003)  // Direct all winsat tests onto dGPU.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
COPY ENGINE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Copy Engine Configuration for DX1x

ENABLE CE1 USAGE      (= 0x00000200)  // UMD will use CE1 when both CE0/CE1 are available
ENABLE EXTRA CONTEXT  (= 0x00000400)  // Extra context
ENABLE CE0 USAGE      (= 0x00000800)  // UMD will use CE0 when both CE0/CE1 are available. Required for testing HW scheduling
DEFAULT               (= 0x00000200)  // Prefer CE1 over CE0

Default values for this setting:
DEFAULT:    0x00000200
	ENABLE CE1 USAGE                        
	DEFAULT                                 

------------------------------------------------------------
COPY ENGINE9
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Copy Engine Configuration for DX9

OFF                          (= 0x00000000)  // Disable the copy engine blitter
ON                           (= 0x00000001)  // Enable the copy engine blitter (default)
FORCE CE BLIT                (= 0x00000002)  // Force using CE blitter even if CE perfstrategy says otherwise
FORCE BASIC MODEL            (= 0x00000004)  // DX9: Force to run copy engine in basic model (default is basic prime)
IGNORE MIN CE TRANSFER SIZE  (= 0x00000008)  // Ignore d3dreg key MIN CE TRANSFER SIZE and allow all transfer sizes by CE
ENABLE CE1 USAGE             (= 0x00000200)  // UMD will use CE1 when both CE0/CE1 are available
MASK                         (= 0x00000f0f)  // Mask of all configuration bits
DEFAULT                      (= 0x00000201)  // Enable Copy engine blitter, but don't enable uploads

Default values for this setting:
DEFAULT:    0x00000201
	DEFAULT                                 

------------------------------------------------------------
CPL HIDDEN PROFILE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This setting indicates to the Control Panel that a given profile should not be displayed.

DISABLED, OFF, 0, FALSE  (= 0x00000000)
ENABLED, ON, 1, TRUE     (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
CPU VISIBLE QMD SEMAPHORE BUFFER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to define QMD semaphore buffer CPU visibility

OFF   (= 0x00000000)  // Allocate QMD semaphore buffer in VID (old behaviour - not visible on CPU)
HOST  (= 0x00000001)  // Allocate in HOST for CPU visibility

Default values for this setting:
DEFAULT:    0x00000001
	HOST                                    

------------------------------------------------------------
CUDA ALLOW SYSMEM FALLBACK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

When enabled, openCL/CUDA allocations allowed to overflow to host memory.

DISABLED  (= 0x00000000)  // off
ENABLED   (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
CUDA CL ENABLE PTXAS OPTIONS WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

When enabled, Check for kernel properties and set ptxas option accordingly for OpenCL kernel compilation.

DISABLED  (= 0x00000000)  // off
ENABLED   (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
CUDA CL ENABLE REPLACE KERNEL ARG CONST TO GLOBAL WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

When enabled, check for   constant kernel args and change that args to   global type

DISABLED  (= 0x00000000)  // off
ENABLED   (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
CUDA CL PLATFORM VERSION WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

When enabled, driver removes cuda version information from the return value of clGetPlatformInfo for param name CL PLATFORM VERSION.

DISABLED  (= 0x00000000)  // off
ENABLED   (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
CUDA ENABLE CL KHR GL EVENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable/Disable support for cl khr gl event extension in OpenCL driver. If enabled then OpenGL driver is assumed to support GL ARB cl event.

DISABLED  (= 0x00000000)  // off
ENABLED   (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
CUDA EXCLUDED GPUS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Unicode string containing a list of Universal GPU ids, item separator is ';'. Exposed in UI as 'CUDA - GPUs'.

NONE  (= none)

Default values for this setting:
???Tnone:    none

------------------------------------------------------------
CUDA GK110B L1 CACHE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable/Disable Kepler GK110B L1 cache

DISABLED  (= 0x00000000)  // off
ENABLED   (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
CUDA KMD USE HIGH TIMESLICE FOR NODE CUDA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Hint for KMD to use if possible an higher timeslice for context on NodeCUDA

DEFAULT   (= 0x00000000)  // default
ENABLED   (= 0x00000001)  // enabled
DISABLED  (= 0x00000002)  // disabled

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
CUDA MAP WRITE INVALIDATE OCL EXT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable/Disable the CL MAP WRITE INVALIDATE option as a supported OpenCL 1.1 extension

DISABLED  (= 0x00000000)  // off
ENABLED   (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
CUDA MAX PUSHBUFFER METHOD QUEUE LENGTH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control the maximum number of bytes to push in a pushbuffer before starting a new entry


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
CUDA STABLE PERF LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Control whether perf limit stable for cuda should be applied. Force off will always disable, force on will always enable. Default will leave it up to CUDA to decide.

FORCE OFF  (= 0x00000000)  // force off
DEFAULT    (= 0x00000001)  // default
FORCE ON   (= 0x00000002)  // force on

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
CUDA TURING OR LATER KMD POWER POLICY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable/Disable the extra coproc refcount acquired by KMD on Turing+

DEFAULT   (= 0x00000000)  // default
ENABLED   (= 0x00000001)  // enabled
DISABLED  (= 0x00000002)  // disabled

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
CUDA WDDM AVOID NODE3DLL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

WAR for GFN to avoid the Node3D Low Latency and prefer NodeSCGCompute instead

DEFAULT   (= 0x00000000)  // default
ENABLED   (= 0x00000001)  // enabled
DISABLED  (= 0x00000002)  // disabled

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
CUDA WDDM HARDWARE SCHEDULING CILP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable/Disable the use of CILP when running in hardware scheduling

DISABLED  (= 0x00000000)  // off
ENABLED   (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
CUDA WDDM PREFERRED NODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Select which Node to pick on WDDM assuming it is possible to use it

DEFAULT          (= 0x00000000)  // default
PREFER NODE3DLL  (= 0x00000001)  // node3DLL
PREFER NODE3D    (= 0x00000002)  // node3D
PREFER NODECUDA  (= 0x00000003)  // nodeCuda

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
CULL BEFORE FETCH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

value for Cull Before Fetch (after Fermi)

DYNAMIC  (= 0x00000006)
ALWAYS   (= 0x00000007)
NEVER    (= 0x00000008)
MIN      (= 0x00000006)
MAX      (= 0x00000008)

Default values for this setting:
DEFAULT:    DYNAMIC

------------------------------------------------------------
D3D10SATENABLED
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

Compiler implements  sat instruction as d3d10-compliant, meaning extra instructions are needed compared to ogl/d3d9.  Obviously, this is only implemented in the wgf2um driver.

OFF, 0, FALSE, DISABLED  (= 0x22244556)
ON, 1, TRUE, ENABLED     (= 0x33355667)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
D3D10 AAFEATUREBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various AA feature bits (DX10)

DEFAULT                                             (= 0x00000000)  // Default
FORCE AA ON R8G8B8A8 SURFACES OF PRIMARY SIZE       (= 0x00000001)  // Force AA on 4xFX8 textures the same size as the primary flip chain
FORCE AA ON R16G16B16A16F SURFACES OF PRIMARY SIZE  (= 0x00000002)  // Force AA on 4xFP16 textures the same size as the primary flip chain
FORCE AA ON R16G16B16A16 SURFACES OF PRIMARY SIZE   (= 0x00000004)  // Force AA on 4xFX16 textures the same size as the primary flip chain
FORCE AA ON R32G32B32A32F SURFACES OF PRIMARY SIZE  (= 0x00000008)  // Force AA on 4xFP32 textures the same size as the primary flip chain
FORCE AA ON Z BUFFERS OF PRIMARY SIZE               (= 0x00000010)  // Force AA on Z buffers the same size as the primary flip chain
FORCE AA ON R11G11B10 SURFACES OF PRIMARY SIZE      (= 0x00000020)  // Force AA on R11G11B10F textures the same size as the primary flip chain
FORCE AA ON R24X8 SURFACES OF PRIMARY SIZE          (= 0x00000040)  // Force AA on R24X8 textures the same size as the primary flip chain
EXPOSE VCAA ON Z16 SURFACES                         (= 0x00000080)  // Expose VCAA formats on Z16 Surfaces
FORCE MULTISAMPLING ON                              (= 0x00000100)  // Force multisampling on in the rasterizer state
NO AA ON FLIP CHAIN                                 (= 0x00000200)  // Do not force multisampling on the primary flip chain
FORCE LINEAR MIN FILTERING                          (= 0x00000400)  // Force linear min filtering on all the time
FORCE DISABLE VCAA                                  (= 0x00000800)  // Force disable VCAA (even through CPL)
FORCE NO VCAA QUALITY LEVELS                        (= 0x00001000)  // Force no export of VCAA quality levels (can still be requested via CPL)
FORCE R32F DEMOTED TO R16                           (= 0x00100000)  // Borrowed bit, since we don't really want to expose full zcull control
USE CPAA SHIM                                       (= 0x80000000)  // Create CPAA shim device
MASK                                                (= 0x80101fff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 

------------------------------------------------------------
D3D10 AODEBUGBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various SSAO (Screen Space Ambient Occlusion) bits for testing and debugging (DX10)

DEFAULT                          (= 0x01000000)  // Default
DISABLE BLENDING                 (= 0x00000001)  // Copy AO to the RT instead of blending AO with RT
DISABLE BLUR                     (= 0x00000002)  // Disable blur
RELOAD PARAMS                    (= 0x00000002)  // reload AO params after every AO rendering, reflecting changes in real time
DISPLAY LINEAR Z                 (= 0x00000004)  // Display linearized Z Buffer
DISPLAY AO ONLY                  (= 0x00000008)  // Show AO result at present.
AO DEMO MODE                     (= 0x000000f0)  // Demo AO. 0=off, 1,2,3,...,15=modes
USE NULL GPU RENDERING           (= 0x00000100)  // To measure CPU time, do not perform rendering on GPU.
DISABLE AO COMPUTATION           (= 0x00000200)  // Skip AO-rendering
DISPLAY DEBUG VIEWPORTS          (= 0x00000400)  // Show AO, linearized Z and texture atlas in reduced viewports. HBAO plus only
FORCE AO ONOFF EVERY 10 FRAMES   (= 0x00001000)  // On/off AO every 10 frames to evaluate AO effect
FORCE AO ONOFF EVERY 100 FRAMES  (= 0x00002000)  // On/off AO every 100 frames to evaluate AO effect
DISPLAY DEBUG0                   (= 0x00004000)  // Display whatever that is good for debugging.
DISPLAY DEBUG1                   (= 0x00008000)  // Display whatever that is good for debugging.
ENABLE LOG STATS AT PRESENT      (= 0x00010000)  // Trace AO results at present time
ENABLE LOG ILSTATE               (= 0x00020000)  // Trace insertion logic state
ENABLE LOG AUTOCALIBRATION       (= 0x00040000)  // Trace auto calibration
ENABLE LOG RENDERSTATES          (= 0x00080000)  // Trace current render states, RT, DS, etc
ENABLE LOG FILE                  (= 0x00100000)  // Save logs to file.
FORCE HBAO PLUS                  (= 0x01000000)  // Force HBAO plus
FORCE HBAO PLUS INDICATOR        (= 0x02000000)  // Show Indicator that you're running HBAO plus and not old driver SSAO
OVERRIDE BIT                     (= 0x80000000)  // Ignore control pannel/app-profile settings.
MASK                             (= 0x831ff7ff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x01000000
	DEFAULT                                 

------------------------------------------------------------
D3D10 AOINSERTIONLOGICBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various SSAO (Screen Space Ambient Occlusion) insertion logic bits (DX10)

DEFAULT                                           (= 0x00000018)  // Default
APP HAS Z PREPASS                                 (= 0x00000001)  // Set if the app has z-prepass
CHECK IF VIEWPORT WIDTH MATCHES PRIMARY           (= 0x00000002)  // Use an RT that has width matching to primary
CHECK IF VIEWPORT HEIGHT MATCHES PRIMARY          (= 0x00000004)  // Use an RT that has height matching to primary
RENDER AO IF NUMBER OF RT IS ONE                  (= 0x00000008)  // Render AO sufficiently if the number of RTs is one
RENDER AO IF STENCIL IS DISABLED                  (= 0x00000010)  // Render AO necessarily if stencil is disabled
RENDER AO IF CULL IS DISABLED                     (= 0x00000020)  // Render AO necessarily if cull is enabled
RENDER AO IF DEPTHFUNC IS NOT COMPARISON EQUAL    (= 0x00000040)  // Render AO necessarily if depthfunc is not comparison equal
RENDER AO WHEN RT IS USED AS SRV                  (= 0x00000080)  // Render AO when RT is used (e.g., at the tone mapping time). This is to avoid rendering AO at present time
IGNORE DRAWCALLS WITH FOUR OR LESS VERTICES       (= 0x00000100)  // Ignore draw calls that has #verteces <= 4
IGNORE ALPHA BLENDMODES                           (= 0x00000200)  // Do not render SSAO even if alpha-blending is used
RENDER AO WHEN DS IS CLEARED                      (= 0x00000400)  // Render AO when DS is cleared
RENDER AO IF DEPTH IS DISABLED                    (= 0x00000800)  // Render AO necessarily if depth is disabled
USE DS WITH MOST OPAQUE DRAWS                     (= 0x00001000)  // Build linearZ from the DS that has the largest number of draw calls in the SHADING OPAQUE state
USE RT WITH MOST OPAQUE DRAWS                     (= 0x00002000)  // Apply AO to the RT that has the largest number of draw calls in the SHADING OPAQUE state
RENDER AO WHEN RT IS USED IN RESOLVE SUBRESOURCE  (= 0x00004000)  // Render AO when RT is a source of ResolveSubresource().
RENDER AO IF CULL MODE IS FRONT                   (= 0x00008000)  // Render AO conditions include cull mode == front.
SHADING OPAQUE IF CULL MODE IS BACK               (= 0x00010000)  // Shading Opaque conditions include cull mode == back.
IGNORE WRITING COLOR FOR RENDER AO                (= 0x00020000)  // Ignore check for isWritingColor() for determining AO insertion.
RENDER AO IF SRCBLEND APLHA DSTBLEND ONE          (= 0x00040000)  // Render AO when srcBlend is srcAlpha and dstBlend is blendOne.
CALIBRATE FROM DYNAMIC DEFAULT CBS                (= 0x00800000)  // Autocalibrate from USAGE DYNAMIC CB only (0), from DYNAMIC and DEFAULT (1)
VIEWPROJECTION TYPES                              (= 0x07000000)  // Autocalibrate from a WorldViewProjection type. 0=Projection only
VIEWPROJECTION CHECK ASPECT RATIO                 (= 0x08000000)  // Check if the projection matrix's aspect ratio matches to the RT's
VIEWPROJECTION REVERSES NEAR FAR                  (= 0x10000000)  // Some apps like MGS V store the zbuffer values in reverse order
USE CPAO SHIM                                     (= 0x80000000)  // Create AO shim device. AO is completely disabled if this bit is zero.
MASK                                              (= 0x8f87ffff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000018
	DEFAULT                                 

------------------------------------------------------------
D3D11 DISABLE FREE THREADED CREATE DESTROY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows you to disable free-threaded creates/destroys - useful for debugging

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
D3D11 FORCE INVALIDATE ON RESOURCE BIND
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Hazard tracking - ON Forces a GPU wait/invalidate regardless of whether or not the hazard has been cleared by a previous wait/invalidate.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
D3D11 TILED RESOURCES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Tiled resource flags

DISABLE                       (= 0x00000001)  // Disable tiled resources cap
DISABLE TILE POOL MULTIALLOC  (= 0x00000002)  // Force single allocs for tile pools
DISABLE PTE ALLOC DEFERRAL    (= 0x00000004)  // Allocate PTEs immediately on resource creation
FORCE RT DS RESOURCES TILED   (= 0x00000008)  // Forces rendertarget and depthstencil textures to be created as tiled resources.  Dx11 only.  Doesn't force shared, present and internal resources

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
D3D12 AMPERE SUBCHSW OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Regkey disables cache invalidates on subchannel switches on GA10x+. Specify, which particular switches are affected. Also, specify if any caches need to be excluded from override

NO OVERRIDE                       (= 0x00000000)  // No overrides, any subchannel switch causes all cache invalidates
FE0 CE TO COMPUTE                 (= 0x00000001)  // Ignore invalidates on the FE0 pipe for subchannel switches from CE to COMPUTE
FE0 3D TO COMPUTE                 (= 0x00000002)  // Ignore invalidates on the FE0 pipe for subchannel switches from 3D to COMPUTE
FE0 CE TO 3D                      (= 0x00000004)  // Ignore invalidates on the FE0 pipe for subchannel switches from CE to 3D
FE0 COMPUTE TO 3D                 (= 0x00000008)  // Ignore invalidates on the FE0 pipe for subchannel switches from COMPUTE TO 3D
FE1 CE TO COMPUTE                 (= 0x00000010)  // Ignore invalidates on the FE1 pipe for subchannel switches from CE to COMPUTE
SUBCHSW TYPE MASK                 (= 0x0000001f)  // Mask of subchannel switch types
EXCLUDE INV SHADER CACHES INSTR   (= 0x01000000)  // Set the bit to invalidate instruction caches (ie exclude from override)
EXCLUDE INV SHADER CACHES DATA    (= 0x02000000)  // Set the bit to invalidate shader data caches (ie exclude from override)
EXCLUDE INV SHADER CACHES CONST   (= 0x04000000)  // Set the bit to invalidate shader constant caches (ie exclude from override)
EXCLUDE INV SHADER CACHES LOCKS   (= 0x08000000)  // Set the bit to invalidate shader locks caches (ie exclude from override)
EXCLUDE INV SAMPLER CACHE         (= 0x10000000)  // Set the bit to invalidate sampler cache (ie exclude from override)
EXCLUDE INV TEXTURE HEADER CACHE  (= 0x20000000)  // Set the bit to invalidate texture header cache (ie exclude from override)
EXCLUDE INV MASK                  (= 0x3f000000)  // Mask of invalidate bits that are assumed by default
INCLUDE INV RESTER CACHE          (= 0x40000000)  // EXPERIMENTAL (note reversed meaning): set the bit to disable invalidate of raster cache
INCLUDE INV ROP MINI CACHE        (= 0x80000000)  // EXPERIMENTAL (note reversed meaning): set the bit to disable invalidate of ROP mini cache
COMPUTE OVERRIDE                  (= 0x0000001b)  // Compute related overrides

Default values for this setting:
DEFAULT:    0x00000000
	NO OVERRIDE                             
	NO OVERRIDE                             
	NO OVERRIDE                             

------------------------------------------------------------
D3D12 BUNDLE BAKE THRESHOLDS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Lower 16b control the draw count threshold and upper 16b control the dispatch count threshold


Default values for this setting:
DEFAULT:    0x00040004

------------------------------------------------------------
D3D12 COMMAND LIST PROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables command list promotion

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
D3D12 COMMAND LIST PROMOTION FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control command list promotion behavior

ENABLE WITH DDI SHIMS                   (= 0x00000001)  // Enable command list promotion in the presence of DDI shims (can be dangerous)
ENABLE FOR MULTIPLE DIRECT QUEUES ONLY  (= 0x00000002)  // Only enable when we have multiple direct command queues
ENABLE COPY PROMOTION                   (= 0x00000004)  // Enable single copy only promotion
ENABLE BARRIER PROMOTION                (= 0x00000008)  // Enable barrier only promotion
ENABLE DXR PROMOTION                    (= 0x00000010)  // Enable DXR only promotion

Default values for this setting:
DEFAULT:    0x00000018
	ENABLE BARRIER PROMOTION                
	ENABLE DXR PROMOTION                    

------------------------------------------------------------
D3D12 DESCHEAP READ AT CL RECORD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls when the desc heap contents are read for some bind points

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Default D3D12 behavior - desc heap contents only guaranteed at execute
ON, 1, TRUE, ENABLED     (= 0x00000001)  // The app promises that the desc heap contents will be immutable from record to execute

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
D3D12 DESCRIPTOR PROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls when the we promote descriptor table entries to the root table

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Default D3D12 behavior - no promotion
CBV GRAPHICS             (= 0x00000001)  // Promote CBV descriptors from descriptor tables to the root table for graphics
CBV COMPUTE              (= 0x00000002)  // Promote CBV descriptors from descriptor tables to the root table for compute
PROMOTE UNINITIALIZED    (= 0x00000004)  // Promote descriptor table entries, even if they are uninitialized (due to root signature changes etc

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
D3D12 DESCRIPTOR PROMOTION FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls when the we promote descriptor table entries to the root table

CTAS SHIFT MASK        (= 0x0000000f)  // Encode max number of CTAS to launch. The value in the mask will indicate CTAS to launch == 1 << CTA SHIFT. All bits set == 1 thread per patch
CTAS SHIFT SHIFT       (= 0x00000000)  // Amount of right shift for the CTAS SHIFT
THREADS PER CTA MASK   (= 0x000003f0)  // Each CTA is 32 * this amount
THREADS PER CTA SHIFT  (= 0x00000004)  // Amount of right shift for THREADS PER CTA

Default values for this setting:
DEFAULT:    0x00000200
	CTAS SHIFT SHIFT                        
	0x00000200

------------------------------------------------------------
D3D12 EXECUTE INDIRECT USE MME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Run ExecuteIndirect commands on MME (as opposed to CPU)

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Use CPU for ExecuteIndirect
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Use MME for ExecuteIndirect

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
D3D12 FORCE EVICT2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Sets EvictOnlyIfNecessary flag to 0 for D3D12's Evict2CB

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Don't force eviction
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Force eviction even when not necessary

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
D3D12 FULL DESCRIPTOR TABLE SET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Should descriptor table changes use the entire root table contents

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Respect NumDescriptors param
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Ignore NumDescriptors param

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
D3D12 GPU COMPUTE SYNC KERNEL CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

Controls the enablement of multiple VA management per heap for DX12 in WDDMv2.

DISABLE                                 (= 0x00000000)
ENABLE INTER COMMANDLIST QMD SYNC       (= 0x00000001)  // Use the compute synchronization kernel to synchronize QMD usage between command lists
ENABLE COMPUTE QUEUE TIMESTAMP QUERIES  (= 0x00000002)  // Use the compute synchronization kernel to emit backend timestamps on compute queues

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
D3D12 REDIST MIN WDDM VERSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

D3D12 redist support requires a base minimum WDDM version.  WDDM versions below that don't support the redist (and cap the DDI reported values based on the WDDM version) and versions greater or equal do support it (and report DDI values greater than what was available when that WDDM version launched).


Default values for this setting:
DEFAULT:    0x00002600

------------------------------------------------------------
D3D12 RESOURCE BINDING CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

D3D12 Resource Binding Support

DEFAULT  (= 0x00000000)  // Don't override what the driver normally uses
TIER 1   (= 0x00000001)  // Use up to Tier 2 resource binding, when supported by HW.
TIER 2   (= 0x00000002)  // Use up to Tier 2 resource binding, when supported by HW.
TIER 3   (= 0x00000003)  // Use up to Tier 3 resource binding, when supported by HW.

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
D3D12 ROV IMPL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Select ROV impl path.

USE ROV OLD, OFF, DISABLED  (= 0x00000000)  // Use old conservative implementation path for ROV (low perf)
USE ROV NEW, ON, ENABLED    (= 0x00000001)  // Use new implementation path for ROV (high perf)

Default values for this setting:
DEFAULT:    USE ROV NEW

------------------------------------------------------------
D3D12 TILED RESOURCES BATCH UPDATE VA FENCES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows batching of fences when a run of UpdateTileMappings is called in sequence with no other CQ commands.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
D3D12 UMD MANAGED RESIDENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

UMD managed residency support.  All d3d12 resources are made resident when allocated.

ENABLE ON ALL RESOURCES    (= 0x00000000)  // Enable UMD managed residency.  All resource are made resident when created
EXCLUDE RUNTIME RESOURCES  (= 0x00000002)  // Runtime is responsible for managing residency of runtime created resources. UMD will not handle residency
EXCLUDE DESCRIPTORS        (= 0x00000004)  // Runtime is responsible for managing residency of descriptors only, , UMD will not handle residency

Default values for this setting:
DEFAULT:    0x00000006

------------------------------------------------------------
D3D12 VIEW INSTANCING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Sets maximum view instancing tier that can be reported through view instancing caps. If an architecture supports a tier which is less than the value set through regkey then regkey value will be discarded. i.e. setting tier to Tier-2/Tier-3 through regkey in kepler doesn't have any impact.

MAX TIER 0  (= 0x00000000)  // View instancing is disabled. Overrides arch specific reported tier.
MAX TIER 1  (= 0x00000001)  // Maximum allowed tier is Tier-1 a.k.a draw looping.
MAX TIER 2  (= 0x00000002)  // Maximum allowed tier is Tier-2.
MAX TIER 3  (= 0x00000003)  // Maximum allowed tier is Tier-3.

Default values for this setting:
DEFAULT:    MAX TIER 3

------------------------------------------------------------
D3D12 VPRS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DX12 Variable Pixel Rate Shading flags

VPRS FLAGS NONE           (= 0x00000000)
AMPERE PLUS FORCE LEGACY  (= 0x00000001)  // AmpereB+, Force Turing behaviour of Viewport based VPRS Lookup table for VS/GS Shading Rate.
FORCE VPRS NOT SUPPORTED  (= 0x00000002)  // Turing+, Force VRS not supported caps.

Default values for this setting:
DEFAULT:    0x00000000
	VPRS FLAGS NONE                         

------------------------------------------------------------
D3D12 WDDM 2 HEAP VA MANAGEMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls the enablement of multiple VA management per heap for DX12 in WDDMv2.

DISABLE ALL      (= 0x00000000)  // Do not allow multiple VAs per heap
ALLOW RTVDSV     (= 0x00000001)  // Allow RTVDSV Tier 1 heaps to have multiple VAs of different kinds
DISABLE KEPLER   (= 0x00010000)  // Disable the strategy for Kepler only
DISABLE MAXWELL  (= 0x00020000)  // Disable the strategy for Maxwell only
DISABLE PASCAL   (= 0x00040000)  // Disable the strategy for Pascal only

Default values for this setting:
DEFAULT:    DISABLE ALL

------------------------------------------------------------
D3D1X ENABLE GPUVIEWTRACER ON RELEASE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable GPUViewTracer on release builds. Debug and develop builds already have this enabled.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
D3D1X OCGCONTROL DIRECT NVIR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls OCG support for processing nvInst shaders in Dx1x.  Legacy support converts nvInst to a DAG; newer code converts it directly to NVIR (instruction list) form.

DEFAULT        (= 0x00000000)  // Use driver default behavior
FORCE ENABLE   (= 0x00000001)  // Enable direct nvInst->NVIR conversion, regardless of defaults
FORCE DISABLE  (= 0x00000002)  // Disable direct nvInst->NVIR conversion, regardless of defaults

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
D3D9 AO2INSERTIONLOGICBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various SSAO (Screen Space Ambient Occlusion) insertion logic bits (DX9)

DEFAULT                                        (= 0x00000000)  // Default
APP HAS Z PREPASS                              (= 0x00000001)  // Set if the app has z-prepass
CHECK IF VIEWPORT WIDTH MATCHES PRIMARY        (= 0x00000002)  // Use an RT that has width matching to primary
CHECK IF VIEWPORT HEIGHT MATCHES PRIMARY       (= 0x00000004)  // Use an RT that has height matching to primary
IGNORE DRAW CALLS WITH TWO OR LESS PRIMITIVES  (= 0x00000008)
VIEWPROJECTION TYPES                           (= 0x00000030)  // Autocalibrate from a WorldViewProjection type. 0=Projection only
VIEWPROJECTION 0                               (= 0x00000000)
VIEWPROJECTION 1                               (= 0x00000010)
VIEWPROJECTION 2                               (= 0x00000020)
VIEWPROJECTION CHECK ASPECT RATIO              (= 0x00000040)  // 0(prj-only), 1(view-prj), 2(UE-Bug WAR), 3
VIEWPROJECTION TRANSPOSE                       (= 0x00000080)  // ViewProj is transposed
CALIBRATE ONLY IF MINZ IS ZERO                 (= 0x00000100)  // Autocalibrate only when MinZ=0.
CALIBRATE ONLY IF MAXZ IS ONE                  (= 0x00000200)  // Autocalibrate only when MaxZ=1.
INSERT AO MATCH STATES BEFORE STRETCHRECT      (= 0x00000400)
LINEARIZE Z BEFORE ZCLEAR                      (= 0x00000800)  // Compute LinearZ before Clear(DEPTH)
INSERT AO AT PRESENT                           (= 0x00001000)  // Allow AO insertion before present
INSERT AO BEFORE STRETCHRECT                   (= 0x00002000)
INSERT AO BEFORE ZCLEAR                        (= 0x00004000)
INSERT AO MATCH STATES ON DRAW                 (= 0x00008000)
INSERT AO MATCH STATES AFTER ZCLEAR            (= 0x00010000)
PATTERN CULL ENABLED                           (= 0x00020000)
PATTERN DEPTHFUNC EQUAL                        (= 0x00040000)
PATTERN DEPTHFUNC LESSEQUAL                    (= 0x00080000)
PATTERN STENCIL ENABLED                        (= 0x00100000)
PATTERN ALPHATEST ENABLED                      (= 0x00200000)
PATTERN ALPHABLEND ENABLED                     (= 0x00400000)
PATTERN SRCBLEND SRCALPHA                      (= 0x00800000)
PATTERN DSTBLEND ONE                           (= 0x01000000)
PATTERN MRT ENABLED                            (= 0x02000000)
PATTERN DEPTHTEST ENABLED                      (= 0x04000000)
PATTERN COLORWRITE ENABLED                     (= 0x08000000)
PATTERN COLORFORMAT ENABLED                    (= 0x10000000)
PATTERN COLORWRITE3 ENABLED                    (= 0x20000000)
PATTERN SRGBWRITE ENABLED                      (= 0x40000000)
MASK                                           (= 0x7fffffff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 
	VIEWPROJECTION 0                        

------------------------------------------------------------
D3D9 AO2INSERTIONPATTERNMATCHMASK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various SSAO (Screen Space Ambient Occlusion) insertion logic bits (DX9)

DEFAULT                           (= 0x00000000)  // Default
PATTERN CULL ENABLED MASK         (= 0x00020000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN CULL ENABLED
PATTERN DEPTHFUNC EQUAL MASK      (= 0x00040000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN DEPTHFUNC EQUAL
PATTERN DEPTHFUNC LESSEQUAL MASK  (= 0x00080000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN DEPTHFUNC LESSEQUAL
PATTERN STENCIL ENABLED MASK      (= 0x00100000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN STENCIL ENABLED
PATTERN ALPHATEST ENABLED MASK    (= 0x00200000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN ALPHATEST ENABLED
PATTERN ALPHABLEND ENABLED MASK   (= 0x00400000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN ALPHABLEND ENABLED
PATTERN SRCBLEND SRCALPHA MASK    (= 0x00800000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN SRCBLEND SRCALPHA
PATTERN DSTBLEND ONE MASK         (= 0x01000000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN DSTBLEND ONE
PATTERN MRT ENABLED MASK          (= 0x02000000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN MRT ENABLED
PATTERN DEPTHTEST ENABLED MASK    (= 0x04000000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN DEPTHTEST ENABLED
PATTERN COLORWRITE ENABLED MASK   (= 0x08000000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN COLORWRITE ENABLED
PATTERN COLORFORMAT ENABLED MASK  (= 0x10000000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN COLORFORMAT ENABLED
PATTERN COLORWRITE3 ENABLED MASK  (= 0x20000000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN COLORWRITE3 ENABLED
PATTERN SRGBWRITE ENABLED MASK    (= 0x40000000)  //  == D3D9 AO2INSERTIONLOGICBITS NAMESPACE::PATTERN SRGBWRITE ENABLED
MASK                              (= 0x7ffe0000)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 

------------------------------------------------------------
D3D9 AO2WARBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various SSAO (Screen Space Ambient Occlusion) WAR logic bits (DX9)

DEFAULT                              (= 0x00000000)  // Default
APP FIELD                            (= 0x0000ffff)  // Application specific enum value
COLOR FORMAT IS A2R10G10B10          (= 0x00010000)  // Restrict color format to A2R10G10B10
COLOR FORMAT IS A16B16G16R16F        (= 0x00020000)  // Restrict color format to A16B16G16R16F
ALLOW GREATER THAN EQUAL TO PRIMARY  (= 0x01000000)  // Allow matching surfaces to be GTE to the primary

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
D3D9 AODEBUGBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various SSAO (Screen Space Ambient Occlusion) bits for testing and debugging (DX9)

DEFAULT                          (= 0x00000000)  // Default
DISABLE BLENDING                 (= 0x00000001)  // Copy AO to the RT instead of blending AO with RT
RENDER AGAINST WHITE             (= 0x00000001)  // Draw AO on top of a white background so it is more visible. HBAO+ only
DISABLE BLUR                     (= 0x00000002)  // Disable blur
RELOAD PARAMS                    (= 0x00000002)  // reload AO params after every AO rendering, reflecting changes in real time
DISPLAY LINEAR Z                 (= 0x00000004)  // Display linearized Z Buffer
DISPLAY AO ONLY                  (= 0x00000008)  // Show AO result at present.
AO DEMO MODE                     (= 0x000000f0)  // Demo AO. 0=off, 1,2,3,...,15=modes
USE NULL GPU RENDERING           (= 0x00000100)  // To measure CPU time, do not perform rendering on GPU.
DISABLE AO COMPUTATION           (= 0x00000200)  // Skip AO-rendering
DISPLAY DEBUG VIEWPORTS          (= 0x00000400)  // Show AO, linearized Z and texture atlas in reduced viewports. HBAO plus only
FORCE AO ONOFF EVERY 10 FRAMES   (= 0x00001000)  // On/off AO every 10 frames to evaluate AO effect
FORCE AO ONOFF EVERY 100 FRAMES  (= 0x00002000)  // On/off AO every 100 frames to evaluate AO effect
DISPLAY DEBUG0                   (= 0x00004000)  // Display whatever that is good for debugging.
DISPLAY DEBUG1                   (= 0x00008000)  // Display whatever that is good for debugging.
ENABLE LOG STATS AT PRESENT      (= 0x00010000)  // Trace AO results at present time
ENABLE LOG ILSTATE               (= 0x00020000)  // Trace insertion logic state
ENABLE LOG AUTOCALIBRATION       (= 0x00040000)  // Trace auto calibration
ENABLE LOG RENDERSTATES          (= 0x00080000)  // Trace current render states, RT, DS, etc
ENABLE LOG FILE                  (= 0x00100000)  // Save logs to file.
ENABLE LOG ILPARTICLE            (= 0x00200000)  // Trace insertion logic isParticles criteria
ENABLE LOG RENDERSTATE FILE      (= 0x00400000)  // Save log of renderstates
FORCE HBAO PLUS                  (= 0x01000000)  // Force HBAO plus
FORCE HBAO PLUS INDICATOR        (= 0x02000000)  // Show Indicator that you're running HBAO plus and not old driver SSAO
OVERRIDE BIT                     (= 0x80000000)  // Ignore control pannel/app-profile settings.
MASK                             (= 0x837ff7ff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 

------------------------------------------------------------
D3D9 AOINSERTIONLOGICBITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various SSAO (Screen Space Ambient Occlusion) insertion logic bits (DX9)

DEFAULT                                             (= 0x000803c2)  // Default
APP HAS Z PREPASS                                   (= 0x00000001)  // Set if the app has z-prepass
CHECK IF VIEWPORT WIDTH MATCHES PRIMARY             (= 0x00000002)  // Use an RT that has width matching to primary
CHECK IF VIEWPORT HEIGHT MATCHES PRIMARY            (= 0x00000004)  // Use an RT that has height matching to primary
IGNORE DRAW CALLS WITH TWO OR LESS PRIMITIVES       (= 0x00000008)
INSERT AO BEFORE STRETCHRECT                        (= 0x00000010)
INSERT AO BEFORE ZCLEAR                             (= 0x00000020)
INSERT AO BEFORE PARTICLES ON DRAW                  (= 0x00000040)
PARTICLES IF CULL IS DISABLED                       (= 0x00000080)
PARTICLES IF DEPTHFUNC IS NOT COMPARISON EQUAL      (= 0x00000100)
PARTICLES IF STENCIL IS DISABLED                    (= 0x00000200)
PARTICLES IF ALPHA TEST DISABLED                    (= 0x00000400)
PARTICLES IF SRCBLEND IS SRCALPHA                   (= 0x00000800)
INSERT AO BEFORE POSTPROCESSING ON DRAW             (= 0x00001000)
INSERT AO BEFORE POSTPROCESSING ON ZCLEAR           (= 0x00002000)
POSTPROCESSING IF NUMBER OF RT IS ONE               (= 0x00004000)
POSTPROCESSING IF DEPTHTEST IS DISABLED             (= 0x00008000)
POSTPROCESSING IF CULL IS ENABLED                   (= 0x00010000)
PARTICLES IF ALPHA TEST ENABLED                     (= 0x00020000)
USE RT WITH MOST OPAQUE DRAWS                       (= 0x00040000)
PARTICLES IF DEPTHFUNC IS NOT COMPARISON LESSEQUAL  (= 0x00080000)
CALIBRATE ONLY IF MINZ IS ZERO                      (= 0x00100000)  // Autocalibrate only when MinZ=0.
CALIBRATE ONLY IF MAXZ IS ONE                       (= 0x00200000)  // Autocalibrate only when MaxZ=1.
COLOR FORMAT IS A2R10G10B10                         (= 0x00400000)  // Restrict color format to A2R10G10B10
PARTICLES IF DESTBLEND IS ONE                       (= 0x00800000)
VIEWPROJECTION TYPES                                (= 0x03000000)  // Autocalibrate from a WorldViewProjection type. 0=Projection only
VIEWPROJECTION CHECK ASPECT RATIO                   (= 0x04000000)  // 0(prj-only), 1(view-prj), 2(UE-Bug WAR), 3
VIEWPROJECTION TRANSPOSE                            (= 0x08000000)  // ViewProj is transposed
LINEARIZE Z BEFORE ZCLEAR                           (= 0x10000000)  // Compute LinearZ before Clear(DEPTH)
INSERT AO AT PRESENT                                (= 0x20000000)  // Allow AO insertion before present
USE CPAO SHIM                                       (= 0x80000000)  // Create AO layer. AO is completely disabled if this bit is zero.
MASK                                                (= 0xbfffffff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x000803C2
	DEFAULT                                 

------------------------------------------------------------
D3D9 CONTROL BITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various control bits (DX9)

DEFAULT                            (= 0x00000000)  // Default
MAX REG FOR BANK SIZE 128 MASK     (= 0x0000000f)  // Set maxRRegsAllowed for rRegBankSize == 128
MAX REG FOR BANK SIZE 128 DEFAULT  (= 0x00000000)  // No override
MAX REG FOR BANK SIZE 128 24       (= 0x00000001)  // Set maxRRegsAllowed = 24
MAX REG FOR BANK SIZE 128 30       (= 0x00000003)  // Set maxRRegsAllowed = 30
MAX REG FOR BANK SIZE 128 40       (= 0x00000005)  // Set maxRRegsAllowed = 40
MAX REG FOR BANK SIZE 128 60       (= 0x00000007)  // Set maxRRegsAllowed = 60
MAX REG FOR BANK SIZE 128 120      (= 0x00000009)  // Set maxRRegsAllowed = 120
MAX REG FOR BANK SIZE 256 MASK     (= 0x000000f0)  // Set maxRRegsAllowed for rRegBankSize == 256
MAX REG FOR BANK SIZE 256 DEFAULT  (= 0x00000000)  // No override
MAX REG FOR BANK SIZE 256 24       (= 0x00000010)  // Set maxRRegsAllowed = 24
MAX REG FOR BANK SIZE 256 26       (= 0x00000020)  // Set maxRRegsAllowed = 26
MAX REG FOR BANK SIZE 256 30       (= 0x00000030)  // Set maxRRegsAllowed = 30
MAX REG FOR BANK SIZE 256 34       (= 0x00000040)  // Set maxRRegsAllowed = 34
MAX REG FOR BANK SIZE 256 40       (= 0x00000050)  // Set maxRRegsAllowed = 40
MAX REG FOR BANK SIZE 256 48       (= 0x00000060)  // Set maxRRegsAllowed = 48
MAX REG FOR BANK SIZE 256 60       (= 0x00000070)  // Set maxRRegsAllowed = 60
MAX REG FOR BANK SIZE 256 80       (= 0x00000080)  // Set maxRRegsAllowed = 80
MAX REG FOR BANK SIZE 256 120      (= 0x00000090)  // Set maxRRegsAllowed = 120
DISABLE DYNAMIC VB PROMOTION       (= 0x00002000)  // Disable dynamic VB promotion
DISALLOW FORCE VSYNC               (= 0x00004000)  // Disallow forced vsync (includes adaptive vsync)
DISALLOW CPU VISIBLE SEGMENT       (= 0x00008000)  // Disallow the use of the CPU Visible segement
MASK                               (= 0x0000e0ff)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	MAX REG FOR BANK SIZE 128 DEFAULT       
	MAX REG FOR BANK SIZE 256 DEFAULT       

------------------------------------------------------------
D3D9 OCGCONTROL DIRECT NVIR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls OCG support for processing nvInst shaders in Dx9.  Legacy support converts nvInst to a DAG; newer code converts it directly to NVIR (instruction list) form.

DEFAULT        (= 0x00000000)  // Use driver default behavior
FORCE ENABLE   (= 0x00000001)  // Enable direct nvInst->NVIR conversion, regardless of defaults
FORCE DISABLE  (= 0x00000002)  // Disable direct nvInst->NVIR conversion, regardless of defaults

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
D3DOGL GPU MAX POWER
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum power, that GPU is allowed to use

DEFAULTPOWER  (= 0)

Default values for this setting:
???T0:    0

------------------------------------------------------------
D3DOGL SANDBAG DEVICEID
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Treat given devId as being part of the sandbag devId list.  All follow-on allow/deny mechanisms still apply.  Intended to test new sandbag allow/deny mechanisms on any GPU.

DEVID MASK         (= 0x00ffffff)  // mask for devId to be sandbagged
DEVID ANY          (= 0x00ffffff)  // use this pseudo devId to sandbag all devIds
IGNORE ALLOW LIST  (= 0x01000000)  // If devId is sandbagged by this key, then it controls whether allowlist should be ignored.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
D3DOGL UNSANDBAG VIEWPERF
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Unsandbag Viewperf.

DISABLE  (= 0x00000000)  // No special handling for Viewperf.
ENABLE   (= 0xe25aba79)  // unsandbag Viewperf

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
D3D DBG AFTER DRAW DISPATCH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Methods ( WFI/cache invalidation etc) to be inserted after every draw and dispatch - Dx1X only

DBG NONE                                  (= 0x00000000)  // no method to be inserted
DBG WFI                                   (= 0x00000001)  // insert WFI after every draw/dispatch
DBG CACHE INVALIDATE NONWFI               (= 0x00000002)  // insert WFI-less version of methods for cache invalidation
DBG CACHE INVALIDATE WFI                  (= 0x00000004)  // insert WFI after cache invalidation methods
DBG CACHE INVALIDATE PSB                  (= 0x00000008)  // maxwell+ only. Any HW which does not support falls back to WFI invalidate
DBG INVALIDATE TEX HEADERS                (= 0x00000010)  // invalidate tex headers
DBG INVALIDATE SAMPLERS                   (= 0x00000020)  // invalidate samplers
DBG INVALIDATE SHADERS                    (= 0x00000040)  // invalidate shaders
DBG INVALIDATE CONSTANTS                  (= 0x00000080)  // invalidate constants
DBG INVALIDATE TEX OR SURF DATA           (= 0x00000100)  // invalidate tex or surf data
DBG INVALIDATE ALL TARGETS                (= 0x000001f0)  // invalidate all the targets like texheaders,samplers,shaders,constants
DBG ON GRAPHICS                           (= 0x10000000)  // insert method on graphics pipeline
DBG ON COMPUTE                            (= 0x20000000)  // insert method on compute pipeline
GRAPHICS NONWFI INVALIDATE CACHE FOR ALL  (= 0x100001f2)  // insert non-wfi invalidate method on all the targets for graphics
GRAPHICS WFI INVALIDATE CACHE FOR ALL     (= 0x100001f4)  // insert wfi invalidate method on all the targets for graphics
GRAPHICS PSB INVALIDATE CACHE FOR ALL     (= 0x100001f8)  // insert psb invalidate method on all the targets for graphics
COMPUTE WFI INVALIDATE CACHE FOR ALL      (= 0x200001f4)  // insert wfi invalidate method on all the targets for compute
GRAPHICS WFI                              (= 0x10000001)  // insert WFI after draw/dispatch for 3D
COMPUTE WFI                               (= 0x20000001)  // insert WFI after draw/dispatch for compute

Default values for this setting:
DEFAULT:    0x00000000
	DBG NONE                                

------------------------------------------------------------
D3D DBG AFTER DRAW DISPATCH FREQUENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

The frequency at which the methods(WFI/cacheinvalidation etc) are to be inserted in a given frame

DBG DEFAULT            (= 0x00000000)  // special default case, insert after every draw/dispatch call
DBG EVERY              (= 0x00010001)  // insert after every draw/dispatch call
DBG DRAW MASK          (= 0x0000ffff)  // draw mask frequency (upto every 65535 draw calls) 
DBG DISPATCH MASK      (= 0xffff0000)  // dispatch frequency (upto every 65535 dispatch calls)
DRAW FRQUENCY 20       (= 0x00000014)  // insert after every 20 draw calls
DISPATCH FRQUENCY 20   (= 0x00140000)  // insert after every 20 dispatch calls
DRAW FRQUENCY 100      (= 0x00000064)  // insert after every 100 draw calls
DISPATCH FRQUENCY 100  (= 0x00640000)  // insert after every 100 dispatch calls

Default values for this setting:
DEFAULT:    0x00000000
	DBG DEFAULT                             
	DBG DEFAULT                             
	DBG DEFAULT                             

------------------------------------------------------------
D3D DBG DUMP AFTER DRAW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Dump rendering data after every draw and dispatch - Dx1X only

DUMP NONE                (= 0x00000000)  // nothing to be dumped
DUMP PRE DRAW            (= 0x00000001)  // dump images before the draw/dispatch
DUMP RTV                 (= 0x00000010)  // dump the content of all rendertarget views - RTVs
DUMP DSV                 (= 0x00000020)  // dump the content of all depth stencil views - DSVs
DUMP STREAM              (= 0x00000040)  // dump the geometry content using stream outputs
DUMP PL STATS            (= 0x00000100)  // dump pipeline statistics
DUMP ZPASS               (= 0x00000200)  // dump z passing statistics
DUMP SO STATS            (= 0x00000400)  // dump stream out statistics
DUMP GFX UAV             (= 0x00001000)  // dump the content of graphics unordered access views - UAVs
DUMP GFX SRV             (= 0x00002000)  // dump the content of graphics shader resource views - SRVs or texture
DUMP GFX CBV             (= 0x00004000)  // dump the content of graphics constant buffer views - CBVs
DUMP GFX GSCB            (= 0x00008000)  // dump the content of the graphics state constant buffer - GSCB
DUMP GFX TEXHEADERS      (= 0x00010000)  // dump the content of the graphics texture headers
DUMP COMPUTE UAV         (= 0x00100000)  // dump the content of compute unordered access views - UAVs
DUMP COMPUTE SRV         (= 0x00200000)  // dump the content of compute shader resource views - SRVs or texture
DUMP COMPUTE CBV         (= 0x00400000)  // dump the content of compute constant buffer views - CBVs
DUMP COMPUTE GSCB        (= 0x00800000)  // dump the content of the compute state constant buffer - GSCB
DUMP COMPUTE TEXHEADERS  (= 0x01000000)  // dump the content of the compute texture headers
IGNORE BAKED BUNDLES     (= 0x10000000)  // do not dump data per draw calls inside baked bundles

Default values for this setting:
DEFAULT:    0x00000000
	DUMP NONE                               

------------------------------------------------------------
D3D DBG MISC AFTER DRAW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Misc operations we can do after every draw and dispatch - Dx1X only

MISC NONE              (= 0x00000000)  // nothing to be dumped
MISC DISPATCH FLUSH    (= 0x00000001)  // force a command buffer dispatch and flush after every draw call
MISC CHECK DESCRIPTOR  (= 0x00000002)  // do an extra check on descriptor before a draw call - ASSERT build only
IGNORE BAKED BUNDLES   (= 0x10000000)  // do not do any misc operations per draw calls inside baked bundles

Default values for this setting:
DEFAULT:    0x00000000
	MISC NONE                               

------------------------------------------------------------
D3D DBG VALIDATION MISC ACTIVITY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable various types of operations to be done while validating dx12 driver

DISABLED, OFF, 0               (= 0x00000000)  // Disabled
FORCE DDI CRITICAL SECTION     (= 0x00000004)  // Force a critical section on all DX12 commandlist DDI
FORCE DDI INTERLOCKED CHECK    (= 0x00000008)  // Force an interlocked check on all DX12 commandlist DDI
INCREASE TIME DDI CALLS        (= 0x00000010)  // Insert 1ms Sleep in command list DDI calls to catch reentrancy (g IncreaseTimer)
USE ZERO FOR INIT DESCRIPTORS  (= 0x00000020)  // Instead of using a canonical, valid null desc, use zeros

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
D3D DC CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Deferred context control flags

DISABLE DC D3D11      (= 0x00000001)  // Disable DC cap for D3D11 (falls back to runtime replay)
ENABLE REPLAY D3D12   (= 0x00000004)  // Use driver replay DC on D3D12.  Else baked.
ENABLE REPLAY ALL     (= 0x00000008)  // Use driver replay DC all the time.
ENABLE BAKED BUNDLES  (= 0x00000010)  // Use baked (non-replay) bundles.

Default values for this setting:
DEFAULT:    0x00000010
	ENABLE BAKED BUNDLES                    

------------------------------------------------------------
D3D ENABLE VALIDATION SHIM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables various validation checks (eg: reentrancy) in the Dx12 driver to catch appside bugs.

OFF, DISABLED  (= 0x00000000)  // disable dx12 validation shim
ON, ENABLED    (= 0x00000001)  // enable dx12 validation shim.

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
D3D OCGCONTROL DRIVE COMPILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Master on / off switch for OCG compiler driver.

OFF, 0, FALSE, DISABLED  (= 0x12542653)
ON, 1, TRUE, ENABLED     (= 0x78260374)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
D3D OCGCONTROL DRIVE COMPILE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Settings for OCG compilation steering.

USE ALWAYS       (= 0x00000001)
RANDOM ORDER     (= 0x00000002)
VALIDATION       (= 0x00000004)
SPACE SEARCH     (= 0x00000008)
DEBUG OUTPUT     (= 0x00000010)
AGGRESSIVE       (= 0x00000020)
HASH COPARGS     (= 0x00000040)
TRIMMED VECTORS  (= 0x00000080)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
D3D OCGCONTROL KNOBS FILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables OCG to read a knobs description file to steer compilation process.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // on
ON, 1, TRUE, ENABLED     (= 0x00000001)  // off

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
D3D OCGCONTROL KNOBS FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Name of the knobs file passed to OCG.


Default values for this setting:
DEFAULT:    C:\ocg knobs.txt

------------------------------------------------------------
D3D OCGCONTROL NVIR HASH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Use NVIR hash computed by OCG.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
D3D REFCOUNT SPIN TIME AFTER WAKEUP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Amount of spin time in microseconds after RefCount::hasReached wakes up after a buffer event.  Smaller values save power at the expense of performance.


Default values for this setting:
DEFAULT:    0x00000064

------------------------------------------------------------
D3D STEREO BLACK LIST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Prohibit stereo shim in DX apps

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
D3D TEMP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Temp key for misc driver experiments


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
D3D TEX SMP MERGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Decides whether to use the MME program (default) or CPU to resolve tex-sampler pairs

DISABLE MME RESOLVE D3D11            (= 0x00000001)  // Fallback to CPU resolution of tex-sampler pairs for D3D11
DISABLE MME RESOLVE D3D12            (= 0x00000002)  // Fallback to CPU resolution of tex-sampler pairs for D3D11
DISABLE MME RESOLVE D3D11 ON KEPLER  (= 0x00000010)  // Fallback to CPU resolution of tex-sampler pairs for D3D11
DISABLE MME RESOLVE D3D12 ON KEPLER  (= 0x00000020)  // Fallback to CPU resolution of tex-sampler pairs for D3D11

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
D3D WS MOSAIC CLIP TO SUBDEV
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Clip rendering to SLI subdevice bounds in Mosaic mode

OFF             (= 0x00000000)  // Use driver default behavior
CLIP PRIMARY    (= 0x00000001)  // clip rendering to primary rendertargets
CLIP OFFSCREEN  (= 0x00000002)  // clip rendering to offscreen rendertargets (by heuristic)
CLIP INDICATOR  (= 0x10000000)  // Indicate GPU bounds by leaving a frame blank (debug only)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
D3D WS MOSAIC CLIP TO SUBDEV OVERLAP H
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Viewport overlap between Mosaic GPUs in x direction

MIN  (= 0x00000000)
MAX  (= 0x0000ffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
D3D WS MOSAIC CLIP TO SUBDEV OVERLAP V
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Viewport overlap between Mosaic GPUs in y direction

MIN  (= 0x00000000)
MAX  (= 0x0000ffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
D3D WS STEREO SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable DX autostereo support on Quadro

OFF         (= 0x00000000)  // Use driver default behavior
FULLSCREEN  (= 0x00000001)  // allow fullscreen apps to enable stereo
WINDOWED    (= 0x00000002)  // allow windowed apps to enable stereo

Default values for this setting:
DEFAULT:    0x00000001
	FULLSCREEN                              

------------------------------------------------------------
DACACHELINESIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

value for NV5097 SET DA ATTRIBUTE CACHE LINE method

BYTES128  (= 0x00000000)
BYTES64   (= 0x00000001)
BYTES32   (= 0x00000002)
DYNAMIC   (= 0x00000003)
MIN       (= 0x00000000)
MAX       (= 0x00000003)

Default values for this setting:
DEFAULT:    DYNAMIC

------------------------------------------------------------
DBGFLUSHTYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

force flush on certain driver activity (DX10+ only, and only when enabled via the #define in dbgBits.h)

DBG FLUSH NONE              (= 0x00000000)
DBG FLUSH STATE OBJECTS     (= 0x00000001)  // DepthState, BlendState, RasterizerState
DBG FLUSH STATE UPDATES     (= 0x00000002)  // SetScissorRects, programUserClipState, handleSetViewports, programStreamingOutput
DBG FLUSH RESOURCE BINDS    (= 0x00000004)  // SetRenderTargets, bindAsSOTarget, DepthStencilView::bind
DBG FLUSH RESOURCE UPDATES  (= 0x00000008)  // TeslaSysmemTransfer::uploadData
DBG FLUSH SHADER            (= 0x00000010)  // programVsToGsLink, programTransformOutput
DBG FLUSH CLEARS            (= 0x00000020)  // clearRenderTarget, clearDepthStencil 
DBG FLUSH 3D                (= 0x00000040)  // draw[instanced], drawIndexed[instanced]
DBG FLUSH PIPELINE          (= 0x00000080)  // Queries, predication, syncronization between pipelines (semaphores)
DBG FLUSH ASYNCCOPY         (= 0x00000100)  // CipherDMA
DBG FLUSH COMPUTE           (= 0x00000200)  // dispatch, dispatchIndirect
DBG FLUSH COMPUTE STATE     (= 0x00000400)  // Compute specific state setup
DBG FLUSH CE                (= 0x00000800)  // copy engine

------------------------------------------------------------
DEBUG SLI NVAPI FUNCTIONALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Debug bitfield for disabling/modifying some functions in SLI NVAPI

DEFAULT                                  (= 0x00000000)  // All functions of SLI NVAPI are working by default
DISCARD HINT DISABLE                     (= 0x00000001)  // Disabled SetResourceHint() discard
BROADCAST HINT DISABLE                   (= 0x00000002)  // Disabled SetResourceHint() broadcast
RESPECT SYNC HINT DISABLE                (= 0x00000004)  // Disabled SetResourceHint() respect sync
BEGIN END DISABLE                        (= 0x00000008)  // Disabled BeginResourceRendering/EndResourceRendering
REPORT NO SLI SUPPORT                    (= 0x00000010)  // Force single GPU topology report from GetCurrentSliState()
REPORT ALL BEGIN END ENTRIES IN SLI LOG  (= 0x00000020)  // Log every entry into driver Begin/End function

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
DEFAULT ALLOC LIST SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

to set the initial Alloc list size used by KMD. If not set, driver defaults to 0x00 for all Channel types. Will work only on debug & develop drivers.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
DEFAULT PATCH LIST SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

to set the initial Patch list size used by KMD. If not set, driver defaults to 0x400 for 3D Channel & 0x200 for rest of the Channel types. Will work only on debug & develop drivers.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
DIRECTFLIP CONFIG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various DirectFlip controls

DISABLED, OFF, 0      (= 0x00000000)
INHIBIT FLUSH, ON, 1  (= 0x00000001)  // Do not invoke Pusher->flush() on Present
MASK                  (= 0x00000001)  // Mask of all valid bits

Default values for this setting:
DEFAULT:    0x00000001
	INHIBIT FLUSH                           

------------------------------------------------------------
DISABLEINT3
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disable INT 3 during asserts

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISABLEZBUFFERMIRROR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x51661620)
ON, 1, TRUE, ENABLED     (= 0x60792907)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISABLE 64 BIT REFERENCE COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Disable 64-bit reference counts; fallback to 32-bit reference counts.  Relevant on GA10x+.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // GA10x+ uses 64-bit values for reference counts.
ON, 1, TRUE, ENABLED     (= 0x00000001)  // GA10x+ uses 32-bit values for reference counts

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
DISABLE ALLOCINUSE WAR MSHYBRID
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disable AllocInUse WAR on MS hybrid

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // WAR is NOT disabled
ENABLED, ON, 1, TRUE     (= 0x00000001)  // WAR is disabled

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
DISABLE ASSERTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disable all asserts in debug drivers.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISABLE ASSERT SUPPRESSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disable the assert suppression done by the driver in DVS system

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISABLE ATOMIC REDUCTION OPTS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Disable atomic instruction reduction opts in the shader translator.

DISABLE PIXEL SHADER ATOM            (= 0x00000001)  // Disable general atomic optimizations for pixel shaders
DISABLE PIXEL SHADER SUATOM          (= 0x00000002)  // Disable surface atomic optimizations for pixel shaders
DISABLE PIXEL SHADER ALLOC SHFL      (= 0x00000004)  // Disable SHFL optimization on Alloc instructions for pixel shaders
DISABLE PIXEL SHADER CONSUME SHFL    (= 0x00000008)  // Disable SHFL optimization on Consume instructions for pixel shaders
DISABLE COMPUTE SHADER ATOM          (= 0x00000010)  // Disable general atomic optimizations for compute shaders
DISABLE COMPUTE SHADER SUATOM        (= 0x00000020)  // Disable surface atomic optimizations for compute shaders
DISABLE COMPUTE SHADER ALLOC SHFL    (= 0x00000040)  // Disable SHFL optimization on Alloc instructions for compute shaders
DISABLE COMPUTE SHADER CONSUME SHFL  (= 0x00000080)  // Disable SHFL optimization on Consume instructions for compute shaders
DISABLE COMPUTE SHADER MINMAX        (= 0x00000100)  // Disable atomic min + max optimization (compute shader only)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
DISABLE COMPUTE MME FOR OPERATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

Setting to disable compute MME stuff for the said operation on supported hardware(i.e GA10x+) 

CPU SIDE CB UPLOAD BY I2MME       (= 0x00000001)  // Disable  Use of I2DmaWrite for CPU-side sections of GSCB
FILTER SETDESCRIPTORHEAP METHODS  (= 0x00000002)  // Disable  MME macro that filter redundant SetTexHeader/Sampler pool VA methods
SAVE RESTORE MME ON FE1           (= 0x00000004)  // Disable  Save-Restore macros that get injected on compute VEID switches on FE1
COPY GSCSECTIONS TO GSCB          (= 0x00000008)  // Disable  MME macro that uploads few global shader constants like texheader pool VA into ComputestateCB and fallback to i2m path
POLL FOR DATARAM REUSE            (= 0x00000010)  // Disable  MME macro that polls to check if DataRam can be overwritten by next dispatch without corrupting earlier one
BUILD QMD                         (= 0x00000100)  // Disable  building QMDs with MME
INCREMENTAL BUILD QMD             (= 0x00000200)  // Disable  incremental building of QMDs with MME

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
DISABLE MME MAX INSTRUCTIONS CHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Set PRI MME MAX INSTRUCTIONS=0 to disable the mme max instructions check.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
DISABLE MSHYBRID SYNC ON RRI
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

No sync between 3D and CE from RRI on MS hybrid

DISABLED, OFF, 0, FALSE  (= 0x00000000)  //  sync between 3D and CE from RRI on MS hybrid
ENABLED, ON, 1, TRUE     (= 0x00000001)  // No sync between 3D and CE from RRI on MS hybrid

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
DISABLE PIXEL KILL
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

Disable kill instructions in the pixelshaders (as if they were nops)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISABLE POST L2 COMPRESSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

Disable Post-L2 Compression (PLC) on Turing+.

NEVER, OFF, 0, FALSE    (= 0x00000000)  // Enable PLC on all hardware that supports it.
ALWAYS, ON, 1, TRUE     (= 0x00000001)  // If set, disable PLC on all hardware.
DISABLE IF BUG 3046774  (= 0x00000002)  // If set, disable PLC on hardware affected by bug 3046774.

Default values for this setting:
DEFAULT:    0x00000000
	NEVER                                   

------------------------------------------------------------
DISABLE SHDR IMGFROMCPU
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x89236321)
ON, 1, TRUE, ENABLED     (= 0x76632452)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISABLE SRGB
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DX9 only: disables sRGB writes when blending is disabled

OFF                              (= 0x00000000)  // Allow sRGB
DISABLE WRITES ON BLEND DISABLE  (= 0x00000001)  // Ignore sRGB writes only when blend is disabled
DISABLE WRITE CONVERSION         (= 0x00000002)  // Ignore sRGB writes
DISABLE READ CONVERSION          (= 0x00000004)  // Ignore sRGB reads
DISABLE BLIT READ CONVERSION     (= 0x00000008)  // Ignore sRGB blit reads
DISABLE BLIT WRITE CONVERSION    (= 0x00000010)  // Ignore sRGB blit writes
ON                               (= 0x0000001e)  // Disable sRGB
DISABLE DSR SRGB                 (= 0x00000020)  // Disable DSR sRGB

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
DISABLE STENCIL ZBC DX12
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLE STENCIL ZBC for Dx12 apps

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISABLE USER DVM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
DISABLE Z16
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disable Z16 (replaces all Z16 requests with Z24X8)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISALLOW AGP VB
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x38956423)
ON, 1, TRUE, ENABLED     (= 0x38499743)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISCARDRESOURCE HANDLING FOR TILEDRESOURCES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

In what situations should we issue a clear for DiscardResource for the purposes of tiled resources and aliasing

ONLY CLEAR ON REQ HW  (= 0x00000000)  // Only clear when we believe the HW requires it.
CLEAR ON ALL HW       (= 0x00000001)  // Clear on all HW - even HW that shouldn't need it.
SKIP CLEAR ON ALL HW  (= 0x00000002)  // Don't do clears on HW that needs it or not.
CLEAR HW MASK         (= 0x0000000f)  // Mask of the 3 HW selection modes.
SKIP CLEAR RTVS       (= 0x00000010)  // Should RTV discards be ignored?
SKIP CLEAR DSVS       (= 0x00000020)  // Should DSV discards be ignored?

Default values for this setting:
DEFAULT:    0x00000000
	ONLY CLEAR ON REQ HW                    
	ONLY CLEAR ON REQ HW                    

------------------------------------------------------------
DISCARD ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Maxwell discard behavior controls.

DISABLE                  (= 0x00000000)  // Disable discards
ENABLE RTV DISCARD       (= 0x00000001)  // Enable RTV discards
ENABLE SRV DISCARD       (= 0x00000002)  // Enable SRV discards
ENABLE DSV DISCARD       (= 0x00000004)  // Enable DSV discards
ENABLE UAV DISCARD       (= 0x00000008)  // Enable UAV discards
ENABLE RESOURCE DISCARD  (= 0x00000010)  // Enable resource discards

Default values for this setting:
DEFAULT:    0xFFFFFFFF
	ENABLE RTV DISCARD                      
	ENABLE SRV DISCARD                      
	ENABLE DSV DISCARD                      
	ENABLE UAV DISCARD                      
	ENABLE RESOURCE DISCARD                 
	0xFFFFFFE0

------------------------------------------------------------
DISPLAYMUX INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Display the Display Mux State Indicator

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable Display Mux State Indicator
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable Display Mux State Indicator

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DISPLAY CLONE GROUP IDS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Clone group IDs in a grid

NONE  (= )  // No clone group IDs

Default values for this setting:
???T:    

------------------------------------------------------------
DISPLAY COLS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of columns in a display grid

MIN  (= 0x00000001)  // Min number of displays per dimension
MAX  (= 0x000000ff)  // Max number of displays per dimension in SW (HW limits might be lower)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
DISPLAY GRID BRIGHTNESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display grid relative brightness (in % of safe dynamic range)

MIN     (= 0x00000000)  // minimum brightness
NORMAL  (= 0x42480000)  // normal brightness
MAX     (= 0x42c80000)  // maximum brightness

Default values for this setting:
DEFAULT:    NORMAL

------------------------------------------------------------
DISPLAY GRID CONTRAST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display grid relative contrast (in % of safe dynamic range)

MIN     (= 0x00000000)  // minimum contrast
NORMAL  (= 0x42480000)  // normal brightness
MAX     (= 0x42c80000)  // maximum brightness

Default values for this setting:
DEFAULT:    NORMAL

------------------------------------------------------------
DISPLAY GRID CSC
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

File path to Color Space Conversion data for a display grid

NONE  (= )  // default

Default values for this setting:
???T:    

------------------------------------------------------------
DISPLAY GRID GAMMA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display grid gamma

MIN     (= 0x3e99999a)  // minimum gamma
NORMAL  (= 0x3f800000)  // normal gamma
MAX     (= 0x40333333)  // maximum gamma

Default values for this setting:
DEFAULT:    NORMAL

------------------------------------------------------------
DISPLAY GRID GAMMA RAMP
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

File path to Gamma Ramp data for a display grid

NONE  (= )  // default

Default values for this setting:
???T:    

------------------------------------------------------------
DISPLAY GRID POS COL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display Grid GDI column position(in pixels)

MIN  (= 0x00000000)  // Minimal offset in pixels
MAX  (= 0x000186a0)  // Maximal offset in pixels

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
DISPLAY GRID POS ROW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display Grid GDI row position(in pixels)

MIN  (= 0x00000000)  // Minimal offset in pixels
MAX  (= 0x000186a0)  // Maximal offset in pixels

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
DISPLAY GRID ROTATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display grid rotation

ROTATE 0        (= 0x00000000)  // 0 degrees
ROTATE 90       (= 0x00000001)  // 90 degrees
ROTATE 180      (= 0x00000002)  // 180 degrees
ROTATE 270      (= 0x00000003)  // 270 degrees
ROTATE IGNORED  (= 0x00000004)  // ignored

Default values for this setting:
DEFAULT:    ROTATE 0

------------------------------------------------------------
DISPLAY GRID SCALING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display grid scaling mode

SCALING TO CLOSEST, SCALING MONITOR SCALING                  (= 0x00000001)  // Balanced  - Full Screen
SCALING TO NATIVE, SCALING ADAPTER SCALING                   (= 0x00000002)  // Force GPU - Full Screen
SCANOUT TO NATIVE, SCALING CENTERED                          (= 0x00000003)  // Force GPU - Centered, No Scaling
SCALING TO ASPECT SCANOUT TO NATIVE, SCALING ASPECT SCALING  (= 0x00000005)  // Force GPU - Aspect Ratio
SCALING TO ASPECT SCANOUT TO CLOSEST                         (= 0x00000006)  // Balanced  - Aspect Ratio
SCANOUT TO CLOSEST                                           (= 0x00000007)  // Balanced  - Centered, No Scaling

Default values for this setting:
DEFAULT:    SCALING TO ASPECT SCANOUT TO NATIVE

------------------------------------------------------------
DISPLAY IDS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display IDs in a grid

NONE  (= )  // No display IDs

Default values for this setting:
???T:    

------------------------------------------------------------
DISPLAY MODE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Mode of a display grid

NATIVE  (= native)  // native display mode (recommended)

Default values for this setting:
???Tnative:    native

------------------------------------------------------------
DISPLAY MUX SWITCH FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Dynamic Display Mux switch flags to control display mux switch behavior.

D TO I TIMEOUT 1 SEC      (= 0x000003e8)  // Set the D to I mux switch timeout delay as 1000 msec
D TO I TIMEOUT 2 SEC      (= 0x000007d0)  // Set the D to I mux switch timeout delay as 2000 msec
D TO I TIMEOUT 3 SEC      (= 0x00000bb8)  // Set the D to I mux switch timeout delay as 3000 msec
D TO I TIMEOUT 4 SEC      (= 0x00000fa0)  // Set the D to I mux switch timeout delay as 4000 msec
D TO I TIMEOUT 5 SEC      (= 0x00001388)  // Set the D to I mux switch timeout delay as 5000 msec
D TO I TIMEOUT 6 SEC      (= 0x00001770)  // Set the D to I mux switch timeout delay as 6000 msec
D TO I TIMEOUT 7 SEC      (= 0x00001b58)  // Set the D to I mux switch timeout delay as 7000 msec
D TO I TIMEOUT 8 SEC      (= 0x00001f40)  // Set the D to I mux switch timeout delay as 8000 msec
D TO I TIMEOUT 9 SEC      (= 0x00002328)  // Set the D to I mux switch timeout delay as 9000 msec
D TO I TIMEOUT 10 SEC     (= 0x00002710)  // Set the D to I mux switch timeout delay as 10000 msec
D TO I TIMEOUT 15 SEC     (= 0x00003a98)  // Set the D to I mux switch timeout delay as 15000 msec
D TO I TIMEOUT 20 SEC     (= 0x00004e20)  // Set the D to I mux switch timeout delay as 20000 msec
MUX SWITCH FROM NVDLIST   (= 0x00010000)  // Allow to switch the Mux from NV DList
MUX SWITCH FROM CORE UMD  (= 0x00020000)  // Allow to switch the Mux from CORE UMD

Default values for this setting:
DEFAULT:    0x00010BB8

------------------------------------------------------------
DISPLAY POS COLS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display positions in columns of display grid (in pixels)

NONE  (= 0)  // None

Default values for this setting:
???T0:    0

------------------------------------------------------------
DISPLAY POS ROWS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display positions in rows of display grid (in pixels)

NONE  (= 0)  // None

Default values for this setting:
???T0:    0

------------------------------------------------------------
DISPLAY ROTATION
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Per-display rotation

NONE  (= 0)  // None

Default values for this setting:
???T0:    0

------------------------------------------------------------
DISPLAY ROWS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of rows in a display grid

MIN  (= 0x00000001)  // Min number of displays per dimension
MAX  (= 0x000000ff)  // Max number of displays per dimension in SW (HW limits might be lower)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
DISPLAY SCALING
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Per-display scaling mode

NONE  (= 0)  // None

Default values for this setting:
???T0:    0

------------------------------------------------------------
DRIVERINFOOVERLAY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x34045364)
ON, 1, TRUE, ENABLED     (= 0x24554582)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DUMMY BINARY
------------------------------------------------------------
This key is of type BINARY
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
DUMMY BOOL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x66666666)
ON, 1, TRUE, ENABLED     (= 0x99999999)

------------------------------------------------------------
DUMMY DWORD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
DUMMY FLOAT
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
DUMMY QWORD
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
DUMMY STRING
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
DUMPHEAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OFF       (= 0x00000000)
STANDARD  (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
DUMPPB
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DVS TESTNAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DVS testname used for Assert Suppression


------------------------------------------------------------
DWM LOW LATENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allow DWM to use low latency node

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DWM SHIM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

A DWM shim for workarounds for metro-style apps

DISABLED, OFF, 0       (= 0x00000000)
ENABLE FOR SLI, ON, 1  (= 0x00000001)  // Enable the shim for FlipEx/DirectFlip Support on SLI
MASK                   (= 0x00000001)  // Mask of all valid bits

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE FOR SLI                          

------------------------------------------------------------
DX10 CLEAR UAV SUST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Bug 1841593 - [RFE]: Perform pitch (UAV) clears through SUST, not CROP

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DX11 CB BASE OFFSET BYTES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

For testing 64-byte aligned CBs for Turing+, this increases the size of CB allocations and adds the offset to the base offset.  Must be 64, 128, or 192 -> Turing+ Architectures only

OFFSET 0    (= 0x00000000)  // No offset
OFFSET 64   (= 0x00000040)  // 64 byte offset
OFFSET 128  (= 0x00000080)  // 128 byte offset
OFFSET 192  (= 0x000000c0)  // 192 byte offset

Default values for this setting:
DEFAULT:    OFFSET 0

------------------------------------------------------------
DX11 DISABLE COALESCED ATOMICS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

allows user to disable driver coalesced atomics per atomic type

NONE     (= 0x00000000)
AND      (= 0x00000001)
OR       (= 0x00000002)
XOR      (= 0x00000004)
ADD      (= 0x00000008)
DEC      (= 0x00000010)
INC      (= 0x00000020)
MAX      (= 0x00000040)
MIN      (= 0x00000080)
SWAP     (= 0x00000100)
CAS      (= 0x00000200)
ALLOC    (= 0x00000400)
CONSUME  (= 0x00000800)
ALL      (= 0x00000fff)

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
DX11 REENTRANCY CHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables multi-threading reentrancy checks in the driver.

OFF, DISABLED  (= 0x00000000)  // force to disable renetrancy shim
ON, ENABLED    (= 0x00000001)  // enable reentrancy shim.

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DX12 EXPLICIT SLI BOOST FORCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Force SLI boost for DX12 explicit SLI

DEFAULT        (= 0x00000000)  // let driver logic decide boost behavior
FORCE ENABLE   (= 0x00000001)  // force on
FORCE DISABLE  (= 0x00000002)  // force off

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
DX12 HW ROOT TABLE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Turing adds a new type of constant buffer which is more deeply versioned and has lower latency than traditional constant buffer.

REORDER AND GROUP PARAMETERS  (= 0x00000001)  // if set, splits parameters into Pixel Shader visible & not visible groups (multiple of 32DWORD hw supported granularity). And reorder even sized parameters to have even VA/offset in root table. That will make OCG generate ULDC.64 instead of two ULDC.32

Default values for this setting:
DEFAULT:    0x00000001
	REORDER AND GROUP PARAMETERS            

------------------------------------------------------------
DX12 MESH SHAREDMEM EMU MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Way to choose Shared memory emulation mode. This regkey just controls size of underlying allocation based on mode. For actually forcing the mode need to set matching OCG knob : MeshSmemEmulationMode

SINGLE CTA PER SM  (= 0x00000000)  // Force single CTA/SM when shared memory emulation is used.
MAX CTAS PER SM    (= 0x00000001)  // Allow maximum number of CTAs per SM when shared memory emulation is used.

Default values for this setting:
DEFAULT:    0x00000000
	SINGLE CTA PER SM                       

------------------------------------------------------------
DXIL CAPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

controls exposure of DXIL caps bits

DISABLE INT64 OPS  (= 0x00000001)  // Disable support for Int64Ops
DISABLE WAVE OPS   (= 0x00000002)  // Disable support for WaveOps
DEPRECATED         (= 0x00000004)  // DO NOT USE

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
DXIL DEFAULT REFACTORING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control whether refactoring is allowed by default for DXIL shaders on the DXIL->nvInst path.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable refactoring shaders by default
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable refactoring by default

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
DXIL EMULATE IPA WITH LDTRAM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls SW emulation of IPA with LDTRAM (Turing+)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DXIL MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Selects how to compile DXIL shaders

DISABLE  (= 0x00000000)  // No support for DXIL
DIRECT   (= 0x00000002)  // Pass DXIL directly to compiler

Default values for this setting:
DEFAULT:    DIRECT

------------------------------------------------------------
DXIL RELEASE SUPPORTED VERSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

controls highest SM6+ version supported in release mode by default (all higher versions are implicitly experimental). a value of 0 implies  all  versions are experimental. high-word is major version and low-word is minor version.


Default values for this setting:
DEFAULT:    0x00060006

------------------------------------------------------------
DXML USE CBL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable CBL path for DXML (Metacommands and cubin NVAPIs). Currently works only for Cubin NVAPIs

CUBIN NVAPI DX11  (= 0x00000001)  // Enable CBL path for DX11 cubin NVAPIs
CUBIN NVAPI DX12  (= 0x00000002)  // Enable CBL path for DX12 cubin NVAPIs
METACOMMAND DX11  (= 0x00000004)  // Enable CBL path for DX11 Metacommands (NVAPI path)
METACOMMAND DX12  (= 0x00000008)  // Enable CBL path for DX12 Metacommands (both official and NVAPI paths)

Default values for this setting:
DEFAULT:    0x00000003
	CUBIN NVAPI DX11                        
	CUBIN NVAPI DX12                        

------------------------------------------------------------
DXR ASSUME STRIDE ALIGNED ROOT VA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Assume stride-aligned root VA for [RW]StructuredBuffer (DXR only)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DXR BFV OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Temp WAR - control BFV DXR behavior reporting

NONE                      (= 0x00000000)  // Enable DXR with normal behavior
DISABLE DXR               (= 0x00000001)  // Do not use DXR
ENABLE DXR BUT LEAK PSOS  (= 0x00000002)  // Enable DXR but leak PSOs ( see http://nvbugs/2422964 )

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
DXR BOOTSTRAP USAGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control usage of bootstrap kernel

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Never use bootstrap kernel (WARNING: DXR 1.1 and CFGPU depend on bootstrap kernel)
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Always use bootstrap kernel

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
DXR BVH BUILD BATCHING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable Batching of BVH builds

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
DXR BVH BUILD BATCHING FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

BVH build batching options

NONE                                          (= 0x00000000)  // No Flags
HAZARD CHECK ALL TRANSITIONS                  (= 0x00000001)  // All resource transitions trigger a hazard check
HAZARD CHECK ALL BARRIERS                     (= 0x00000002)  // All barrier types trigger a hazard check
VALIDATE SCRATCH AND RTAS MEM                 (= 0x00000004)  // Check for missed scratch and RTAS hazards before every build and issue additional barriers as needed
UNUSED                                        (= 0x00000008)  // Unused Flag
FLUSH ON COPY                                 (= 0x00000010)  // Flush bvh builds on every copyRTAS call
FLUSH ON EMIT                                 (= 0x00000020)  // Flush bvh builds on every emitRTAS call
FLUSH ON DISPATCHRAYS                         (= 0x00000040)  // Flush bvh builds on every dispatchRays call
FLUSH ON BARRIER, IGNORE VA RANGES            (= 0x00000080)  // Flush bvh builds whenever a barrier is issued
ALWAYS FLUSH AFTER BATCH, FORCE SINGLE BATCH  (= 0x80000000)  // Forces a flush immediately after batching. Effectively forces batch size of 1

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
DXR BVH BUILD FLAG FORCE DISABLE MASK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Clear specific BVH build flags. Applied before DXR BVH BUILD FLAG FORCE ENABLE MASK.

NONE               (= 0x00000000)  // No flags
ALLOW UPDATE       (= 0x00000001)  // BVH may be updated
ALLOW COMPACTION   (= 0x00000002)  // BVH may be compacted
PREFER FAST TRACE  (= 0x00000004)  // Prefer trace over build performance
PREFER FAST BUILD  (= 0x00000008)  // Prefer build over trace performance
MINIMIZE MEMORY    (= 0x00000010)  // Minimize memory usage, possibly at the cost of build and/or trace performance
PERFORM UPDATE     (= 0x00000020)  // Perform update
MASK               (= 0x0000003f)  // Mask of all flags

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    
	NONE                                    

------------------------------------------------------------
DXR BVH BUILD FLAG FORCE ENABLE MASK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Set specific BVH build flags. Applied after DXR BVH BUILD FLAG FORCE DISABLE MASK.

NONE               (= 0x00000000)  // No flags
ALLOW UPDATE       (= 0x00000001)  // BVH may be updated
ALLOW COMPACTION   (= 0x00000002)  // BVH may be compacted
PREFER FAST TRACE  (= 0x00000004)  // Prefer trace over build performance
PREFER FAST BUILD  (= 0x00000008)  // Prefer build over trace performance
MINIMIZE MEMORY    (= 0x00000010)  // Minimize memory usage, possibly at the cost of build and/or trace performance
PERFORM UPDATE     (= 0x00000020)  // Perform update
MASK               (= 0x0000003f)  // Mask of all flags

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    
	NONE                                    

------------------------------------------------------------
DXR CONVERT TO LDG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey specifies flags used by buffer load LDG emulation for DXR

NONE               (= 0x00000000)
NORANGECHECK       (= 0x00000001)  // Disable range checking for converted loads
DISABLESRV         (= 0x00000002)  // Disable convert-to-ldg for SRVs
DISABLEUAV         (= 0x00000004)  // Disable convert-to-ldg for UAVs
BRANCHLESS HEADER  (= 0x00000008)  // Use branchless load for header

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
DXR CONVERT TO LDG SHADERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey specifies the DXR shaders to which buffer load LDG emulation applies

NONE                 (= 0x00000000)  // No Emulation
RAYGEN SHADER        (= 0x00000001)  // Emulate for raygen shaders
MISS SHADER          (= 0x00000002)  // Emulate for miss shaders
CLOSESTHIT SHADER    (= 0x00000004)  // Emulate for closesthit shaders
ANYHIT SHADER        (= 0x00000008)  // Emulate for anyhit shaders
INTERSECTION SHADER  (= 0x00000010)  // Emulate for intersection shaders
CALLABLE SHADER      (= 0x00000020)  // Emulate for callable shaders
ALL                  (= 0x0000003f)  // Emulate for all shader stages

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
DXR CONVERT TO LDG TYPES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey specifies the types of buffer load LDG emulation to be done for DXR

NONE             (= 0x00000000)  // No Emulation
UNUSED1          (= 0x00000001)  // Unused
UNUSED2          (= 0x00000002)  // Unused
STRUCTURED LOAD  (= 0x00000004)  // Emulate ld structured with LDG
RAW LOAD         (= 0x00000008)  // Emulate ld raw with LDG
ALL              (= 0x0000000f)  // All handled types are emulated

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
DXR DUMP INTERMEDIATE DXIL
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

Control dumping of intermediate DXIL/NVVM files for DXR. Respects PS FILE PATH.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Never dump intermediate DXIL/NVVM files for DXR
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Always dump intermediate DXIL/NVVM files for DXR

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DXR ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Control the reporting of DXR support via the D3D cap.  Can only cause forced disable, cannot force enable.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
DXR ENABLE BINDLESS CONSTANTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable global root signature bindless constant buffer loads for DXR

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DXR ENABLE COROUTINES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Use coroutines instead of shader splitting for trace calls.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Use shader splitting for trace calls.
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Use coroutines for trace calls.

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
DXR MAX PAYLOAD REGISTERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Sets the maximum number of payload registers used for DXR.

DEFAULT  (= 0x00000010)  // Default value of 16 registers.
MAX      (= 0xffffffff)  // Sets the number of registers to the max allowed number of registers.

Default values for this setting:
DEFAULT:    0x00000010
	DEFAULT                                 

------------------------------------------------------------
DXR PASCAL MIN FB SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum FB size (in KB) required to enable DXR on non-TTU parts


Default values for this setting:
DEFAULT:    0x005A0000

------------------------------------------------------------
DXR PIPELINE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Extra flags passed to DXR shader compiles and pipeline creation

NONE            (= 0x00000000)  // No flags.
TRIANGLES ONLY  (= 0x00000200)  // Cull custom primitives and optimize the pipeline for triangles.
AABBS ONLY      (= 0x00000100)  // Cull triangles and optimize the pipeline for custom primitives.
DISABLED        (= 0xff000000)  // Don't propagate flags from application.

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
DXR PIPELINE RECOMPILE MODULE THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allow recompilation of modules at pipeline creation if there are at most this number of modules.


Default values for this setting:
DEFAULT:    0x00000014

------------------------------------------------------------
DXR PIPELINE TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Override the default scheduler

MEGAKERNEL SIMPLE  (= 0x00000000)  // Straightforward megakernel scheduling.
MEGAKERNEL PT      (= 0x00000001)  // Megakernel scheduling with persistent threads.
WAVEFRONT          (= 0x00000002)  // Wavefront scheduling.
BLOCKWAVE          (= 0x00000003)  // Intra CTA wavefront scheduling.
BLOCKSYNC          (= 0x00000004)  // Megakernel scheduling with intra CTA synchonized.

Default values for this setting:
DEFAULT:    MEGAKERNEL SIMPLE

------------------------------------------------------------
DXR RAYCOUNTER CONFIG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Ray Counter Configuration

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Not Used
GRPS OUTPUT INDICATOR    (= 0x00000001)  // Output GigaRaysPerSecond to on-screen indicator
GRPS OUTPUT FILE         (= 0x00000002)  // Output GigaRaysPerSecond to file
RAYCOUNT OUTPUT FILE     (= 0x00000004)  // Output Periodic Raycount to file
RPF OUTPUT FILE          (= 0x00000008)  // Output RaysPerFrame to file
RPF OUTPUT NVFT          (= 0x00000010)  // Output RaysPerFrame to NVFT

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
DXR RAYCOUNTER STRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of bytes between from the start of one RayCounter entry to another


Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
DXR RAYGEN SCHEDULER OVERRIDE PATTERNS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Comma-separated list of raygen shader names for which to override the scheduler selection. Wildcards allowed. Corresponds to shader list in DXR RAYGEN SCHEDULER OVERRIDE TYPES.


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
DXR RAYGEN SCHEDULER OVERRIDE TYPES
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Comma-separated list of scheduler names, corrseponding to the list of shader names specified by DXR RAYGEN SCHEDULER OVERRIDE PATTERNS. If fewer elements than pattern list, last entry is used for remaining patterns.


Default values for this setting:
DEFAULT:    BLOCKSYNC

------------------------------------------------------------
DXR REPLAY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Replay flags for DXR calls

NONE                 (= 0x00000000)  // DXR bundles or replay mode disallowed
ALLOW BUNDLE REPLAY  (= 0x00000001)  // DXR Replay Bundle Support
ALLOW BAKED BUNDLES  (= 0x00000002)  // DXR Baked Bundle Support
ALLOW FULL REPLAY    (= 0x00000004)  // DXR Full Replay Support

Default values for this setting:
DEFAULT:    0x00000001
	ALLOW BUNDLE REPLAY                     

------------------------------------------------------------
DXR RG CONTINUATION REGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of registers to reserve for raygen continuation state


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
DXR RG INLINE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Mode for inlining other shaders into raygen shader when trace depth <= 1

DISABLED  (= 0x00000000)  // Disabled
AUTO      (= 0x00000001)  // Auto inline with rtcore heuristic
ALWAYS    (= 0x00000002)  // Always inline when the trace depth <= 1

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
DXR SCRATCH BUFFER BYTES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Bytes of memory to allocate for DXR DispatchRays when using some experimental schedulers


Default values for this setting:
DEFAULT:    0x10000000

------------------------------------------------------------
DXR SCRATCH BUFFER USE512M PTES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allow use of 512MB PTEs (when supported) for DXR DispatchRays when using some experimental schedulers

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DXR SHADER IDENTIFIER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the shader identifier size

OS DEFAULT   (= 0x00000000)  // No Override
RS4 DEFAULT  (= 0x00000010)  // Use the RS4 value
RS5 DEFAULT  (= 0x00000020)  // Use the RS5 value

Default values for this setting:
DEFAULT:    OS DEFAULT

------------------------------------------------------------
DXR SYNTHESIZE PAYLOAD TYPES
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

Controls whether to generate payload metadata for RT shaders lacking PAQ annotation.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Do not generate payload metadata for DXR
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Generate payload metadata for DXR

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
DXR TTU USAGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Control TTU usage in DXR (if TTU HW support exists)

OFF, 0, FALSE, DISABLED, DONOTUSETTU  (= 0x00000000)  // Force DXR to not use the TTU
ON, 1, TRUE, ENABLED, USETTU          (= 0x00000001)  // Default behavior. Use TTU when available

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
DXR USE FAST LINKING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Allows to override the default linking behaviour in RTCore for pipeline creation.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable fast linking and fallback to normal CUDA style linking.
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Use fast linking during compilation and pipeline creation.

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
DYNAMIC DISPLAY MUX SWITCH DRIVER POLICY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Default driver policy for Dynamic Display Mux switch, used when neither ALLOW DYNAMIC DISPLAY MUX SWITCH or DISALLOW DYNAMIC DISPLAY MUX SWITCH are set in SHIM RENDERING OPTIONS. Application profiles should not set this (use SHIM RENDERING OPTIONS instead). Note that an applications must still be allowlisted for Optimus to trigger a mux switch.

DISALLOW BY DEFAULT  (= 0x00000001)  // Disallow Dynamic Display Mux switch from IGPU to dGPU by default.
ALLOW BY DEFAULT     (= 0x00000002)  // Allow Dynamic Display Mux switch from IGPU to dGPU by default.

Default values for this setting:
DEFAULT:    DISALLOW BY DEFAULT

------------------------------------------------------------
EARLYZHYSTERESIS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Tesla: value set directly in the NV5097 SET EARLY Z HYSTERESIS method (sets hysteresis values for transitioning from LateZ mode to EarlyZ mode)
Fermi+\DX10+: disables EarlyZ when LATEZ ALWAYS is set

INSTANTANEOUS   (= 0x00000000)  // Hardware makes instantaneous EarlyZ/LateZ decision based on current state
 16             (= 0x00000001)  // Hardware waits 16 nvclk cycles before enabling EarlyZ mode
 32             (= 0x00000002)
 64             (= 0x00000003)
 128            (= 0x00000004)
 256            (= 0x00000005)
 512            (= 0x00000006)
 1024           (= 0x00000007)
 2048           (= 0x00000008)
 4096           (= 0x00000009)
 8192           (= 0x0000000a)
 16384          (= 0x0000000b)
 32768          (= 0x0000000c)
 65536          (= 0x0000000d)
LATEZ INFINITE  (= 0x0000000e)  // If mode settings force LateZ mode stay in LateZ mode forever
LATEZ ALWAYS    (= 0x0000000f)  // Always operate in LateZ mode

------------------------------------------------------------
EARLYZ EXPERIMENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FORCE EARLYZ  (= 0x00000001)  // force alpha-test off in the case where it disables EarlyZ
MASK          (= 0x00000001)
DEFAULTS      (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULTS                                
	DEFAULTS                                

------------------------------------------------------------
ENABLE24BITCOLORSURFACE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)
DISABLE AA PROMOTION     (= 0x00000002)  // MCP89/GT21A only: Disable C24 promotion to C32 for AA surfaces

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLE24BITZSURFACE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ENABLEBASICPRIME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0xf6712345)
ON, 1, TRUE, ENABLED     (= 0x18223234)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLECENTROID
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, FALSE, 0     (= 0x08416720)
ON, TRUE, 1       (= 0x60925212)
COMPLETE, ALWAYS  (= 0x47814150)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLEFPTEXTURES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x68004831)
ON, 1, TRUE, ENABLED     (= 0x12850732)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ENABLEHDRRENDERTARGETS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

Enables the ability to use HDR RenderTargets

FP16ARGB  (= 0x00000001)  // Enable D3DFMT A16B16G16R16F
FP32ARGB  (= 0x00000002)  // Enable D3DFMT A32B32G32R32F
ARGB10    (= 0x00000004)  // Enable D3DFMT A2R10G10B10 and D3DFMT A2B10G10R10
GT16RG    (= 0x00000008)  // Enable D3DFMT R16F, D3DFMT R32F, D3DFMT G16R16, D3DFMT G16R16F, D3DFMT G32R32F
ARGB16    (= 0x00000010)  // Enable D3DFMT A16B16G16R16
MASK      (= 0x0000001f)  // Mask of all format bits

------------------------------------------------------------
ENABLENULLTEXTURE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

To Force textures to ARGB = (MAX, MAX, MAX, MAX)

DEFAULT     (= 0x00000000)  // Default
TEXNULL1x1  (= 0x00000001)
TEXNULLALL  (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
ENABLESPOOF
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x37742112)
ON, 1, TRUE, ENABLED     (= 0x26648311)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ENABLESURFACEDUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

To Dump RenderTargets and ZBuffers

DEFAULT   (= 0x00000000)  // Default
DUMP RT   (= 0x00000001)  // Dump Contents of RT
DUMP ZB   (= 0x00000002)  // Dump Contents of ZB
DUMP PD   (= 0x00000004)  // Dump on the basis of per Draw call
DUMP PP   (= 0x00000008)  // Dump on the basis of per Present
DUMP DDS  (= 0x00000010)  // Dump as .dds (default .bmp)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
ENABLE ASYNC WIN32 CALLS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable creation of a dedicated worker thread to make win32 system calls asynchronously

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // Disable async system calls
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Enable async system calls

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
ENABLE BLURAY3D
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLE CBC COMPRESSION HEURISTICS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

enables all CBC heuristics to disable compression

OFF, 0, FALSE, DISABLED  (= 0x99388100)
ON, 1, TRUE, ENABLED     (= 0x25558997)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLE CE COMPONENT REMAPPING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable CE using component remapping for CAS tranfers on MS hybrid in case of format mis-match between src and dst

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // Disable CE component remapping
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Enable CE using component remapping for CAS tranfers on MS hybrid in case of format mis-match between src and dst

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
ENABLE CE DIRECT FLIP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable CE for tranfers on Optimus and MS hybrid for DidectFlip

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // Disable CE for tranfers on Optimus and MS hybrid for DidectFlip
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Enable CE for tranfers on Optimus and MS hybrid for DidectFlip

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
ENABLE CE MS HYBRID
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable CE for tranfers on MS hybrid

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // Disable CE for tranfers on MS hybrid
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Enable CE for tranfers on MS hybrid

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
ENABLE COMPRESS ON BIND
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable compress on bind functionality

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

------------------------------------------------------------
ENABLE COMPUTEMME BACKINGSTORE CLEAR ONCREATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable this to have some known initial state of computemme backing store to help catch any bugs with MME dataRAM usage

DISABLED, OFF  (= 0x00000000)  // Compute MME backing store content is not initialized to known state
ENABLED, ON    (= 0x00000001)  // Clears the compute MME backing store to known state (say 0xffffff) on create

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
ENABLE GLOBAL PITCH BUFFER COPY DSC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable the DSC simple pitch buffer copy path that uses global LD/ST

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLE GTX950 SPECIFIC FEATURES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable GTX950 specific features. Currently used to enable FRM for GTX950

DISALLOWED, 0, OFF, DISABLED  (= 0x00000000)  // off
ALLOWED, 1, ON, ENABLED       (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    DISALLOWED

------------------------------------------------------------
ENABLE INVARIANT RENDERING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

disable any strategies that cause LSB differences between frames

OFF, 0, FALSE, DISABLED  (= 0x057a8bfa)  // off
ON, 1, TRUE, ENABLED     (= 0x00afc763)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ENABLE LZ COPY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enabled LZ copy engine and LZ compressed transfers

LZ COPY DISABLED  (= 0x00000000)  // Disable LZ compressed transfers
LZ COPY ENABLED   (= 0x00000001)  // Enable LZ compressed transfer (for PCIE 1-x systems)
LZ COPY FORCED    (= 0x00000002)  // Force LZ compressed transfers whenever possible

Default values for this setting:
DEFAULT:    LZ COPY DISABLED

------------------------------------------------------------
ENABLE MEMORYINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables memory indicator

OFF, 0, FALSE, DISABLED  (= 0x54889adf)
ON, 1, TRUE, ENABLED     (= 0x237b4805)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ENABLE RESOURCEHEAP TIER2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable support for Tier 2 resource heap - Make sure Generic Kind is supported -> Turing+ Architecture only

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLE SHADER LOCAL MEMORY COMPRESSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables compression on the shader's local memory allocation

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable compression
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable compression

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ENABLE SM COLLECTOR HWBUG 2099239
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables HW bug 2099239 by setting NV PGRAPH PRI GPCS TPCS SM L1TAG CTRL.ALWAYS CUT COLLECTOR==ENABLE.  Applied only on Volta and TU10x

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
ENABLE SUBRES HAZARD DETECTION DSC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable hazard detection at subres level DSC

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLE SYNC CE PIPELINED DMA COPY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable Pipelined Copy for Sync CE aka Pipelined + Flush Enable = False , supports DX12 only

DISABLE PIPELINED COPY  (= 0x00000000)  // Disable Pipelining of syncCE copy aka Data Transfer Type is non-pipelined and Flush enable set to true
ENABLE PIPELINED COPY   (= 0x00000001)  // Enable Pipelined Copy for Sync CE aka Pipelined + Flush Enable = False

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE PIPELINED COPY                  

------------------------------------------------------------
ENABLE TILED RESOURCE COMPRESSION WDDM13
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables Tiled resource compression for Wddm1.x

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable TRC for Wddm1.x
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable TRC for Wddm1.x

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ENABLE TRC WITH GENERIC MEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable support for Tiled resource compression using Generic Memory kind - Specific to Turing Architecture only

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLE TWOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disable use of TwoD

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ENABLE UMD MANAGED GPFIFO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is the flag for enabling direct submission of gpfifo/command-buffers from UMD

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // disable UMD direct submission of gpfifo
ON, 1, TRUE, ENABLED     (= 0x00000001)  // enable UMD direct submission of gpfifo

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
ENABLE UMD MANAGED GPFIFO DX9
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is the flag for enabling direct submission of gpfifo/command-buffers from UMD

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // disable UMD direct submission of gpfifo in DX9
ON, 1, TRUE, ENABLED     (= 0x00000001)  // enable UMD direct submission of gpfifo in DX9

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
ENABLE VOLTA RVCH INVALIDATE WAR BUG 1922829
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable Volta RVCH invalidates performance WAR

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
ENABLE VOLTA SCC PAGEPOOL ALLOC OPT BUG 1886508
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Disable Volta SCC Page Pool WAR

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
ENABLE VPRTARRAYINDEX FROM SHADER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Allow ViewportArrayIndex and/or RenderTargetArrayIndex to be output from a shader directly to the rasterizer

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
ENABLE Z16 COMPRESSION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Kepler: Enable compression on Z-16 surfaces

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ENABLE ZERO COVERAGE KIL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable conditional KIL instruction when coverage is known to be 0.

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

------------------------------------------------------------
ESTIMATE ANIMATION TIME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

For Silk Prototyping - Application specific parameters used to estimate animation time

DISABLED             (= 0x00000000)  // Disabled
ENABLED SIMPLE       (= 0x00000001)  // Enabled - simple mode
CAP MS MASK          (= 0x00003ff0)  // Animation time cap in milliseconds
CAP MS SHIFT         (= 0x00000004)
LAG FRAMES MASK      (= 0x0000c000)  // Number of frames animation time lags behind present
LAG FRAMES SHIFT     (= 0x0000000e)
LAG FRAMES MAX       (= 0x00000003)
TEST 20FRAMES MASK   (= 0x0f000000)  // Insert a test animation step every 20x frames
TEST 20FRAMES SHIFT  (= 0x00000018)
TEST VAL 10MS MASK   (= 0xf0000000)  // Animation step (10ms) to use for test
TEST VAL 10MS SHIFT  (= 0x0000001c)
MASK                 (= 0xff00fff1)  // Mask of all valid bits

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DISABLED                                
	DISABLED                                
	DISABLED                                
	DISABLED                                
	DISABLED                                

------------------------------------------------------------
ETW WGF2UM COMMAND MEMORY USAGE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls which command memory usage events are enabled. Suggested default (per frame tracking) is 0x5001

DISABLED                               (= 0x00000000)  // No events enabled
ENABLE MEMORY USAGE EVENTS             (= 0x00000001)  // Generates per frame events with combined memory usage of various command allocator/DXR related allocations.
ENABLE MISC ALLOC EVENTS               (= 0x00000002)  // Enable events for misc allocations. Vid staging buffer, QMD semaphore heap, gsb heap, launch qmd heap. Generate event on actual allocation.
ENABLE MISC REUSE EVENTS               (= 0x00000004)  // Enable events for misc allocations. Vid staging buffer, QMD semaphore heap, gsb heap, launch qmd heap. Generate event on reuse of idle allocation.
ENABLE PERFSTRAT ALLOC EVENTS          (= 0x00000008)  // Enable events for perfstrat dc heap allocations.
ENABLE PERFSTRAT REUSE EVENTS          (= 0x00000010)  // Enable events for perfstrat dc heap allocation reuse (of idle allocations).
ENABLE DXR LAUNCH BUFFER ALLOC EVENTS  (= 0x00000020)  // Enable events for DXR launch buffer allocations.
ENABLE DXR LAUNCH BUFFER REUSE EVENTS  (= 0x00000040)  // Enable events for DXR launch buffer allocation reuse (of idle allocations).
ENABLE LMEM ALLOC EVENTS               (= 0x00000100)  // Enable event when lmem is resized and triggers a reallocation.
ENABLE SHADER HEAP ALLOC EVENTS        (= 0x00000200)  // Enable event when shader heap is resized/reallocated.
TRACK BVH ALLOCATIONS                  (= 0x00001000)  // Enable BVH resource tracking. Only valid if memory usage events are enabled.
TRACK BVH SCRATCH ALLOCATIONS          (= 0x00002000)  // Not implemented currently. Enable BVH scratch allocation tracking. Possibly expensive. Only valid if memory usage events are enabled.
TRACK COMMAND MEMORY USAGE             (= 0x00004000)  // Enable tracking of memory usage of command allocators. Only valid if memory usage events are enabled

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
ETW WGF2UM EXTERNAL EVENT FLAGS
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

MISCSTRING                         (= 0x0000000000000001)  // make WGF2UM EVENT MISCSTRING events externally visible
HOTKEY                             (= 0x0000000000000002)  // make WGF2UM EVENT HOTKEY events externally visible
DEVICE                             (= 0x0000000000000004)  // make WGF2UM EVENT DEVICE events externally visible
ENTRYPOINT                         (= 0x0000000000000008)  // make WGF2UM EVENT ENTRYPOINT events externally visible
SYNC                               (= 0x0000000000000010)  // make WGF2UM EVENT SYNC events externally visible
SLITRANSFER                        (= 0x0000000000000020)  // make WGF2UM EVENT SLITRANSFER events externally visible
QUERY                              (= 0x0000000000000040)  // make WGF2UM EVENT QUERY events externally visible
LOADBALANCE                        (= 0x0000000000000080)  // make WGF2UM EVENT LOADBALANCE events externally visible
STUTTERSTATS FRAME                 (= 0x0000000000000100)  // make WGF2UM EVENT STUTTERSTATS FRAME events externally visible
STUTTERSTATS BLOCKCREATE           (= 0x0000000000000200)  // make WGF2UM EVENT STUTTERSTATS BLOCKCREATE events externally visible
STUTTERSTATS BLOCKDESTROY          (= 0x0000000000000400)  // make WGF2UM EVENT STUTTERSTATS BLOCKDESTROY events externally visible
STUTTERSTATS BLOCKPURGE            (= 0x0000000000000800)  // make WGF2UM EVENT STUTTERSTATS BLOCKPURGE events externally visible
STUTTERSTATS SHADERCOMPILE         (= 0x0000000000001000)  // make WGF2UM EVENT STUTTERSTATS SHADERCOMPILE events externally visible
STUTTERSTATS GPUSTALL              (= 0x0000000000002000)  // make WGF2UM EVENT STUTTERSTATS GPUSTALL events externally visible
STUTTERSTATS OUTOFORDER            (= 0x0000000000004000)  // make WGF2UM EVENT STUTTERSTATS OUTOFORDER events externally visible
STUTTERSTATS UPDATESUBRESOURCE     (= 0x0000000000008000)  // make WGF2UM EVENT STUTTERSTATS UPDATESUBRESOURCE events externally visible
STUTTERSTATS SHADERCOMPILETIME     (= 0x0000000000010000)  // make WGF2UM EVENT STUTTERSTATS SHADERCOMPILETIME events externally visible
FBC                                (= 0x0000000000020000)  // make WGF2UM EVENT FBC events externally visible
GENERICEVENT                       (= 0x0000000000040000)  // make WGF2UM EVENT GENERICEVENT events externally visible (manifest only)
LOADBALANCE MASTER                 (= 0x0000000000080000)  // make WGF2UM EVENT LOADBALANCE MASTER events externally visible
BLACK FLAG TIMER RESOLUTION        (= 0x0000000000100000)  // make WGF2UM EVENT BLACK FLAG TIMER RESOLUTION events externally visible
BLACK FLAG SYNC MAP                (= 0x0000000000200000)  // make WGF2UM EVENT BLACK FLAG SYNC MAP events externally visible
BLACK FLAG RENAME STALL            (= 0x0000000000400000)  // make WGF2UM EVENT BLACK FLAG RENAME STALL events externally visible
BLACK FLAG THREAD AFFINITY         (= 0x0000000000800000)  // make WGF2UM EVENT BLACK FLAG THREAD AFFINITY events externally visible
BLACK FLAG ASYNC COMPILE DISABLED  (= 0x0000000001000000)  // make WGF2UM EVENT BLACK FLAG ASYNC COMPILE DISABLED events externally visible
BLACK FLAG SYNC UNMAP              (= 0x0000000002000000)  // make WGF2UM EVENT BLACK FLAG SYNC UNMAP events externally visible
BLACK FLAG STALLED ASYNC COMPILE   (= 0x0000000004000000)  // make WGF2UM EVENT BLACK FLAG STALLED ASYNC COMPILE events externally visible
BLACK FLAG SYNC COMPILE            (= 0x0000000008000000)  // make WGF2UM EVENT BLACK FLAG SYNC COMPILE events externally visible
BLACK FLAG SERVER CLIENT AFFINITY  (= 0x0000000010000000)  // make WGF2UM EVENT BLACK FLAG SERVER CLIENT AFFINITY events externally visible
SLI STALL TIMES                    (= 0x0000000020000000)  // make WGF2UM EVENT SLI STALL TIMES events externally visible
COMMAND MEMORY USAGE               (= 0x0000000080000000)  // make WGF2UM EVENT COMMAND MEMORY USAGE events externally visible
COMMAND MEMORY ALLOC               (= 0x0000000100000000)  // make WGF2UM EVENT COMMAND MEMORY ALLOC events externally visible
ASYNCJOB                           (= 0x0000000200000000)  // make WGF2UM EVENT ASYNCJOB events externally visible
LATENCY MARKER                     (= 0x0000000400000000)  // make WGF2UM EVENT LATENCY MARKER events externally visible

Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
ETW WGF2UM TRACE DWM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

controls if events are traced on DWM/Explorer

OFF, 0, FALSE, DISABLED  (= 0x48fe9bfa)
ON, 1, TRUE, ENABLED     (= 0xe79c3a12)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ETW WGF2UM TRACE INTERNAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

controls if internal events are traced

OFF, 0, FALSE, DISABLED  (= 0x48fe9bfa)
ON, 1, TRUE, ENABLED     (= 0xe79c3a12)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
EXPORT PERF COUNTERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
EXPORT PERF COUNTERS DX9 ONLY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
EXPOSE WDDM2 INTERFACE VERSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Expose wddm2 interface version

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
EXTERNAL QUIET MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Separate key for OEM tool to enable Whisper Mode and Battery Boost, so that it will not corrupt (equivalent) GFE settings, and vice versa.

ON   (= 0x00000001)  // On
OFF  (= 0x00000000)  // Off

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FATTEXOPTIMIZATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

PARTIAL, 0    (= 0x78347691)
HEURISTIC, 1  (= 0x94837562)
FULL, 2       (= 0x49683103)

Default values for this setting:
DEFAULT:    HEURISTIC

------------------------------------------------------------
FERMI DUMP NVIR FLAG
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

when set, will notify OCG to generate NVIR & return it in the compiled ucode blob. Will work only on debug & develop drivers.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FERMI SETCOMPRESSIONTHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

value for the NV9097 SET COMPRESSION THRESHOLD method.(for DX9)

SAMPLES  0     (= 0x00000000)
SAMPLES  1     (= 0x00000001)
SAMPLES  2     (= 0x00000002)
SAMPLES  4     (= 0x00000003)
SAMPLES  8     (= 0x00000004)
SAMPLES  16    (= 0x00000005)
SAMPLES  32    (= 0x00000006)
SAMPLES  64    (= 0x00000007)
SAMPLES  128   (= 0x00000008)
SAMPLES  256   (= 0x00000009)
SAMPLES  512   (= 0x0000000a)
SAMPLES  1024  (= 0x0000000b)
SAMPLES  2048  (= 0x0000000c)

Default values for this setting:
DEFAULT:    SAMPLES  8

------------------------------------------------------------
FERMI SETMAXTIWARPSPERBATCH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Value for the NV9097 SET MAX TI WARPS PER BATCH method. Value must be 1 <= value <= 32 for GF100/GF104/GF106 and 1 <= value <= 20 for GF108/GF11x.


------------------------------------------------------------
FERMI SETPSREGISTERWATERMARKS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Value for NV9097 SET PS REGISTER WATERMARKS

DEFAULT FERMI     (= 0x04000080)  // Fermi class default for this method
DEFAULT KEPLER    (= 0x08000080)  // Kepler class default for this method
DEFAULT MAXWELL   (= 0x08000080)  // Maxwell class default for this method
DEFAULT PASCAL A  (= 0x10000080)  // PASCAL A class default for this method
DEFAULT PASCAL B  (= 0x08000080)  // PASCAL B class default for this method
DEFAULT VOLTA A   (= 0x10000080)  // VOLTA A class default for this method
DEFAULT TURING A  (= 0x10000080)  // TURING A class default for this method
DEFAULT AMPERE A  (= 0x10000080)  // AMPERE A class default for this method
DEFAULT AMPERE B  (= 0x10000080)  // AMPERE B class default for this method
DEFAULT ADA A     (= 0x10000080)  // ADA A class default for this method
DEFAULT HOPPER A  (= 0x10000080)  // HOPPER A class default for this method

------------------------------------------------------------
FERMI SETPSWARPWATERMARKS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Value for NV9097 SET PS WARP WATERMARKS

DEFAULT FERMI     (= 0x00300008)  // Fermi class default for this method
DEFAULT KEPLER    (= 0x00400008)  // Kepler class default for this method
DEFAULT MAXWELL   (= 0x00400008)  // Maxwell class default for this method
DEFAULT PASCAL A  (= 0x00800008)  // PASCAL A class default for this method
DEFAULT PASCAL B  (= 0x00400008)  // PASCAL B class default for this method
DEFAULT VOLTA A   (= 0x00800008)  // VOLTA A class default for this method
DEFAULT TURING A  (= 0x00400008)  // TURING A class default for this method
DEFAULT AMPERE A  (= 0x00800008)  // AMPERE A class default for this method
DEFAULT AMPERE B  (= 0x00600008)  // AMPERE B class default for this method
DEFAULT ADA A     (= 0x00600008)  // ADA A class default for this method
DEFAULT HOPPER A  (= 0x00800008)  // HOPPER A class default for this method

------------------------------------------------------------
FERMI SETREDUCECOLORTHRESHOLDSENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
FERMI SETSUBTILINGPERFKNOBA
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

GM20Y DEFAULT  (= 0x087f6080)  // Default on GM20Y (T210)

Default values for this setting:
DEFAULT:    0x20164010

------------------------------------------------------------
FERMI SETSUBTILINGPERFKNOBA WARPS PER SUBTILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the FractionOfMaxQuadsPerSubtile field when FERMI SETSUBTILINGPERFKNOBA is not overridden. If FERMI SETSUBTILINGPERFKNOBA is overridden, this regkey will do nothing.


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
FERMI SETSUBTILINGPERFKNOBB
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
FERMI SET L2 CACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Each nibble controls the L2 cache policy for particular operations on the VAF and ROP clients

VAF EVICT FIRST                        (= 0x00000000)
VAF EVICT NORMAL                       (= 0x00000001)
VAF EVICT LAST                         (= 0x00000002)
VAF SHIFT                              (= 0x00000000)
ROP NONINTERLOCKED READ EVICT FIRST    (= 0x00000000)
ROP NONINTERLOCKED READ EVICT NORMAL   (= 0x00000010)
ROP NONINTERLOCKED READ EVICT LAST     (= 0x00000020)
ROP NONINTERLOCKED READ SHIFT          (= 0x00000004)
ROP INTERLOCKED READ EVICT FIRST       (= 0x00000000)
ROP INTERLOCKED READ EVICT NORMAL      (= 0x00000100)
ROP INTERLOCKED READ EVICT LAST        (= 0x00000200)
ROP INTERLOCKED READ SHIFT             (= 0x00000008)
ROP PREFETCH READ EVICT FIRST          (= 0x00000000)
ROP PREFETCH READ EVICT NORMAL         (= 0x00001000)
ROP PREFETCH READ EVICT LAST           (= 0x00002000)
ROP PREFETCH READ SHIFT                (= 0x0000000c)
ROP NONINTERLOCKED WRITE EVICT FIRST   (= 0x00000000)
ROP NONINTERLOCKED WRITE EVICT NORMAL  (= 0x00010000)
ROP NONINTERLOCKED WRITE EVICT LAST    (= 0x00020000)
ROP NONINTERLOCKED WRITE SHIFT         (= 0x00000010)
ROP INTERLOCKED WRITE EVICT FIRST      (= 0x00000000)
ROP INTERLOCKED WRITE EVICT NORMAL     (= 0x00100000)
ROP INTERLOCKED WRITE EVICT LAST       (= 0x00200000)
ROP INTERLOCKED WRITE SHIFT            (= 0x00000014)
CLASS DEFAULT                          (= 0x00101001)
DX10 DEFAULT                           (= 0x00001000)
OGL DEFAULT                            (= 0x00111111)  // OGL default for perf, see bugs 589224 and 1163844

Default values for this setting:
DEFAULT:    0x00101001
	VAF EVICT NORMAL                        
	ROP PREFETCH READ EVICT NORMAL          
	ROP INTERLOCKED WRITE EVICT NORMAL      
	CLASS DEFAULT                           
	DX10 DEFAULT                            

------------------------------------------------------------
FERMI SET PRIM CB THROTTLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

For Fermi-generation GPUs, sets max cumulative area (in pixels) of the prims in the CB. Zero means to use driver default. Max is treated as INF, which disabling throttling.

MIN, AUTOMATIC  (= 0x00000000)
MAX             (= 0x003fffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
FERMI SHADER HEAP SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

to set size of the shader heap in bytes. This is only on Fermi. When this is set to a non zero value, Driver will not reclaim space in the heap when deleting a shader. Will work only on debug & develop drivers.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
FERMI UNOPT LOD SPREAD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables or disables unopt LOD spread for fermi

OFF, 0, FALSE, DISABLED  (= 0x56023627)
ON, 1, TRUE, ENABLED     (= 0x37299934)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FERMI ZCULL INFO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Dump zcull debugging information to c:

DISABLED        (= 0x00000000)
TRACE           (= 0x00000001)
STATS           (= 0x00000002)
PER DRAW STATS  (= 0x00000004)
REGION INFO     (= 0x00000008)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
FILL STATIC COLOR TEXTURES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Fill the given mip level(s) of all immutable color textures (RGBA or DXT) with the given color. Use FILL STATIC COLOR TEXTURES MIP to select mip level(s) and FILL STATIC COLOR TEXTURES COLOR to select color

OFF        (= 0x00000000)  // OFF
R CHANNEL  (= 0x00000001)  // Fill R channel with the selected color
G CHANNEL  (= 0x00000002)  // Fill G channel with the selected color
B CHANNEL  (= 0x00000004)  // Fill B channel with the selected color
A CHANNEL  (= 0x00000008)  // Fill A channel with the selected color
ALL        (= 0x0000000f)  // Fill all channels with the selected color

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
FILL STATIC COLOR TEXTURES COLOR
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Color (in R8G8B8A8) for FILL STATIC COLOR TEXTURES. Red in LSB, Alpha in MSB (default is Pink). If the texture format is different a conversion is performed. For textures with < 8 bpc the MSBs of the given color are taken. E.g, 0x11223344 becomes 0x4184 in B5G6R5


Default values for this setting:
DEFAULT:    0xFFFF00FF

------------------------------------------------------------
FILL STATIC COLOR TEXTURES MIP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

selects the mip level(s) for FILL STATIC COLOR TEXTURES

OFF     (= 0x00000000)  // OFF
MIP 0   (= 0x00000001)  // Fill Mip 0 with the selected color
MIP 1   (= 0x00000002)  // Fill Mip 1 with the selected color
MIP 2   (= 0x00000004)  // Fill Mip 2 with the selected color
MIP 3   (= 0x00000008)  // Fill Mip 3 with the selected color
MIP 4   (= 0x00000010)  // Fill Mip 4 with the selected color
MIP 5   (= 0x00000020)  // Fill Mip 5 with the selected color
MIP 6   (= 0x00000040)  // Fill Mip 6 with the selected color
MIP 7   (= 0x00000080)  // Fill Mip 7 with the selected color
MIP 8   (= 0x00000100)  // Fill Mip 8 with the selected color
MIP 9   (= 0x00000200)  // Fill Mip 9 with the selected color
MIP 10  (= 0x00000400)  // Fill Mip 10 with the selected color
MIP 11  (= 0x00000800)  // Fill Mip 11 with the selected color
MIP 12  (= 0x00001000)  // Fill Mip 12 with the selected color
MIP 13  (= 0x00002000)  // Fill Mip 13 with the selected color
MIP 14  (= 0x00004000)  // Fill Mip 14 with the selected color
MIP 15  (= 0x00008000)  // Fill Mip 15 with the selected color
ALL     (= 0xffffffff)  // Fill all mips with selected color

Default values for this setting:
DEFAULT:    0x00000001
	MIP 0                                   

------------------------------------------------------------
FLIPDATADUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Save frame rate data to a file

DISABLED, OFF, 0               (= 0x00000000)
DUMP SUMMARY                   (= 0x00000001)
DUMP RAW FLIP DATA             (= 0x00000002)  // frame time from the display completing flips
DUMP RAW PRESENT DATA          (= 0x00000004)  // UMD present timestamps before caslling kernel
DUMP RAW PAGING DATA           (= 0x00000008)  // number of per-frame paging events
DUMP RAW PRESENT END DATA      (= 0x00000010)  // UMD present time spent in the kernel
DUMP RAW FLIP LATENCY DATA     (= 0x00000020)  // time from UMD present to display completing the flip
DUMP RAW VRR DELAY             (= 0x00000040)  // delay introduced by the low-level display output for GSYNC
DUMP APP ANIMATION TIME        (= 0x00000080)  // estimated animation time / animation time provided by the app (for SILK)
DUMP RAW PRESENT START TS      (= 0x00000100)  // absolute timestamp of present entering UMD (worker thread)
DUMP RAW PRESENT END TS        (= 0x00000200)  // absolute timestamp of present exiting UMD (worker thread)
DUMP RAW FLIP TS               (= 0x00000400)  // timestamps from the display completing flips
DUMP FLIP TOKEN                (= 0x00000800)  // display driver flip tokens
DUMP RAW APP PRESENT START TS  (= 0x00001000)  // absolute timestamp of present entering UMD (app thread)
DUMP RAW APP PRESENT END TS    (= 0x00002000)  // absolute timestamp of present exiting UMD (app thread)
DUMP QUEUED FRAMES             (= 0x00004000)  // the (fractional) number of queued frames
DUMP GPU UTILIZATION           (= 0x00008000)  // the estimated fractional utilization of the GPU
DUMP FLIP METERING DATA        (= 0x00010000)  // flip metering events and inserted delays, if any
DUMP UMDMETER DATA             (= 0x00020000)  // flip metering events and inserted delays, if any
DUMP VIDEO MEMORY DATA         (= 0x00040000)  // Global video memory data, includes paging information
DUMP GPC2 CLOCK DATA           (= 0x00080000)  // Per GPU GPC2 Clock frequencies in MHz
DUMP RAW TRANSFER DATA         (= 0x00100000)  // Total data transferred per frame due to SLI resolves
DUMP MEM CLOCK DATA            (= 0x00200000)  // Per GPU Mem Clock frequencies in MHz
DUMP FRM RENDER TIME           (= 0x00400000)  // GPU execution (render) time from FrameRateMonitor
DUMP LOW LATENCY               (= 0x00800000)  // Low latency feature data from FrameRateLimiter
HOTKEY USING FCAT              (= 0x01000000)  // Hotkey support for multi-threaded applications
DUMP PRESENT MODE              (= 0x02000000)  // IFLIP/legacy fullscreen status
DUMP VRR FLAGS                 (= 0x04000000)  // Dump VRR related flags used by DX UMD to decide on VRR functionality
DUMP MPO DATA                  (= 0x08000000)  // Dump MPO plane information
ABSOLUTE TS                    (= 0x10000000)  // dump all timestamps as absolute clock values instead of relative to a base timestamp
HOTKEY                         (= 0x20000000)  // only log data when the hotkey combination (ctrl-F11) has been hit (hotkey acts as a toggle)
EXCEL FRIENDLY                 (= 0x40000000)  // use tab-delimited instead of space-delimited formatting; output xls file
AUTO INCREMENT FILENAME        (= 0x80000000)  // if a file exists, add auto incrementing counter to file name
MASK                           (= 0xffffffff)  // Mask of all valid bits

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DISABLED                                

------------------------------------------------------------
FLIPDATADUMP INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Interval to capture flip data, in seconds

DEFAULT       (= 0x00000000)  // Do not use interval logging
BEGIN MASK    (= 0xffff0000)  // Bitmask of the time used to start logging
END MASK      (= 0x0000ffff)  // Bitmask of the time to stop logging and save the file
BEGIN OFFSET  (= 0x00000010)  // Offset used to shift the beginning timestamp
END OFFSET    (= 0x00000000)  // Offset used to shift the end timestamp

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 
	DEFAULT                                 
	END OFFSET                              

------------------------------------------------------------
FLIPDATADUMP PATH
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Path to save flip data stats dumps


Default values for this setting:
DEFAULT:    (null)

------------------------------------------------------------
FLIPDATADUMP TRANSFER THRESHOLD
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Show total data transferred per frame in flip indicator and log it in FlipDataDump if it is greater than this threshold value


Default values for this setting:
DEFAULT:    0x0000000000200000

------------------------------------------------------------
FLIPINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable framerate graph indicator

DISABLED, OFF, 0              (= 0x00000000)
GRAPH FLIP FPS                (= 0x00000001)  // FPS graph, measured on display hw flip
GRAPH PRESENT FPS             (= 0x00000002)  // FPS graph, measured when the user mode driver starts processing present
GRAPH APP PRESENT FPS         (= 0x00000004)  // FPS graph, measured on app present
DISPLAY PAGING                (= 0x00000008)  // Add red paging indicator bars to the GRAPH PRESENT FPS graph
DISPLAY APP THREAD WAIT       (= 0x00000010)  // Add app thread wait time indicator bars to the GRAPH APP PRESENT FPS graph
DISPLAY FULLSCREEN FLIP TEXT  (= 0x00000020)  // Display text, full screen mode is on or not, and flip is on or not.
DISPLAY SLI TRANSFERS         (= 0x00000040)  // Display SLI transfers caused due to inter frame dependencies that might cause stutter
DISPLAY VIDEO MEMORY DATA     (= 0x00000080)  // Display Video memory data.
GRAPH PAGING SIZE             (= 0x00000100)  // Display the aggregate of Paging in and Paging out size.
GRAPH GPC2 CLOCK              (= 0x00000200)  // GPC2 clock graph.
GRAPH MEM CLOCK               (= 0x00000400)  // Mem clock graph.
ENABLED, ON, 1, MASK          (= 0x000007ff)  // Enable everything

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
FOGSUPPRESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x82310097)
ON, 1, TRUE, ENABLED     (= 0x18255321)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FOGTABLEENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x78176879)
ON, 1, TRUE, ENABLED     (= 0x31259154)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
FORCEBLITWAITFLAGENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x50131225)
ON, 1, TRUE, ENABLED     (= 0x75006102)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FORCEINLINEVERTEXDATA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FORCEPSHADERPRECISION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

NONE, 0  (= 0x78915466)
FX9      (= 0x21454235)
FX12     (= 0x14174657)
FP16     (= 0x84654446)
FP32     (= 0x72546873)

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
FORCE 1X TEX
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

If enabled, this regkey will force 1x Tex on 2x Tex parts.

DISABLED         (= 0x00000000)  // allow 2X tex where available
ENABLED 3D       (= 0x00000001)  // force 1X tex on 2x TEX parts for 3D channels
ENABLED COMPUTE  (= 0x00000002)  // force 1X tex on 2X TEX parts for COMPUTE channels

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
FORCE FLUSH ON ACQUIRE RESOURCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Force flush from acquire resource even in case of iflip

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FORCE NVAPI AFRGROUPS DX10PLUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If different from 0, controls the behaviour of NvAPI D3D GetCurrentSLIState() function. Specifies number of AFR groups we will emulate for this function output.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
FORCE OPTIONAL PSO COMPILES OFF
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Forces optional PSO compiles off

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FORCE SERIALIZE DSC UAV CLEAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Force serialize UAV Clear (when uses DSC)

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
FORCE TEX HASH BLOCK VTG COMPUTE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

If enabled, this regkey will force SM SCH MODE TEX HASH BLOCK VTG COMPUTE on GF10x,GF11x.

DISABLED         (= 0x00000000)  // disable for both 3D and COMPUTE channels.
ENABLED 3D       (= 0x00000001)  // enable for 3D channels
ENABLED COMPUTE  (= 0x00000002)  // enable for COMPUTE channels
DEFAULT          (= 0x00000000)  // default is SM SCH MODE TEX HASH BLOCK VTG COMPUTE disabled for 3D and COMPUTE channels

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DEFAULT                                 

------------------------------------------------------------
FORCE UAV OVERLAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Disable WFI because of UAV dependencies

ENABLED   (= 0x00000001)
DISABLED  (= 0x00000000)
PS TO PS  (= 0x00000002)  // ENABLE effect only on ps to ps hazards
CS TO CS  (= 0x00000004)  // ENABLE effect only on cs to cs hazards

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
FPSINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

Show an FPS counter for the app.

OFF, 0, FALSE, DISABLED  (= 0x34045364)
ON, 1, TRUE, ENABLED     (= 0x24554582)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FRL FPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Framerate Limiter FPS

DISABLED  (= 0x00000000)  // Disabled
MIN       (= 0x00000000)
MAX       (= 0x000003ff)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
FRL FPS NVCPL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Framerate Limiter FPS only for NVCPL to maintain the previous slider value when the FRL FPS is set to Disabled.

DISABLED  (= 0x00000000)  // Disabled
MIN       (= 0x00000000)
MAX       (= 0x000003ff)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
FRL LOW LATENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Cap FPS just below GPU render time to reduce latency. DX9+DX11 supported.

OFF, 0, FALSE, DISABLED, PASSIVE  (= 0x00000000)
ON, 1, TRUE, ENABLED              (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FRL LOW LATENCY BUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Buffer time above GPU render time to limit FPS in microseconds. Default 800 (0.8ms).


------------------------------------------------------------
FRL LOW LATENCY CPU RENDER MARGIN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Reflex's CPU Render Thread Bound Optimization settings.

MASK US          (= 0x000003ff)  // Mask for margin in microseconds
EXCLUDE OVERLAP  (= 0x10000000)  // Exclude overlap between sim and render
TEST ENABLE      (= 0x08000000)  // Enable test mode

Default values for this setting:
DEFAULT:    0x0000012C
	0x0000012C

------------------------------------------------------------
FRL LOW LATENCY GAIN A
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

LLFRL controller gain A.


Default values for this setting:
DEFAULT:    0x000001F4

------------------------------------------------------------
FRL LOW LATENCY GAIN B
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

LLFRL controller gain B.


Default values for this setting:
DEFAULT:    0x00000014

------------------------------------------------------------
FRL LOW LATENCY GAP TARGET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

LLFRL controller target gap time in microseconds.

MIN  (= 0x00000000)
MAX  (= 0x000003e8)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
FRL LOW LATENCY OVERLAP TARGET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

LLFRL controller target overlap time in microseconds.

MIN  (= 0x00000000)
MAX  (= 0x00002710)

Default values for this setting:
DEFAULT:    0x000005DC

------------------------------------------------------------
FRL LOW LATENCY PROACTIVE FLUSH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Proactively flush the 3d pushbuffer once per frame to ensure a pre-present kickoff.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FRL LOW LATENCY RTBO TARGET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Render Thread Bound Optimization (RTBO) target gap time in microseconds.


Default values for this setting:
DEFAULT:    0x00000064

------------------------------------------------------------
FRL LOW LATENCY SMALL BUFFER BLEND FACTOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Overlap calculations take average of first trivial buffer and first significant buffer. 0 == large buffer only and 100 == small buffer only.  Value is a percentage from 0 to 100 because app profiles do not support floats.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
FULLSCREEN INDICATOR ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Toggle Fullscreen Indicator on or off / Manage other indicator add-ons

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable Everything
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable Fullscreen Indicator only
ENABLE FRAME NUMBER      (= 0x00000004)  // Enable frame number indicator only
ENABLE DWM DFLIP         (= 0x00000008)  // Enable DWM-side DFlip indicator
ENABLE DWM ALL           (= 0x00000010)  // Enable printing regular indicator on DWM
ENABLE RESOLUTION        (= 0x00000020)  // Enable resolution indicator only
ENABLE TEARING INFO      (= 0x00000040)  // Enable printing AllowTearing information passed by runtim
ENABLE RR INFO           (= 0x00000080)  // Enable printing the RR as queried from DD
MASK                     (= 0x000000ff)  // Mask of all valid bits
INFO MASK                (= 0x000000e5)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     
	OFF                                     
	OFF                                     

------------------------------------------------------------
FXAA ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Empowers an app profile to disallow FXAA

DISALLOWED, 0, OFF, DISABLED  (= 0x00000000)  // FXAA is not allowed
ALLOWED, 1, ON, ENABLED       (= 0x00000001)  // FXAA is allowed

Default values for this setting:
DEFAULT:    ALLOWED

------------------------------------------------------------
FXAA ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Toggle FXAA on or off

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
FXAA INDICATOR ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Toggle FXAA Indicator on or off

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
G80 MODEB OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

NVPMAPI G80 ModeB Override

DISABLE  (= 0x00000000)
ENABLE   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
GFE ADDRESSED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Fingerprinted and addressed

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
GFE DISPLAY IN UI
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Display in UI even if no OPS exist

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
GFE MONITOR USAGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Collect usage statistics

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
GFE SUPPORTED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Support for fingerprint and OPS

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

Could not locate information for plain text key: GK10x PSTATE BOOST AND LOCK PEX GEN2 WAR

------------------------------------------------------------
GL ALLOW PTE FALLBACK TO SYSMEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Whether or not to allow PTE allocation to fallback to SYSMEM

DISABLE  (= 0x00000000)  // Disable PTE allocation fallback to SYS
ENABLE   (= 0x00000001)  // Enable PTE allocation fallback to SYS

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
GP100 ENABLE TESSELLATION PERF LOAD BUG 1665952
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables the GP100 specific Tessellation HW bug 1665952

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

------------------------------------------------------------
GP100 NUM TESS PRF EXCL CYCLES WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of cycles needed before the first PRF instruction in tess shaders (bug 1665952)


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
GP100 OPTIMIZE TESSELLATION PERF LOAD BUG 1665952
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Applies Tessellation optimization.  This disables Tesslleation WAR on draw calls if tessellation isn't being used by recompiling the pixel shader.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
GP100 TILED CACHE AND GFXP WARBUG1667598
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ENABLE the WAR to turn on T$ before clears/invalidates.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
GP100 TILE COALESCE BUFFER SIZE WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Tile coalesce buffer size. War for bug 1665952


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
GP10X ENABLE PRIMIDWAR BUG 1722438
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables the GP10x specific PrimID HW WAR bug 1722438

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
GP10X ENABLE SHADERZWAR BUG 1746518
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables the GP10x specific ShaderZ HW WAR bug 1746518

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
GPU CACHEABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

GPU Cacheable Configuration

DISABLE ALL            (= 0x00000000)  // Disable GPU cache for all allocations
ALLOW RENDERTARGET     (= 0x00000001)  // Allow GPU cache for render targets
ALLOW DEPTH            (= 0x00000002)  // Allow GPU cache for depth/stencil buffers
ALLOW PRIMARY          (= 0x00000004)  // Allow GPU cache for shared or unshared primaries
ALLOW VIDEO            (= 0x00000008)  // Allow GPU cache for video surfaces
ALLOW TEXTURE          (= 0x00000010)  // Allow GPU cache for textures
ALLOW CUBEMAP          (= 0x00000020)  // Allow GPU cache for cubemap textures
ALLOW VOLUME           (= 0x00000040)  // Allow GPU cache for volume textures
ALLOW VERTEXARRAY      (= 0x00000080)  // Allow GPU cache for vertex buffers/arrays
ALLOW INDEXARRAY       (= 0x00000100)  // Allow GPU cache for index buffers
ALLOW OFFSCREEN        (= 0x00000200)  // Allow GPU cache for plain offscreen surfaces
ALLOW STREAMOUT        (= 0x00000400)  // Allow GPU cache for stream out buffers
ALLOW SEMAPHORE        (= 0x00004000)  // Allow GPU cache for semaphores
ALLOW PUSHBUFFER       (= 0x00010000)  // Allow GPU cache for push buffers
ALLOW GPFIFOBUFFER     (= 0x00020000)  // Allow GPU cache for gpfifo buffers
ALLOW CONTEXT SAVE     (= 0x00040000)  // Allow GPU cache for virtual context allocations
ALLOW TEXHEADERS       (= 0x00080000)  // Allow GPU cache for texture headers
ALLOW SAMPLERS         (= 0x00100000)  // Allow GPU cache for samplers
ALLOW ZCULL CONTEXT    (= 0x00200000)  // Allow GPU cache for ZCull context save areas
ALLOW FRAGMENTPROGRAM  (= 0x00800000)  // Allow GPU cache for fragment programs/pixel shaders
ALLOW UNKNOWN          (= 0x40000000)  // Allow GPU cache for unknown surfaces
ALLOW GDI              (= 0x80000000)  // Allow GPU cache for GDI allocations
ALLOW ALL              (= 0xc0bf47ff)  // Allow GPU cache for all allocations (default)
MASK                   (= 0xc0bf47ff)  // Mask of all configuration bits

Default values for this setting:
DEFAULT:    0xC0BF47FF
	ALLOW ALL                               

------------------------------------------------------------
GPU CACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

GPU Cache Coherency Control

DISABLE ALL                                      (= 0x00000000)  // Disable all GPU cache controls
ENABLE GPU CACHE                                 (= 0x00000001)  // Enable GPU cache support (default value)
FORCE EVICT ON LOCK                              (= 0x00000002)  // Force GPU cache eviction on CPU lock
FORCE INVALIDATE ON UNLOCK                       (= 0x00000004)  // Force GPU cache invalidation on CPU unlock
DISABLE SUBALLOCATION ON GPU CACHED ALLOCATIONS  (= 0x00000008)  // Disable suballocation on GPU cached allocations (Vista DX9 only)
FORCE EVICT ON SUBALLOCATION LOCK                (= 0x00000010)  // Force GPU cache eviction on suballocation CPU lock (Vista DX9 only)
FORCE EVICT ON UNCACHE LOCK                      (= 0x00000020)  // Force GPU cache eviction on uncache lock (Vista DX9 only)
FORCE EVICT ON WRITEONLY LOCK                    (= 0x00000040)  // Force GPU cache eviction on write-only lock (XP only)
FORCE INVALIDATE ON ALLOC                        (= 0x00000080)  // Force GPU cache invalidation on allocation creation (XP only)
FORCE INVALIDATE ON FREE                         (= 0x00000100)  // Force GPU cache invalidation on allocation free (XP only)
FORCE EVICT CPU COPY SRC                         (= 0x00000200)  // Force GPU cache eviction on CPU copy src during renaming (XP only)
FORCE INVALIDATE CPU COPY DST                    (= 0x00000400)  // Force GPU cache invalidation on CPU copy dst during renaming (XP only)
DISABLE NOOVERWRITE LOCK OPTIMIZATION            (= 0x00000800)  // Disable GPU cache optimization on No Overwrite lock (XP only)
DISABLE WRITEONLY LOCK OPTIMIZATION              (= 0x00001000)  // Disable GPU cache optimization on Write-only lock (XP only)
DISABLE HW READONLY OPTIMIZATION                 (= 0x00002000)  // Disable GPU cache optimization on HW read-only accesses (Vista DX9 only)
USE PRI REGISTER                                 (= 0x00004000)  // Use PRI registers to evict/invalidate GPU cache; default is to use host methods (XP only)
ENABLE ALL                                       (= 0x00007fff)  // Enable all GPU cache controls
MASK                                             (= 0x00007fff)  // Mask of all GPU cache control bits

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE GPU CACHE                        

------------------------------------------------------------
GRAPHENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x62951413)
ON, 1, TRUE, ENABLED     (= 0x31415926)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
GRAPHICS SHADER PREFETCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set value in bytes for GA10x+ Shader prefetch feature. See bugs 2498256 2913514. Only applies to Vertex B and pixel shaders. Note that this value will be aligned to 256B.  The maximum value allowed is capped to the shader size.


Default values for this setting:
DEFAULT:    0x00004000

------------------------------------------------------------
GRID STATE BUFFER SLOTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of grid state buffer slots.


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
GR LARGE PUSHBUFFER RENAMING CHAIN LENGTH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Graphics/Compute context small pushbuffer renaming chain length


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
GR LARGE PUSHBUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Graphics/Compute context large pushbuffer size


Default values for this setting:
DEFAULT:    0x00020000

------------------------------------------------------------
GR SMALL PUSHBUFFER RENAMING CHAIN LENGTH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Graphics/Compute context small pushbuffer renaming chain length


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
GR SMALL PUSHBUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Graphics/Compute context small pushbuffer size


Default values for this setting:
DEFAULT:    0x00004000

------------------------------------------------------------
GSYNC COMPATIBILITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

NO   (= 0x00000000)  // Not G-Sync Compatible
YES  (= 0x00000001)  // G-Sync Compatible

Default values for this setting:
DEFAULT:    NO

------------------------------------------------------------
GV100 ENABLE CONSERVATIVE RASTERIZER WAR BUG 1898952
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables the GV100 specific conservative rasterizer HW WAR bug 1898952

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
HDRINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Display the HDR indicator

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable HDR Indicator
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable HDR Indicator

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
HEAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

force use of a particular heap for all allocations

ANY     (= 0x74621345)  // use any heap (normal behavior)
SYSTEM  (= 0x29857394)  // use only system memory
VIDEO   (= 0x80238105)  // use only video memory (FB)

Default values for this setting:
DEFAULT:    ANY

------------------------------------------------------------
HEAPEVICTFAVORPREFERRED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
HEAP TIER2 COMPRESSION SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable support for Compressing Heaps on TIER2 Turing+ Architecture only

COMPRESS ENTIRE HEAP            (= 0x00000000)  // Allocate entire heap as compressed and let it remain compressed
COMPRESS ON ADDITIONAL MAPPING  (= 0x00000001)  // Compress as and when resources are placed inside heap depending on CBC Heuristic

Default values for this setting:
DEFAULT:    0x00000001
	COMPRESS ON ADDITIONAL MAPPING          

------------------------------------------------------------
HISTORY BUFFER RETIRE LIST SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Size of circular array of history buffers


Default values for this setting:
DEFAULT:    0x00000064

------------------------------------------------------------
HOPPER A TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

5 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount / RtvCbCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x00022313

------------------------------------------------------------
HOPPER A TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
HOPPER A TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
HOPPER A TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
HOPPER A TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
HOPPER TEXTURE HEADER VERSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Select whether to use the new Hopper texture headers (set to 1) or prior chip texture header (set to 0).  Temporary - only for the transition period to the new texture headers.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Use Maxwell-style Texture Headers
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Use Hopper-style Texture Headers

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
HOTKEYS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

TEST                (= 0x00000001)  // Print message at callback time
UM BREAK            (= 0x00000002)  // Break into debugger
TOGGLE              (= 0x00000004)  // Toggle a variable
STATS RESET         (= 0x00000008)  // Reset stats (on XP, only GPU cyclestats)
GPUVIEW EVENT       (= 0x00000020)  // Emits NV - D3DHOTKEY event that GPUVIEW can capture
STUTTERSTATS EVENT  (= 0x00000040)  // Emits D3DHOTKEY event that Stutterstats can capture
CYCLESTATS EVENT    (= 0x00000080)  // Emits HOTKEY event that Cyclestats can capture
KEYS MASK           (= 0x000000ef)  // Mask of all callback functions

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
HOTKEYS ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Global enable for hotkeys (default to on for debug/develop drivers)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
HOTKEYS USE GLOBAL HOOK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Use global (rather than thread-local) keyboard hook (i.e., make hotkeys work for apps which separate the message pump thread from their render thread)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
HWCURSORENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x95402745)
ON, 1, TRUE, ENABLED     (= 0x12907430)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
HYBRIDPERFSLIENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x51616260)
ON, 1, TRUE, ENABLED     (= 0x02906797)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ICAFE LOGO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This has been repurposed for iCafe detection. It is set to TRUE in Espresso base profile.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Not iCafe
ON, 1, TRUE, ENABLED     (= 0x00000001)  // iCafe

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
ICAFE LOGO CONFIG
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Configure Script for ICafe Logo display in XP (Dx9 only).


Default values for this setting:
???T:    

------------------------------------------------------------
IGNORE SET BACKGROUND PROCESSING DDI
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Causes the driver to ignore the setBackgroundProcessing DDI call suggestions. Some configurations are invalid if you do not also set the shader scheduler to use NV threads.

OFF, 0, FALSE, DISABLED  (= 0xa2b53761)
ON, 1, TRUE, ENABLED     (= 0x79292610)

------------------------------------------------------------
IMMOCCQUERY ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

Do not wait for occlusion query to complete, instead return a bogus value defined by IMMOCCQUERY RESULT

OFF, 0, FALSE, DISABLED  (= 0x22754241)
ON, 1, TRUE, ENABLED     (= 0x66855023)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
IMMOCCQUERY RESULT
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If wait for occlusion query completion is disabled, return this value immediately


Default values for this setting:
DEFAULT:    0x00001000

------------------------------------------------------------
KEPLER APPLY ALD WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Apply OCG shint ALD instruction WAR to prevent kepler HW hangs.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
KEPLER ATOMIC OPT DISABLE MASK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Disable kepler-specific ATOM instruction optimizations.

DISABLE SHARED ATOM   (= 0x00000001)  // Disable the shared atom optimization.
DISABLE UNIFORM ATOM  (= 0x00000002)  // Disable the uniform atom optimization.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
KEPLER BALANCED PRIM TIMESLICED MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Set balanced primitive mode when in timesliced mode. Affects uneven TPC configs.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
KEPLER BALANCED PRIM UNPARTITIONED MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Set balanced primitive mode when in unpartitioned mode. Affects uneven TPC configs.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
KEPLER CLEAR SM HALFCTL CTRL SCTL CYA 6
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key enables the WAR for the livelock in bug 1171386, clearing NV PGRAPH PRI GPCS TPCS SM HALFCTL CTRL SCTL CYA 6.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Use PROD value for NV PGRAPH PRI GPCS TPCS SM HALFCTL CTRL SCTL CYA 6
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Clear NV PGRAPH PRI GPCS TPCS SM HALFCTL CTRL SCTL CYA 6

------------------------------------------------------------
KEPLER COLOR DECOMPRESSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

GK20A color in-place decompression (in 3D)

DISABLE                       (= 0x00000000)  // Disable in-place decompression
ALLOW DECOMPRESSION           (= 0x00000001)  // Allow in-place decompression
DECOMPRESS FOR NAIVE ENGINES  (= 0x00000002)  // Decompress only for naive engines
DEFAULT                       (= 0x00000003)  // Allow in-place decompression, and decompress only for naive engines.

Default values for this setting:
DEFAULT:    0x00000003
	ALLOW DECOMPRESSION                     
	DECOMPRESS FOR NAIVE ENGINES            
	DEFAULT                                 

------------------------------------------------------------
KEPLER COMPUTE EMU CB FIRST SLOT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

This regkey specifies the first slot to be emulated on Kepler for Compute shaders

ZERO   (= 0x00000000)  // All CB Slots emulated
ONE    (= 0x00000001)  // slots 1 and above emulated
TWO    (= 0x00000002)  // slots 2 and above emulated
THREE  (= 0x00000003)  // slots 3 and above emulated
FOUR   (= 0x00000004)  // slots 4 and above emulated
FIVE   (= 0x00000005)  // slots 5 and above emulated
SIX    (= 0x00000006)  // slots 6 and above emulated (default)

Default values for this setting:
DEFAULT:    SIX

------------------------------------------------------------
KEPLER COMP ARITHMETIC DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

NV PGRAPH PRI BES CROP DEBUG3 COMP ARITHMETIC DISABLE

NORMAL  (= 0x00000000)
FORCE   (= 0x00000001)

------------------------------------------------------------
KEPLER FORCE TEXLOCK CTA AS TILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

If enabled, this regkey will force SM SCH TEXLOCK CTA AS TILE ENABLE on Kepler.

DISABLED COMPUTE  (= 0x00000000)  // disable for COMPUTE channels
ENABLED COMPUTE   (= 0x00000001)  // enable for COMPUTE channels

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED COMPUTE                        

------------------------------------------------------------
KEPLER GPCS TC FLUSH WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ENABLE the WAR, which means it will set NV PGRAPH PRI GPCS TC FLUSH CRETERION = 1(END OF CBE).

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
KEPLER L1 CACHE WAR BUG 986473
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disable Kepler L1 cache WAR - see bug 986473

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
KEPLER LOADCBREF VERSIONING BUG WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This regkey enables the WAR for the Kepler constant buffer versioning http:;/nvbugs/903136

OFF, DISABLED  (= 0x00000000)  // Do not apply the WAR
ON, ENABLED    (= 0x00000001)  // Apply the WAR (insert WFI whenever the amount of throttling changes)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
KEPLER MIN LOD CLAMP BEHAVIOR FOR NEAREST MIP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

This regkey controls the value set for Kepler's TextureSampler field minLodClampBehaviorForNearestMip.

INTEGER AND FRACTION  (= 0x00000000)  // Use integer + fraction. Fermi's behavior.
INTEGER ONLY          (= 0x00000001)  // Use integer only. DX desired behavior.

Default values for this setting:
DEFAULT:    INTEGER AND FRACTION

------------------------------------------------------------
KEPLER PRI GPCS TPCS SM POWER THROTTLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the default value for NV PGRAPH PRI GPCS TPCS SM POWER THROTTLE


------------------------------------------------------------
KEPLER PRI PLTCG LTCS LTSS TSTG CFG 1 ACTIVE SETS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override the default value for NV PLTCG LTCS LTSS TSTG CFG 1 ACTIVE SETS

ALL      (= 0x00000001)
HALF     (= 0x00000002)
QUARTER  (= 0x00000004)

------------------------------------------------------------
KEPLER PRI PLTCG LTCS LTSS TSTG CFG 1 ACTIVE WAYS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override the default value for NV PLTCG LTCS LTSS TSTG CFG 1 ACTIVE WAYS

GF100 1    (= 0x00000001)
GF100 ALL  (= 0x00000002)

------------------------------------------------------------
KEPLER PRI PLTCG LTCS LTSS TSTG SET MGMT 0
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When present, sets value of NV PLTCG LTCS LTSS TSTG SET MGMT 0


------------------------------------------------------------
KEPLER SAMPLE INFO DIRECT CB LOOKUP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Kepler only: Use direct cb lookup for sample info instruction (so that PS CONST FOLDING can optimize it away)

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
KEPLER SET SM QUADRANT SELECTION CONTROL MAX PIXEL WARPS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the default value for SetSmQuadrantSelectionControl:MaxPixelWarps (see //hw/kepler1 gk100/class/mfs/class/3d/kepler.mfs)

MIN  (= 0x00000001)
MAX  (= 0x00000008)

------------------------------------------------------------
KEPLER SHADER FAIL CTA REG LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Fail process if shader exceeds this CTA register limit. Useful for debugging apps in trimmed netlists.


Default values for this setting:
DEFAULT:    0x00000400

------------------------------------------------------------
KEPLER SHADER FAIL CTA THREAD LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Fail process if shader exceeds this CTA thread limit. Useful for debugging apps in trimmed netlists.


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
KEPLER SHARED MEMORY BANK MAPPING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

SHARED MEMORY BANK MAPPING in Kepler QMD

FOUR BYTES PER BANK   (= 0x00000000)
EIGHT BYTES PER BANK  (= 0x00000001)

Default values for this setting:
DEFAULT:    FOUR BYTES PER BANK

------------------------------------------------------------
KEPLER SMART TEXTURE INVALIDATES WFI
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Use intelligently inserted InvalidateTextureDataCache (with WFI) methods

OFF, 0, FALSE, DISABLED  (= 0x56023627)
ON, 1, TRUE, ENABLED     (= 0x37299934)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
KEPLER USE SHUFFLE INSTRUCTION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
KILL DRAWS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Kill all draw calls until the specified frame is reached


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
KILL DRAWS PM TRIGGER NUM FRAMES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If KILL DRAWS is enabled ( > 0), put a PM trigger at the start of first frame when drawing occurs, then one at the end of N frames


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
LARGE VA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Forces a context to use large VA space

DISABLE                      (= 0x00000000)  // Disable large VA
ENABLE LARGEVA               (= 0x00000001)  // Enable large VA on all GPUs
ENABLE LARGEVA QUADRO        (= 0x00000002)  // Enable large VA on Quadro GPUs
ENABLE LARGEVA QUADRO TESLA  (= 0x00000003)  // Enable large VA on Quadro Tesla GPUs

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
LATENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Reduces latency by limiting the number of frames the CPU can prepare before the frames are processed by the GPU. It also determines how multiple CPU-cores are used by the driver 

BEST PERFORMANCE  (= 0x00000000)  // Fastest, smoothest gameplay at all frame-rates
LOW LATENCY       (= 0x00000001)  // Useful if you experience a delay in response to i/p devices while playing games
LOWEST LATENCY    (= 0x00000002)  // Tightens driver synchronization and may further reduce latency

Default values for this setting:
DEFAULT:    BEST PERFORMANCE

------------------------------------------------------------
LATENCY INDICATOR AUTOALIGN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // Do not autoalign flash indicator
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Autoalign flash indicator

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
LATENCY INDICATOR POS X
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Screen position by % of latency flash indicator in PS FramerateMonitor. 0 = left edge, 100 = right edge.

MIN  (= 0x00000000)
MAX  (= 0x00000064)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
LATENCY INDICATOR POS Y
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Screen position by % of latency flash indicator in PS FramerateMonitor. 0 = top edge, 100 = bottom edge.

MIN            (= 0x00000000)
MAX            (= 0x00000064)
DEFAULT POS Y  (= 0x00000032)

Default values for this setting:
DEFAULT:    DEFAULT POS Y

------------------------------------------------------------
LATENCY INDICATOR SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Size in pixels of latency flash indicator in PS FramerateMonitor.

MIN           (= 0x00000000)
MAX           (= 0x000000ff)
DEFAULT SIZE  (= 0x00000064)

Default values for this setting:
DEFAULT:    DEFAULT SIZE

------------------------------------------------------------
LCDOD ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable GSync LCD Overdrive.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
LCDOD FORCED ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Force Enable GSync LCD Overdrive effect unconditionally.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
LCDOD HOTKEY ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable LCDOD hotkey.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
LCDOD INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Set the indicator of LCD OD.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
LIMITQUEUEDFBBLITSENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x14138793)
ON, 1, TRUE, ENABLED     (= 0x23812865)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
LMEM MIN SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

makes sure driver allocates at least as much shader local memory as specified


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
LODBIASADJUST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0xffffff80)
MAX  (= 0x00000080)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
LOGOENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x56616210)
ON, 1, TRUE, ENABLED     (= 0x06072997)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
LOWLATENCY VSYNC INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Show indicator of Virtual VSync (or Fast Sync) (Blue Square in top left corner) whenever driver thinks Virtyal VSync is engaged.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
LOW LATENCY BLEND FACTOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Blend factor to use for low-latency blend mode. This value is divided by 255.0f before passing to the filter shader. (it's dword because our DRS profile framework won't accept floats in app profile). Default is 127 (for 0.5f)


Default values for this setting:
DEFAULT:    0x0000007F

------------------------------------------------------------
LOW LATENCY MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Low latency mode settings. Disabled by default (to enable set VSYNCMODE=VIRTUAL).  When enabled this provides a mode which is similar to 'vsync ON' - i.e, no tearing, but has fps/latency similar to 'vsync OFF'. The idea is to let the app render as fast it can and present the latest frame at vblank. The BLEND mode enables temporal supersampling using a exponential decay filter by making use of the additional rendered frames to smoothen out the animation.

ALLOW            (= 0x00000001)  // Allows LOW Latency VSync (Fast Sync). Set this bit to 0 for denylisting the app.
BLEND            (= 0x00000002)  // Enable Blending. Might result in slightly higher latency but smoother animation. Use LOW LATENCY BLEND FACTOR to control blending factor.
DYNAMIC FPS CAP  (= 0x00000004)  // Enable Dynamic fps limit to cap to a multiple of refresh rate.
COLLAPSE FLIP    (= 0x00000008)  // Enable Display hardware's collapseFlip mechanism to pick the latest rendered frame.

Default values for this setting:
DEFAULT:    0x0000000D
	ALLOW                                   
	DYNAMIC FPS CAP                         
	COLLAPSE FLIP                           

------------------------------------------------------------
MAXGPUS MULTIGPU BROADCAST SHIM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This value is used in Multi-GPU Broadcast shim to define maximum number of GPUs in a mosaic group

MIN  (= 0x00000001)
MAX  (= 0x00000004)

Default values for this setting:
DEFAULT:    MAX

------------------------------------------------------------
MAXWELL A TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

4 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x0000230A

------------------------------------------------------------
MAXWELL A TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
MAXWELL A TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
MAXWELL A TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.300000

------------------------------------------------------------
MAXWELL A TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
MAXWELL B EMULATE PIXLD OFFSET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable/Disable driver path to emulate pixld.offset via LDC lookup. Not valid on Volta

DISABLED, OFF  (= 0x00000000)
ENABLED, ON    (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
MAXWELL B FAST GS AUTOMATIC COMPILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override the decision of the driver to compile a regular GS into a Fast GS.

DYNAMIC  (= 0x92446898)  // Let the driver heuristic decide when to compile a regular GS into a FastGS. This is the default.
ALWAYS   (= 0x83557128)  // The driver will ALWAYS try to compile for Fast GS. It may still fail if the shader or states are incompatible.
NEVER    (= 0x99941284)  // The driver will NEVER try to compile for Fast GS.

Default values for this setting:
DEFAULT:    DYNAMIC

------------------------------------------------------------
MAXWELL B FAST GS USE VIEWPORT ORDER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override the decision of the driver whether to use primitive order or viewport order with Fast GS multicast

DYNAMIC  (= 0xb03b67be)  // Let the driver heuristic decide when to use primitive order or the viewport order. This is the default.
ALWAYS   (= 0x59bb4cef)  // The driver will ALWAYS tell the hardware to use the Viewport Order.
NEVER    (= 0x8c83bdb5)  // The driver will NEVER tell the hardware to use the viewport order (it will use the primitive order).

Default values for this setting:
DEFAULT:    DYNAMIC

------------------------------------------------------------
MAXWELL B FAST GS WAR 1514369
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override the decision of the driver to compile a fast gs with the workaround for bug 1514369.

DYNAMIC  (= 0x5d3cc844)  // Let the driver heuristic decide when to enable the WAR
ALWAYS   (= 0xbca229ec)  // Whenever the driver encounters a Fast GS it will compile it with the WAR
NEVER    (= 0x451ff4aa)  // The driver will NEVER try to compile a Fast GS with the WAR.

Default values for this setting:
DEFAULT:    DYNAMIC

------------------------------------------------------------
MAXWELL B SAMPLE INTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

When enabled the driver will change the sample pattern positions each frame or each refresh cycle to emulate a higher quality of antialiasing

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MAXWELL B SAMPLE INTERLEAVE ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Setting from which CPL will decide whether to show MFAA as normal or greyed out

DISABLED, OFF  (= 0x00000000)  // MFAA is not supported
ENABLED, ON    (= 0x00000001)  // MFAA is supported

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
MAXWELL B SAMPLE INTERLEAVE HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable hotkey mode. This causes the feature to get enabled only when using the hotkey (CTRL+F12) and alternates sample positions every frame even when vsync is off/windowed mode.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MAXWELL B SAMPLE INTERLEAVE INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Show indicators of MFAA (Green Square) and TSF (Blue bar) whenever the driver thinks the effect is on, to help QA quickly troubleshoot issues

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MAXWELL B SAMPLE INTERLEAVE MODE ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enabled Modes for sample interleave (MFAA)

1x to 2x    (= 0x00000001)  // Enable 1x->2x mode.
2x to 4x    (= 0x00000002)  // Enable 2x->4x mode.
4x to 8x    (= 0x00000004)  // Enable 4x->8x mode.
8x to 16x   (= 0x00000008)  // Enable 8x->16x mode.
16x custom  (= 0x00000010)  // Enable 16x custom pattern mode (which is same as standard pattern) - so setting this has no effect.

Default values for this setting:
DEFAULT:    0x0000001E
	2x to 4x                                
	4x to 8x                                
	8x to 16x                               
	16x custom                              

------------------------------------------------------------
MAXWELL B SAMPLE INTERLEAVE NUM SETS IN FILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

No. of sets of sample locations present in the sample pos files. Used only when SAMPLES FROM FILE is set in MAXWELL B SAMPLE INTERLEAVE SETTINGS, and MAXWELL B SAMPLE INTERLEAVE PATH contains path containing the sample position files.


Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
MAXWELL B SAMPLE INTERLEAVE PATH
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

path containing files with forced sample locations and/or the custom TSF filter shader binary. For sample patterns, the path must contain 5 files named 1.txt, 2.txt, 4.txt, 8.txt and 16.txt - each containing the sample locations to be used for the corresponding AA mode for 16 samples for given no. of consecutive frames. Every line in these files should contain a set of 16 sample locations as pair of 4 bit unsigned integers that represent x and y offsets in 1/16 subpixel increments from the top left corner of the pixel. Each file should have MAXWELL B SAMPLE INTERLEAVE NUM SETS IN FILE lines corresponding to sample positions to be used for as many consecutive frames.


------------------------------------------------------------
MAXWELL B SAMPLE INTERLEAVE PROFILED SHADERS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Comma seperated list of shader hashes that need IPA to IPA.offset modification. Used when PATCH ATTRIBUTE EVAL OFFSETS ONLY PROFILED SHADERS bit is set in MAXWELL B SAMPLE INTERLEAVE SETTINGS. Note that no. of shaders is currently limited to 10 (MAX PATCHED SHADERS defined in nvPSMaxwellSampleInterleave.h)


------------------------------------------------------------
MAXWELL B SAMPLE INTERLEAVE SETTINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

additional settings for the sample interleave feature

SAMPLES FROM FILE                 (= 0x00000004)  // Do not use our default patterns but get the sample positions from a file specified in MAXWELL B FRAME SAMPLE POSITION INTERLEAVE PATH
DISABLE ON SQUARE TARGETS         (= 0x00000008)  // Disable the effect on square rendertargets, the rationale being they might be used to encode shadow maps
DISABLE DITHERING                 (= 0x00000010)  // Some games are incompatible with a sample pattern that varies per pixel position. So disable this for this game
DECOMPRESS DEPTH ON TEXTURE READ  (= 0x00000020)  // L2 from texture is unable to interpret non standard sample positions for depth, so we need to decompress them on the fly before that texture read happens. No need to enable if corruption is not visible.
DISABLE ON DENY LISTED RATIOS     (= 0x00000040)  // Disable the effect on rendertargets/z-buffers of certain ratios (1:1, 2:1, 3:1, 4:1, 1:2, 1:3 and 1:4), the rationale being they might be used to encode shadow maps
ALLOW ONLY ON ALLOWLISTED RATIOS  (= 0x00000200)  // Enable the effect only on surfaces that are of the same aspect ratio as the backbuffer. This can be used to avoid applying interleaving on shadowmaps for games where DISABLE ON DENY LISTED RATIOS doesn't work.
ALLOW ON BIGGER THAN BACK BUFFER  (= 0x00000400)  // when ALLOW ONLY ON ALLOWLISTED RATIOS is set, by default interleaving is disabled on surfaces bigger than the backbuffer. Set this key to enable it for such surfaces that have same aspect ratio as backbuffer but are bigger. This setting has no effect if ALLOW ONLY ON WHITELISTED RATIOS isn't set.
IGNORE APP PROFILE                (= 0x00001000)  // if MAXWELL B SAMPLE INTERLEAVE is ON and there is no app profile associated with the current executable, apply the effect nonetheless, used for testing purpose
PATCH ATTRIBUTE EVAL OFFSETS      (= 0x00004000)  // Always evaluating the attributes at pixel center causes corruptions with some games when run with MFAA and without MSAA. Setting this bit causes the driver to replace all IPA instructions with IPA.offset when the shader is used without MSAA which ensures the attribute evaluation happens at the same location as the jittered raster sample position.

Default values for this setting:
DEFAULT:    0x00001040
	DISABLE ON DENY LISTED RATIOS           
	IGNORE APP PROFILE                      

------------------------------------------------------------
MAXWELL B TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

4 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x00002313

------------------------------------------------------------
MAXWELL B TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
MAXWELL B TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
MAXWELL B TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
MAXWELL B TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
MAXWELL B USE LEGACY SQRT EXPANSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Emits legacy sqrt (RSQ+RCP) NVIR expansion for Maxwell GM20x shaders. By default, use GM20x native SQRT instruction.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MAXWELL CIRCULAR BUFFER EVICTION POLICY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Force Maxwell circular buffer eviction policy (NV PTPC PRI PE L2 EVICT POLICY, NV PGPC PRI RASTERARB LINE CLASS).

FIRST   (= 0x00000000)  // First
NORMAL  (= 0x00000001)  // Normal
LAST    (= 0x00000002)  // Last

Default values for this setting:
DEFAULT:    LAST

------------------------------------------------------------
MAXWELL LOW LOD OPTIMIZATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls behavior of Low LOD optimization

ENABLE             (= 0x00000001)  // enable optimization
TESSELLATION ONLY  (= 0x00000002)  // restrict the optimization only to tessellation shaders (currently noop for DX as we don't yet support VS-GS part)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
MAXWELL MMU WAR BUG 1317235
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Set  MMU RSRVD. LTP UTLB CL VC NB PRI WAR for bug 1317235

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MAXWELL PIXEL SHADER BARRIER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Use PSB for GPU waits when applicable. If disabled, use WFI instead.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MAXWELL PRI PES VSC L1 SWITCH SM LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When present, sets value of NV PGRAPH PRI GPCS PPCS PES VSC L1: SWITCH SM LIMIT


------------------------------------------------------------
MAXWELL PRI PLTCG LTCS LTSS TSTG SET MGMT 5
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When present, sets value of NV PLTCG LTCS LTSS TSTG SET MGMT 5


------------------------------------------------------------
MAXWELL SCG COMPUTE1 MAX SM COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Max number of SMs which can be used for compute 1 (async) work on GM20x+


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
MAXWELL SCG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to control SCG behaviour

NONE                               (= 0x00000000)
DISABLE BLITS ON ASYNC COMPUTE     (= 0x00000010)  // Disable promoting blits to async compute stream for legacy apps SCG
FORCE I2M FOR ASYNC COMPUTE BLITS  (= 0x00000020)  // Force usage of in-compute class i2m for all async compute blits (Maxwell default)
FORCE CE FOR ASYNC COMPUTE BLITS   (= 0x00000040)  // Force usage of in-compute class CE for all async compute blits (Pascal+ default)

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
MAXWELL SM WAR BUG 1318757
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable OCG WAR for SM bug SW1318757

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MAXWELL TILEDCACHE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

enable/disable tiled cache

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MAXWELL TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

4 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x0000210A

------------------------------------------------------------
MAXWELL TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
MAXWELL TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
MAXWELL TILEDCACHE FORCE DISCARD ON DOWNSAMPLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Force L2 invalidate on AA downsample

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MAXWELL TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.300000

------------------------------------------------------------
MAXWELL TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
MAXWELL TILEDCACHE TILESIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set X (low 16 bits) and Y (high 16 bits) of tile size


Default values for this setting:
DEFAULT:    0x00400040

------------------------------------------------------------
MAXWELL UNOPT LOD CLAMP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables or disables unopt LOD clamp for maxwell

OFF, 0, FALSE, DISABLED  (= 0x56023627)
ON, 1, TRUE, ENABLED     (= 0x37299934)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MAXWELL VDC 4TO2 DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

This regkey is to set [NV PLTCG LTCS LTSS DSTG CFG0, NV PGRAPH PRI BES CROP DEBUG3 COMP] VDC 4TO2 DISABLE

NORMAL  (= 0x00000000)
FORCE   (= 0x00000001)

------------------------------------------------------------
MAXWELL WDDM2 FORCE 128K PTE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

enable/disable forcing large page sizes to be 128KB on Maxwell under WDDM2

FORCE OFF  (= 0x00000000)  // Force large page sizes to *not* be 128KB on Maxwell under WDDM2
FORCE ON   (= 0x00000001)  // Force large page sizes to be 128KB on Maxwell under WDDM2

Default values for this setting:
DEFAULT:    FORCE OFF

------------------------------------------------------------
MAX PENDING CMD BUFFERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limit max number of pending command buffers (per context) in software queue. If key is set zero it will be ignored


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
MAX RENAMING MEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limit max amount of memory used for renaming on XP


------------------------------------------------------------
MAX TILESIZE BUFFERINTERLEAVE OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When USE MAX TILESIZE TO DISABLE BINNING is enabled, and T$ disabled, we use this buffer interleate setting to minimize overhead from HW binning.


Default values for this setting:
DEFAULT:    0x0003431C

Could not locate information for plain text key: MB DisableVideoLink

------------------------------------------------------------
MC2WAYFALLBACK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls how 4-way SLI system fallbacks to 2-way rendering

STATIC   (= 0x56856345)  // force 2-way fallback
DYNAMIC  (= 0x61671064)  // fallback based on dynamic heuristics
OFF      (= 0x34214578)  // never fallback, always run 4-way
TEST     (= 0x23cae348)  // test fallback (keep doing fallback/recovery)

Default values for this setting:
DEFAULT:    DYNAMIC

------------------------------------------------------------
MCAFRSHOWOVERLAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x34045364)
ON, 1, TRUE, ENABLED     (= 0x24554582)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCALLOWUNRESTRICTEDAFR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Bypass limitation of AFR to 2 GPUs on Pascal and newer GPUs

OFF, 0, FALSE, DISABLED  (= 0x049368db)
ON, 1, TRUE, ENABLED     (= 0x01f296c1)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCAPPSPECIFICHACKS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

multichip app specific hacks for single app in DX9

NONE                                        (= 0x00000000)  // the default value, no app specific hacks
DISCARD ON NOT EQUALLY DIRTY CUBE MIP RTT   (= 0x00000001)  // Discard content of cube maped or mip mapped textures only if number of dirty subres isn't equal number of valid subres
IGNORE DISCARD SRT                          (= 0x00000002)  // Ignore both of the DISCARD * SRT bits when the render target has been synced for texturing.
DO RESOLVE ON RTT MATCHED PRIMARY           (= 0x00000004)  // Ignore discard on RT textures matched to primary size
RESERVED3                                   (= 0x00000008)  // Reserved
RESERVED4                                   (= 0x00000010)  // Reserved
RESERVED5                                   (= 0x00000020)  // Reserved
CRYSIS2 HACK POSTMSAAEDGEFILTERNV OVERRIDE  (= 0x00000040)  // Fix up Crysis2 binary to be consistent with SLI
RESERVED7                                   (= 0x00000080)  // Reserved
FORCE REPORT NO SLI SUPPORT FROM NVAPI      (= 0x00000100)  // If application has buggy its own SLI support we need to do SLI magic in the driver and force app think it's run on single GPU
RESERVED9                                   (= 0x00000200)  // Reserved
RESERVED10                                  (= 0x00000400)  // Reserved
RESERVED11                                  (= 0x00000800)  // Reserved
RESERVED12                                  (= 0x00001000)  // Reserved
RESERVED13                                  (= 0x00002000)  // Reserved
RESERVED14                                  (= 0x00004000)  // Reserved
RESERVED15                                  (= 0x00008000)  // Reserved
RESERVED16                                  (= 0x00010000)  // Reserved
RESERVED17                                  (= 0x00020000)  // Reserved
RESERVED18                                  (= 0x00040000)  // Reserved
RESERVED19                                  (= 0x00080000)  // Reserved
RESERVED20                                  (= 0x00100000)  // Reserved
RESERVED21                                  (= 0x00200000)  // Reserved
RESERVED22                                  (= 0x00400000)  // Reserved
RESERVED23                                  (= 0x00800000)  // Reserved
RESERVED24                                  (= 0x01000000)  // Reserved
RESERVED25                                  (= 0x02000000)  // Reserved
RESERVED26                                  (= 0x04000000)  // Reserved
RESERVED27                                  (= 0x08000000)  // Reserved
RESERVED28                                  (= 0x10000000)  // Reserved
RESERVED29                                  (= 0x20000000)  // Reserved
RESERVED30                                  (= 0x40000000)  // Reserved
RESERVED31                                  (= 0x80000000)  // Reserved

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
MCAPPSPECIFICHACKS10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

multichip app specific hacks for single app

NONE                                                  (= 0x00000000)  // the default value, no app specific hacks
DO NOT DISCARD ON SCREENSIZE A2B10G10R10 RTT          (= 0x00000001)  // Respect sync on screensize A2B10G10R10 RTT, Dirt: Showdown specific hack
SKIP TINY TEXTURE RESOLVE ON BLITTING                 (= 0x00000002)  // Ignore small texture (up to 2x2) resolve on blit, Stormrise specific hack
FORCE RESOLVE ON SECONDARY GPU FOR SHARED RESOURCES   (= 0x00000004)  // Force resolve on secondary GPUs for shared resources, specific for Lucas Arts Hive Engine Demo
IGNORE READ LOCK FOR STAGING TEXTURES                 (= 0x00000008)  // Ignore CPU read lock for staging textures - real hack, specific to Red Faction: Armageddon
EARLY PUSH ALL SUBRESOURCES                           (= 0x00000010)  // Defer early push of subresources with hope that we can early push the entire resource
SKIP NOSUBRES RTT BUT TINY RESOLVE ON TEXTURING       (= 0x00000020)  // don't resolve textures before texturing unless they are tiny (2x2), but respect resolve for resources with subresources
CRYSIS2 HACK POSTMSAAEDGEFILTERNV OVERRIDE            (= 0x00000040)  // Fix up Crysis2 binary to be consistent with SLI
DO NOT DISCARD SMALL COMPUTE                          (= 0x00000080)  // Avoid discarding small compute resources (under 4kB)
FORCE REPORT NO SLI SUPPORT FROM NVAPI                (= 0x00000100)  // If application has buggy its own SLI support we need to do SLI magic in the driver and force app think it's run on single GPU
DO NOT DISCARD ON MIDSIZE TEXTURE ABGR8 RTT           (= 0x00000200)  // Syncs on ABGR8 RTT or on any RTTs with 0x100X0x100 size,COD:BO2 fetches Online status of player
DISCARD ON TEXTURING AFTER BLIT FOR SCREENSIZE RTT    (= 0x00000400)  // Discard sync on screensize RTT if texturing happen after blit into
DISCARD ON COMPUTE 1D                                 (= 0x00000800)  // Discard content of compute (like DISCARD ON COMPUTE bit) only for 1-dimensional resources
FC GPULT BG                                           (= 0x00001000)  // Force load balancing to GPU LIMITED if bridgeless is in action, AvP
DISCARD ON RESOURCES WITH SUBRESOURCES GPU COUNT      (= 0x00002000)  // Discard GFX resolve on RTTs with subresources (cube/mip mapped) after nAFR GPU attempt to bind it as texture
ACIV LOCK WAR                                         (= 0x00004000)  // Assassins Creed: BF MP WAR. Requires 0x8 be set. Granted read lock on staging RTT ABGR8 0x60/0x60 or 0x200/0x200
ALLOW P2P FOR COMPRESSED TEXTURES                     (= 0x00008000)  // Application could use GPU for compress textures, it happens in unicast and final compressed texture becomes dirty on non-active GPUs. as result we need to sync such textures, but use P2H2P instead of more fast P2P. This bit allowed P2P for such cases.
RESPECT SYNCS FROSTBITE SPECIFIC                      (= 0x00010000)  // SW:BF and possible other Frostbite 3+ based games requires specific syncs to handle temporal AAs/AO  and cubemap updates properly, this bit is about these syncs, also respect sync for decal VBs
DO SYNC ON BIND FOR SQUARE TYPELESS R8 R32 BGRA8 RTT  (= 0x00020000)  // Respects sync on bind for square RTTs with B8G8R8A8, R8 and R32 TYPELESS format, hack for broken texture streaming in Elite Dangerous
DO NOT REPORT SLI FOR MOSAIC UNTIL IN AFR             (= 0x00040000)  // Do not report SLI to the app until in AFR. Trust the App that it will query SLI state again on switching to fullscreen and won't disable it's SLI features based on the initial values returned. Hack for hung Elite Dangerous
DO SYNC ON BIND FOR SQUARE ABGR16F 0x100  RTT         (= 0x00080000)  // Respect sync on bind for 0x100/0x100 ABGR16F RTT. The app has bind/unbind it rarely and discard on bind in AFR2 key kept it discarded wrongly. Hack for Mad Max
ALLOW BF1 SYNCS                                       (= 0x00100000)  // Allow sync of a few specific resources in BF1 Frostbite engine to fix some flickering
DO SYNC ON BIND FOR 3D RTT                            (= 0x00200000)  // Do sync on bind for  3D textures (depth >1), this WAR needed for fog of war corruption fix in XCOM2
DO SYNC ON BIND FOR SQUARE RGBA ABGR 0x100 0x200 RTT  (= 0x00400000)  // Do sync on bind for square RTTs with A8B8G8R8, R8G8B8A8 formats, and 0x100/0x200 width, WAR to fix corruption with Dark Souls 3
DISCARD ON R11G11B10 FLOAT RT                         (= 0x00800000)  // Discard content of R11G11B10 FLOAT RT, DiRT 4 specific hack
ALLOW RFTA SYNCS                                      (= 0x01000000)  // Allow sync of a few specific resources in Remnant From The Ashes to avoid corruption
DISCARD ON NVAPI SYNC FOR SCREENSIZE RTT              (= 0x02000000)  // Discard primary size resolves from beginEndResourceRendering, Starlink specific hack
RESPECT PRIMARY DISCARD ON PRESENT                    (= 0x04000000)  // Discard primary surface if and only if it has DISCARD ON PRESENT flag (for 3DMark)
DISABLE COPY TRACKER SWAPPING                         (= 0x08000000)  // Disable swapping of redirected resources in CopyTracker in AFR
DO SYNC ON SCREENSIZE R11G11B10 FLOAT                 (= 0x10000000)  // Sync screen size resources of type R11G11B10 FLOAT
DISCARD ON NVAPI SYNC FOR SQUARE RTT 0x400            (= 0x20000000)  // Discard 0x400 x 0x400 size resolves from beginEndResourceRendering
ALLOW JWE SYNCS                                       (= 0x40000000)  // Allow sync of a few specific resources in Jurassic World Evolution to fix some flickering
RESERVED31                                            (= 0x80000000)  // Reserved

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
MCAPPSPECIFICHACKS12
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

multichip app specific hacks for single app

NONE                                                 (= 0x00000000)  // the default value, no app specific hacks
DETECT FABLE SHADOWS                                 (= 0x00000001)  // Detect and force-sync Fable shadows
DISCARD 200x100 R32                                  (= 0x00000002)  // Discard 200x100 R32 textures
FORCE PUSH 20x20x20x28 VOL                           (= 0x00000004)  // Push on present 20x20x20 volume textures of format 28 (Fable)
DISCARD ON 256K BUFFERS                              (= 0x00000008)  // Discard sync of 256K 1D buffers (Fable)
AVOID DISCARD SELECTED FABLE RESOURCES               (= 0x00000010)  // A number of resources in Fable that should not be discarded
DISCARD PRIMARYPRPORTIONS                            (= 0x00000020)  // Discard for resources with primary proportions
DISCARD ON BUFFERS ABOVE 1M                          (= 0x00000040)  // Discard 1D Buffers above 1MB
DISCARD SCREENSIZE TEXTURES                          (= 0x00000080)  // Discard screen size textures
DISCARD A0x5Ax40 RoTR                                (= 0x00000100)  // Discard A0x5Ax40 size textures (Rise of Tomb Raider)
EARLY PUSH OF INFREQUENTLY WRITTEN RESOURCES         (= 0x00000200)  // Perform early push on infrequently updated resources (needed for Fable)
DISABLE PS ZCULL EXPL12                              (= 0x00000400)  // Disable PS ZCull for Explicit 12 SLI
RESERVED11                                           (= 0x00000800)  // Reserved
RESERVED12                                           (= 0x00001000)  // Reserved
FORCE RESOLVE ON SECONDARY GPU FOR SHARED RESOURCES  (= 0x00002000)  // Force resolve on secondary GPUs for shared resources, specific for Style Transfer Demo
DETECT STYLETRANSFER UAV BARRIER                     (= 0x00004000)  // Detect and force sync on UAV -> State Common transition barrier for GDC Demo StyleTransfer app
RESERVED15                                           (= 0x00008000)  // Reserved
RESERVED16                                           (= 0x00010000)  // Reserved
RESERVED17                                           (= 0x00020000)  // Reserved
RESERVED18                                           (= 0x00040000)  // Reserved
RESERVED19                                           (= 0x00080000)  // Reserved
RESERVED20                                           (= 0x00100000)  // Reserved
RESERVED21                                           (= 0x00200000)  // Reserved
RESERVED22                                           (= 0x00400000)  // Reserved
RESERVED23                                           (= 0x00800000)  // Reserved
RESERVED24                                           (= 0x01000000)  // Reserved
RESERVED25                                           (= 0x02000000)  // Reserved
RESERVED26                                           (= 0x04000000)  // Reserved
RESERVED27                                           (= 0x08000000)  // Reserved
RESERVED28                                           (= 0x10000000)  // Reserved
RESERVED29                                           (= 0x20000000)  // Reserved
RESERVED30                                           (= 0x40000000)  // Reserved
RESERVED31                                           (= 0x80000000)  // Reserved

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
MCBRIDGELESS CE SEMAPHORE HACK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Bug 1486097 Hack CE semaphore of bridgeless codepath for FarCry3

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MCBROADCASTRENDERINGMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable a test sli mode, which renders the same content on all gpus

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCBROADCASTVIDEO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Makes decoded video available on all GPUs

BROADCAST POSTPROCESS  (= 0x00000001)  // Enable post processing on all GPUs

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
MCCOMPAT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

AUTOSELECT, ENABLE SLI AUTOSELECT             (= 0x00000000)  // the default value when no sli mode is set
FORCE AFR, FORCE 2AFR, FORCE 2 AFR            (= 0x00000001)  // Same as FORCE 2AFR, force 2-AFR rendering mode for this app
FORCE SFR                                     (= 0x00000002)  // force SFR rendering mode for this app
FORCE AFR OF SFR  FALLBACK 2AFR               (= 0x00000003)  // force 2-AFR on 2-way and 3-way, AFR OF SFR on 4-way
DISABLE SLI, FORCE SINGLE                     (= 0x00000004)  // disable SLI mode entirely
FORCE 4AFR, FORCE 4 AFR                       (= 0x00000005)  // force N-way AFR on N-way system
FORCE 3AFR, FORCE 3 AFR                       (= 0x00000006)  // force 2-AFR on 2-way system and 3-AFR on N-way
FORCE AFR OF SFR  FALLBACK 3AFR               (= 0x00000007)  // force 2-AFR on 2-way system, 3-AFR on 3-way, AFR OF SFR on 4-way
SLI MODE MASK                                 (= 0x00000007)  //  --- not a value. This is a mask to select sli mode enum field
RESERVED4                                     (= 0x00000008)  // Reserved
STATIC OR WRITEONLY VB IN HOST                (= 0x00000010)  // when no broadcast HW is available, we might put VBs in host to avoid syncing
LOCKABLE TEXTURES IN HOST                     (= 0x00000020)  // when no broadcast HW is available, we want to put lockable textures in host to avoid syncing
RELEASE GPU FOR CUDA                          (= 0x00000040)  // if cuda is active, release the last gpu for cuda, Tesla only
IGNORE TINY LOCKS                             (= 0x00000080)  // ignore surface locks for <= 2x2 surfaces or 2x2 lock rectangles
IGNORE LOCK ON PRIMARY                        (= 0x00000100)  // ignore primary surface locks
IGNORE PIXELQUERY                             (= 0x00000200)  // ignore pixel queries (sync/locks)
AFR DISCARD TEXTURING SYNC                    (= 0x00000400)  // Hacky bit, use only when absolutely non-avoidable: Do not AFR-sync texture before texturing. (65/70 drivers: it was DONT SYNC ON TEXTURE PUSH)
APPBUG FORCE FLIPCHAIN SYNC                   (= 0x00000800)  // sync flipchain, if app does not clear every frame. Was used in nvr70 as ENABLE VTEX IN AFR.
LASTMINUTE FIXES                              (= 0x00001000)  // use this bit for the critical last minute's fixes. Was used in nvr65 drivers (DONT ASSUME SRT ON TEXTURE MEANS CLEAN)
IGNORE EVENTQUERY                             (= 0x00002000)  // ignore event queries (sync/locks)
DISABLE TEXTURE PUSH                          (= 0x00004000)  // disable texture push for syncing in AFR's mode
LIMIT EARLY PUSH UP TO MIDSIZE SURFACES       (= 0x00008000)  // Limit early push strategy up to midsize 0x100 x 0x100 sufaces
DISCARD TEXTURING SYNC ON ZB                  (= 0x00010000)  // Skip sync on texturing for Z-buffers
AFR DISCARD SYNC TEXTURE LARGER THAN PRIMARY  (= 0x00020000)  // for disabling textures that are larger than primary
RESERVED19                                    (= 0x00040000)  // Reserved
DISCARD CONTENT OF CUBE MIP TEXTURES          (= 0x00080000)  // Discard content of cube maped or mip mapped textures
AFR DISCARD ALL BUT TINY TEXTURING SYNC       (= 0x00100000)  // Even hackier bit: skip all texture sycns but very small ones (2x2)
SFR ON TEXTURES                               (= 0x00200000)  // split textures in SFR.
DISCARD RT CONTENTS ON SRT                    (= 0x00400000)  // Assume a surface will be fully rendered on full target sets and
ASSUME NOINTERFRAME BLITS                     (= 0x00800000)  // Assume blits don't need to migrate, even if semantics suggest we do.
LIMIT EARLY PUSH TO TINY SURFACES ONLY        (= 0x01000000)  // Allow early push strategy for tiny 2x2 and smaller surfaces only
DISCARD RT CONTENTS ON PARTIAL SRT            (= 0x02000000)  // Assume even a partial SRT can safely discard contents
AFR2 FLAGS                                    (= 0x02400000)  // 'fast' SLI mode for UI in app profiles (DISCARD RT CONTENTS ON PARTIAL SRT|DISCARD RT CONTENTS ON SRT
FORCE 2 AFR2                                  (= 0x02400001)  // (AFR2 FLAGS|FORCE 2AFR)
FORCE 3 AFR2                                  (= 0x02400006)  // (AFR2 FLAGS|FORCE 3AFR)
FORCE 4 AFR2                                  (= 0x02400005)  // (AFR2 FLAGS|FORCE 4AFR)
OPTIMAL                                       (= 0x02400001)  // deprecated: for compatibility only (FORCE 2 AFR2)
DISCARD RT CONTENTS ON PARTIAL SRT2           (= 0x04000000)  // Assume partial SRT can be safely discarded, unless it uses more than one viewport
RESERVED27                                    (= 0x08000000)  // Reserved
RESERVED28                                    (= 0x10000000)  // Reserved
RESERVED29                                    (= 0x20000000)  // Reserved
DISCARD RT CONTENTS WHEN BLENDING             (= 0x40000000)  // Skip sync before blending.
OVERRIDE BIT                                  (= 0x80000000)

Default values for this setting:
DEFAULT:    0x00000000
	AUTOSELECT                              
	AUTOSELECT                              

------------------------------------------------------------
MCCOMPAT10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

multichip app compat value for DX10 apps

AUTOSELECT                                      (= 0x00000000)  // the default value when no sli mode is set
FORCE 2AFR                                      (= 0x00000001)  // force 2-AFR rendering mode for this app
FORCE SFR                                       (= 0x00000002)  // force SFR rendering mode for this app
FORCE AFR OF SFR  FALLBACK 2AFR                 (= 0x00000003)  // force 2-AFR on 2-way and 3-way, AFR OF SFR on 4-way
DISABLE SLI                                     (= 0x00000004)  // disable SLI mode entirely
FORCE 4AFR                                      (= 0x00000005)  // force N-way AFR on N-way system
FORCE 3AFR                                      (= 0x00000006)  // force 2-AFR on 2-way system and 3-AFR on N-way
FORCE AFR OF SFR  FALLBACK 3AFR                 (= 0x00000007)  // force 2-AFR on 2-way system, 3-AFR on 3-way, AFR OF SFR on 4-way
SLI MODE MASK                                   (= 0x00000007)  //  --- not a value. This is a mask to select sli mode enum field
AFR ONLY APP                                    (= 0x00000008)  // An app queries old sli nvapi which doesn't allow dynamic transitions. No SLIAA, no notebook power savings
DISCARD ON RENDERING FOR TEXTURES               (= 0x00000010)  // discard content of texture RTs before rendering
DISCARD ON RENDERING FOR NON TEXTURES           (= 0x00000020)  // discard content of non-texture RTs before rendering
DISCARD ZBUF DATA ON RENDERING                  (= 0x00000040)  // discard content of depth buffers before rendering
DISCARD STENCIL DATA ON RENDERING               (= 0x00000080)  // discard content of stencils buffers before rendering
AFR2 FLAGS                                      (= 0x000000f0)  // AFR2 Flags for DX10
DISCARD ON STREAM OUT                           (= 0x00000100)  // discard content of vertex buffers before stream out
SKIP DEFERRED RESOLVE OF BOUND VIEWS            (= 0x00000200)  // skip deferred resolve of views that are bound, and rely on the app re-binding them to trigger a later resolve
SKIP RESOLVE ON VERTEX BUFFER                   (= 0x00000400)  // skip resolve of vertex buffers
SKIP NON HDR TEXTURE RESOLVE MATCHED PRIMARY    (= 0x00000800)  // similar to SKIP TEXTURE RESOLVE MATCHED PRIMARY but we only skip if the texture isn't HDR (float16)
SKIP TEXTURE RESOLVE ON TEXTURING               (= 0x00001000)  // don't resolve textures before texturing, really hacky bit
SKIP TEXTURE RESOLVE MATCHED PRIMARY            (= 0x00002000)  // don't resolve before texturing if the texture width/height match primary
SKIP ALL BUT TINY TEXTURE RESOLVE ON TEXTURING  (= 0x00004000)  // don't resolve textures before texturing unless they are tiny (2x2), another really hacky bit
SKIP TEXTURE RESOLVE ON MIDSIZE TEXTURES        (= 0x00008000)  // don't resolve textures with height from 64 to 512 and width from 64 to 1024, which treated as midsize
DISCARD ON BLIT DESTNATION                      (= 0x00010000)  // don't resolve destination of blits, even if the blit is partial
RETURN EVENT QUERY SUCCESS IMMEDIATELY          (= 0x00020000)  // don't stall waiting for event query results but return success immediately
RETURN OCCLUSION QUERY SUCCESS IMMEDIATELY      (= 0x00040000)  // don't stall waiting for occlusion query results but return non-0 value immediately
DISCARD SRC ON AA RESOLVE                       (= 0x00080000)  // discard SRC sync on AA resolve
SKIP INFREQUENT TEXTURE RESOLVES                (= 0x00100000)  // If a texture is written frequently but resolved infrequently, discard the resolve
CLEAR DISCARDED TEXTURES                        (= 0x00200000)  // If we elect to skip the resolve of an RT-texture, clear it instead
DISCARD ON HUGE ZB FOR TEXTURING                (= 0x00400000)  // Discard texturing sync on HUGE ZB (bigger than 4kx4k)
APPBUG FORCE FLIPCHAIN SYNC                     (= 0x00800000)  // Sync flipchain, if app does not draw or clear every frame
RESERVED24                                      (= 0x01000000)  // Reserved
ASSUME NOINTERFRAME BLITS                       (= 0x02000000)  // Discard blit resolve
DISCARD ON RESOURCES WITH SUBRESOURCES          (= 0x04000000)  // Discard GFX resolve on RTTs with subresources (cube/mip mapped) after nAFR GPU attempt to bind it as texture
DISCARD ON COMPUTE                              (= 0x08000000)  // discard content of compute
RESERVED28                                      (= 0x10000000)  // Reserved
SKIP TEXTURE RESOLVE ON COMPUTE TEXTURING       (= 0x20000000)  // Don't resolve textures before compute texturing
LASTMINUTE FIXES                                (= 0x40000000)  // use this bit for the critical last minute's fixes. Was used in nvr65 drivers (DONT ASSUME SRT ON TEXTURE MEANS CLEAN)
OVERRIDE BIT                                    (= 0x80000000)  // makes the global profile override app's profile

Default values for this setting:
DEFAULT:    0x00000004
	DISABLE SLI                             

------------------------------------------------------------
MCCOMPAT10 BROADCAST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

multichip app broadcast compat value for DX10 apps

NONE                                                  (= 0x00000000)  // the default value - no broadcast
DYNAMIC BROADCAST RENDER TO TEXTURE                   (= 0x00000001)  // Use broadcast to render interframe depandent content
DYNAMIC BROADCAST TO TEXTURES WITH SUBRESOURCES ONLY  (= 0x00000002)  // Allow dynamic broadcast for textures with subresources (cubemap/mipmap) only
ENABLE BLIT BASED BROADCAST STATE CHANGES             (= 0x00000004)  // Enable blit-based broadcast state changes
DYNAMIC BROADCAST RENDER TO UAVS                      (= 0x00000008)  // driver will automatically enable broadcast on render/dispatch to UAVs that are seen to be synced between GPUs
RESERVED6                                             (= 0x00000020)  // Reserved
RESERVED7                                             (= 0x00000040)  // Reserved
RESERVED8                                             (= 0x00000080)  // Reserved
STATIC BROADCAST TO TEXTURES WITH SUBRESOURCES        (= 0x00000100)  // Force broadcast on resources with subresorces (cubemap/mipmap)
STATIC BROADCAST TO 1LINE 32BIT TEXTURES              (= 0x00000200)  // Force broadcast on 32 bit textures which has one pixel height but more than 1 pixel width
RESERVED11                                            (= 0x00000400)  // Reserved
RESERVED12                                            (= 0x00000800)  // Reserved
LIMIT BROADCAST SPREADING TO ONE LEVEL                (= 0x00001000)  // Limit broadcast spreading only to one level up
STATIC BROADCAST TO SQUARE R16F RTT                   (= 0x00002000)  // Broadcast rendering to square R16 FLOAT RTTs
STATIC BROADCAST TO SQUARE G32R32F RTT                (= 0x00004000)  // Broadcast rendering to square R32G32 FLOAT RTs
RESERVED16                                            (= 0x00008000)  // Reserved
RESERVED17                                            (= 0x00010000)  // Reserved
RESERVED18                                            (= 0x00020000)  // Reserved
RESERVED19                                            (= 0x00040000)  // Reserved
RESERVED20                                            (= 0x00080000)  // Reserved
RESERVED21                                            (= 0x00100000)  // Reserved
RESERVED22                                            (= 0x00200000)  // Reserved
RESERVED23                                            (= 0x00400000)  // Reserved
RESERVED24                                            (= 0x00800000)  // Reserved
RESERVED25                                            (= 0x01000000)  // Reserved
RESERVED26                                            (= 0x02000000)  // Reserved
RESERVED27                                            (= 0x04000000)  // Reserved
RESERVED28                                            (= 0x08000000)  // Reserved
RESERVED29                                            (= 0x10000000)  // Reserved
RESERVED30                                            (= 0x20000000)  // Reserved
RESERVED31                                            (= 0x40000000)  // Reserved
RESERVED32                                            (= 0x80000000)  // Reserved

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
MCCOMPAT12
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

multichip implicit SLI app compat value for DX12 apps

AUTOSELECT                           (= 0x00000000)  // the default value when no sli mode is set
FORCE 2AFR                           (= 0x00000001)  // force 2-AFR rendering mode for this app
FORCE SFR                            (= 0x00000002)  // force SFR rendering mode for this app
FORCE AFR OF SFR  FALLBACK 2AFR      (= 0x00000003)  // force 2-AFR on 2-way and 3-way, AFR OF SFR on 4-way
DISABLE SLI                          (= 0x00000004)  // disable SLI mode entirely
FORCE 4AFR                           (= 0x00000005)  // force N-way AFR on N-way system
FORCE 3AFR                           (= 0x00000006)  // force 2-AFR on 2-way system and 3-AFR on N-way
FORCE AFR OF SFR  FALLBACK 3AFR      (= 0x00000007)  // force 2-AFR on 2-way system, 3-AFR on 3-way, AFR OF SFR on 4-way
SLI MODE MASK                        (= 0x00000007)  //  --- not a value. This is a mask to select sli mode enum field
RESERVED03                           (= 0x00000008)  // Reserved
DISCARD RT ON RENDERING              (= 0x00000010)  // discard content of RTs before rendering
DISCARD DS ON RENDERING              (= 0x00000020)  // discard content of depth/stencil before rendering
RESERVED06                           (= 0x00000040)  // Reserved
DISABLE DESCRIPTOR PARSING           (= 0x00000080)  // Disable parsing of descriptor tables to discover resource usage
AFR2 FLAGS                           (= 0x000000f0)  // AFR2 Flags for DX12
DISCARD ON BLIT DST                  (= 0x00000100)  // Discard if first access in a frame was Dst blit
DISCARD ON UAV                       (= 0x00000200)  // Discard if first access in a frame was UAV
DISCARD IN WRITE STATE ON PRESENT    (= 0x00000400)  // Discard resources, which cross frame in write barrier state
RESERVED11                           (= 0x00000800)  // Reserved
RESERVED12                           (= 0x00001000)  // Reserved
RESERVED13                           (= 0x00002000)  // Reserved
RESERVED14                           (= 0x00004000)  // Reserved
RESERVED15                           (= 0x00008000)  // Reserved
RESERVED16                           (= 0x00010000)  // Reserved
RESERVED17                           (= 0x00020000)  // Reserved
RESERVED18                           (= 0x00040000)  // Reserved
RESERVED19                           (= 0x00080000)  // Reserved
RESERVED20                           (= 0x00100000)  // Reserved
RESERVED21                           (= 0x00200000)  // Reserved
RESERVED22                           (= 0x00400000)  // Reserved
RESERVED23                           (= 0x00800000)  // Reserved
RESERVED24                           (= 0x01000000)  // Reserved
RESERVED25                           (= 0x02000000)  // Reserved
RESERVED26                           (= 0x04000000)  // Reserved
FORCE PUSH OF ALL WRITTEN RESOURCES  (= 0x08000000)  // Force all writen resource to be pshed to the next gpu on present
RESERVED28                           (= 0x10000000)  // Reserved
EARLY PUSH 1x1xR32                   (= 0x20000000)  // Temp hack - force early push f 1x1 R32 textues (HDR)
LASTMINUTE FIXES                     (= 0x40000000)  // use this bit for the critical last minute's fixes.
OVERRIDE BIT                         (= 0x80000000)  // makes the global profile override app's profile

Default values for this setting:
DEFAULT:    0x00000000
	AUTOSELECT                              
	AUTOSELECT                              

------------------------------------------------------------
MCCOMPAT12 BROADCAST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

multichip app broadcast compat value for DX12 apps

NONE                                         (= 0x00000000)  // the default value - no broadcast
RESERVED01                                   (= 0x00000001)  // Reserved
RESERVED02                                   (= 0x00000002)  // Reserved
RESERVED03                                   (= 0x00000004)  // Reserved
RESERVED04                                   (= 0x00000008)  // Reserved
RESERVED05                                   (= 0x00000010)  // Reserved
RESERVED06                                   (= 0x00000020)  // Reserved
RESERVED07                                   (= 0x00000040)  // Reserved
RESERVED08                                   (= 0x00000080)  // Reserved
RESERVED09                                   (= 0x00000100)  // Reserved
RESERVED10                                   (= 0x00000200)  // Reserved
RESERVED11                                   (= 0x00000400)  // Reserved
RESERVED12                                   (= 0x00000800)  // Reserved
RESERVED13                                   (= 0x00001000)  // Reserved
RESERVED14                                   (= 0x00002000)  // Reserved
RESERVED15                                   (= 0x00004000)  // Reserved
RESERVED16                                   (= 0x00008000)  // Reserved
RESERVED17                                   (= 0x00010000)  // Reserved
RESERVED18                                   (= 0x00020000)  // Reserved
RESERVED19                                   (= 0x00040000)  // Reserved
RESERVED20                                   (= 0x00080000)  // Reserved
RESERVED21                                   (= 0x00100000)  // Reserved
RESERVED22                                   (= 0x00200000)  // Reserved
RESERVED23                                   (= 0x00400000)  // Reserved
RESERVED24                                   (= 0x00800000)  // Reserved
RESERVED25                                   (= 0x01000000)  // Reserved
RESERVED26                                   (= 0x02000000)  // Reserved
RESERVED27                                   (= 0x04000000)  // Reserved
RESERVED28                                   (= 0x08000000)  // Reserved
RESERVED29                                   (= 0x10000000)  // Reserved
RESERVED30                                   (= 0x20000000)  // Reserved
FORCE STATIC BROADCAST ON SCREEN SIZED FP16  (= 0x40000000)  // Force static broadcast on screen sized FP16 surfaces
FORCE STATIC BROADCAST ON 400x400 NON Z16    (= 0x80000000)  // Force static broadcast on non Z16 0x400 x 0x400 surfaces

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
MCCOMPAT BROADCAST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Additional MCCOMPAT flags for broadcast RTT

NONE                                                    (= 0x00000000)  // Do not use broadcast at all
RESERVED0                                               (= 0x00000001)  // Reserved
DYNAMIC BROADCAST RENDER TO TEXTURE                     (= 0x00000002)  // dynamic broadcast render to texture to all GPU's
STICKY BROADCAST                                        (= 0x00000004)  // once a surface is marked for broadcast, keep this state regardless of future usage
PROPAGATE BROADCAST PROHIBITION BETWEEN RT AND ZB       (= 0x00000008)  // if RT is prohibited from going to broadcast, force this on the corresponding ZB too
STATIC BROADCAST CLEARS TO TEXTURE                      (= 0x00000010)  // static broadcast texture clears to all GPU's
STATIC BROADCAST RENDER TO TEXTURE                      (= 0x00000020)  // static broadcast RTT ops to all GPU's
ALLOW BROADCAST ON SMALLER HDR SURFACES                 (= 0x00000040)  // do not disable dynamic broadcast on hdr surfaces smaller than primary
RESERVED4                                               (= 0x00000080)  // Reserved
USE BROADCAST FLAGS FROM RT OR ZB                       (= 0x00000100)  // Allow to use broadcast flags on ZB together with flags on RT to make broadcast decision
FORCE BROADCAST ZB CLEAR IF RT IN BROADCAST             (= 0x00000200)  // Force broadcast clear on ZB, if the current RT in broadcast
RESERVED6                                               (= 0x00000400)  // Reserved
RESERVED7                                               (= 0x00000800)  // Reserved
IGNORE DISCARD ON ZB IF RT IN BROADCAST                 (= 0x00001000)  // Ignore discard of ZB sync if bounded RT is in broadcast
DISCARD TEXTURING SYNC AFTER BLIT FROM DISCARDABLE SRC  (= 0x00002000)  // Discard texturing sync after unicast blit from discardable source (like back buffer) on broadcast RTT
RESERVED9                                               (= 0x00004000)  // Reserved
RESERVED10                                              (= 0x00008000)  // Reserved
BROADCAST TO CUBEMIP TEXTURE                            (= 0x00010000)  // Broadcast to CUBE/MIP texture to all GPU's
RESERVED11                                              (= 0x00020000)  // Reserved
RESERVED12                                              (= 0x00040000)  // Reserved
RESERVED13                                              (= 0x00080000)  // Reserved
BROADCAST ON ZB IN TEXTURE ON PARTIAL SRT               (= 0x00100000)  // Static broadcast on shadow map atlases
BROADCAST ON STENCIL WRITE                              (= 0x00200000)  // Static broadcast on ZB with enabled and updated stencil
RESERVED16                                              (= 0x00400000)  // Reserved
RESERVED17                                              (= 0x00800000)  // Reserved
RESERVED18                                              (= 0x01000000)  // Reserved
RESERVED19                                              (= 0x02000000)  // Reserved
RESERVED20                                              (= 0x04000000)  // Reserved
RESERVED21                                              (= 0x08000000)  // Reserved
RESERVED22                                              (= 0x10000000)  // Reserved
RESERVED23                                              (= 0x20000000)  // Reserved
RESERVED24                                              (= 0x40000000)  // Reserved
RESERVED25                                              (= 0x80000000)  // Reserved

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
MCDEBUG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0                 (= 0x00000000)
AFR RENDER ALL, 1      (= 0x00000001)
AFR RENDER TEXTURE, 2  (= 0x00000002)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCDEBUG12
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Bits to help debugging DX12 SLI

FORCE NO DISCARD                   (= 0x00000001)  // Disallow all discard heuristics
FORCE END OF FRAME PUSH            (= 0x00000002)  // On present push all resources, that saw a write barrier, to other gpus
ENABLE DESCRIPTOR PARSING          (= 0x00000010)  // Enable parsing of descriptor tables to discover resource usage
DISABLE DESC PARSING FILTERING     (= 0x00000020)  // Do not optimize descriptor parsing overhead
DISABLE EXPLICIT UNICAST CONTEXTS  (= 0x00000040)  // Disable unicast context creation for explicit SLI in DX12
DISABLE UNICAST P2H2P              (= 0x00000080)  // Disable use of P2H2P transfers for explicit DX12
DISABLE UNICAST SHADER HEAPS       (= 0x00000100)  // Disable use of unicast shader heaps in explicit DX12

Default values for this setting:
DEFAULT:    0x00000100
	DISABLE UNICAST SHADER HEAPS            

------------------------------------------------------------
MCDISABLEKMDP2P
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disables KMD P2P blit in windowed mode, added to test the UMD backbuffer resolve codepath

OFF, 0, FALSE, DISABLED  (= 0x345fe064)
ON, 1, TRUE, ENABLED     (= 0x245fe582)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCDISABLEP2H2P
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disables all peer - host - peer transfers

OFF, 0, FALSE, DISABLED  (= 0x345fe064)
ON, 1, TRUE, ENABLED     (= 0x245fe582)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCDISABLEP2P
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disables all direct P2P transfers

OFF, 0, FALSE, DISABLED  (= 0x345fe064)
ON, 1, TRUE, ENABLED     (= 0x245fe582)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCENABLEUMA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable render to system memory under D3D9 SLI

OFF, 0, FALSE, DISABLED  (= 0x24486422)
ON, 1, TRUE, ENABLED     (= 0x13557917)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MCENABLEUMA10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable render to system memory under D3D10 SLI

OFF, 0, FALSE, DISABLED  (= 0x24486420)
ON, 1, TRUE, ENABLED     (= 0x13557915)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MCEXPLICIT12 TIER CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control for D3D12DDI CROSS NODE SHARING TIER

NOT SUPPORTED    (= 0x00000000)  // No p2p support
TIER 1 EMULATED  (= 0x00000001)  // P2P only in copy operations (emulated as p2h2p)
TIER 1           (= 0x00000002)  // P2P only in copy operations
TIER 2           (= 0x00000003)  // Full P2P support
TIER 3           (= 0x00000004)  // RS4: support P2P atomics (see http://nvbugs/2010647 )

Default values for this setting:
DEFAULT:    0x00000003
	TIER 1 EMULATED                         
	TIER 1                                  
	TIER 2                                  

------------------------------------------------------------
MCEXPLICIT12 TIER CONTROL IF NO P2P SUPPORTED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control for D3D12DDI CROSS NODE SHARING TIER if the system doesn't support p2p

NOT SUPPORTED    (= 0x00000000)  // No p2p support
TIER 1 EMULATED  (= 0x00000001)  // P2P only in copy operations (emulated as p2h2p)

Default values for this setting:
DEFAULT:    0x00000001
	TIER 1 EMULATED                         

------------------------------------------------------------
MCFORCEHOSTSTAGINGBUFFERSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This key is using to set value of host staging buffer bank size, in bytes, mostly for early push. Total value is a (bank size) * 256


Default values for this setting:
DEFAULT:    0x00040000

------------------------------------------------------------
MCFORCEMIRRORED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x345fe064)
ON, 1, TRUE, ENABLED     (= 0x245fe582)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCFORCEP2PREAD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x43912743)
ON, 1, TRUE, ENABLED     (= 0x87457346)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCFORCE FULL P2P VISIBILITY12
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

ignore DX12 API visibility mask and force full visibility

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCHOSTSTAGINGBUFFERSIZEHINT9
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This key is using for forcing size of host staging buffer on DX9


Default values for this setting:
DEFAULT:    0x0000000C

------------------------------------------------------------
MCINTERNALINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable the Explicit SLI Indicator if Explicit SLI is allowed and is being used

SHOW EXPLICIT SLI INDICATOR  (= 0x00000001)  // Show Explicit SLI Indicator for DX12 apps that create command queues on multiple GPUs

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
MCLINKINSTANCED LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold in megabytes for using of RT/ZB allocations as LinkInstanced (SLI DX9/10).


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
MCP2PCAPOVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Override P2P HW bug cap checks

AUTO, OFF, 0       (= 0x43912743)  // Use driver detection
FORCE R ON W ON    (= 0x87457346)  // Ignore P2P HW Caps: enable both reads and writes
FORCE R ON W OFF   (= 0x85278426)  // Ignore P2P HW Caps: enable reads, disable writes
FORCE R OFF W ON   (= 0x43437463)  // Ignore P2P HW Caps: disable reads,enable writes
FORCE R OFF W OFF  (= 0x68382925)  // Ignore P2P HW Caps: disable both reads and writes

Default values for this setting:
DEFAULT:    AUTO

------------------------------------------------------------
MCP2PRESOLVE CONFIG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Resolve configuration for SLI

DEFAULT                     (= 0x00000000)  // Automatically select the mode
FORCE P2P WRITES            (= 0x00000001)  // Use P2P Writes for resolve
FORCE P2P READS             (= 0x00000002)  // Use P2P Reads for resolve
FORCE ENABLE SW SEMAPHORES  (= 0x00000004)  // Override SW semaphore disablement

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
MCP2PSTAGEHEAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

override placement of p2p staging buffer

AUTO      (= 0x00000000)  // use driver default
HOST      (= 0x00000001)  // use host staging buffer
VID       (= 0x00000002)  // use vidmem staging buffer, let driver decide r/w
VIDREAD   (= 0x00000003)  // use vidmem staging buffer, force p2p reads
VIDWRITE  (= 0x00000004)  // use vidmem staging buffer, force p2p writes

Default values for this setting:
DEFAULT:    AUTO

------------------------------------------------------------
MCP2PTHRESHOLD SAMPLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If surface.samplesWidth * surface.samplesHeight * surface.samplesDepth is larger than this value, driver will use P2P transfers (when supported) instead of P2H2P transfers


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
MCP2P GPUS SYNCHRONIZER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable/Disable use of GPUsSynchronizer for P2P transfers synchronization

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MCPRESENT CONFIG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Present configuration for SLI

DEFAULT                 (= 0x00000000)  // Automatically select the mode
FORCE P2P WRITES        (= 0x00000001)  // Use P2P Writes for present copies
FORCE P2P READS         (= 0x00000002)  // Use P2P Reads for present copies
INVERT PLATFORM CHOICE  (= 0x00000003)  // Inverte the choice preferred by the platform - this setting makes Turing use Writes and Volta- use Reads

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
MCSFRLOADBALANCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

STATIC   (= 0x28384382)  // each GPU receives a equal amount of pixels to process
DYNAMIC  (= 0x60606064)  // moves the split line dynamically to accomodate the load

Default values for this setting:
DEFAULT:    DYNAMIC

------------------------------------------------------------
MCSFRSHOWSPLIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Show or hide the SLI on-screen indicator

DISABLED, OFF, 0, FALSE  (= 0x34534064)  // there is no loadbalance information displayed
ENABLED, ON, 1, TRUE     (= 0x24545582)  // moves the split line dynamically

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
MCSFR BYPASS DISABLEMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

bypass nvconfig-based disablement of SFR, for use primarily on release branches

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCSLIAA3WAYFALLBACK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x43912744)
ON, 1, TRUE, ENABLED     (= 0x87457347)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCSTAGEDYNAMICTEXTUREMAPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Dynamic textures map/unmap operations should go through a staging buffer (see bug #361458)

OFF, 0, FALSE, DISABLED  (= 0x64889adf)
ON, 1, TRUE, ENABLED     (= 0x033fda37)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MCTESTSFRSPLITLINE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG)
You may only assign it to one of the names listed below.

Enables SFR split line test mode

OFF, 0, FALSE, DISABLED  (= 0xf6712345)
ON, 1, TRUE, ENABLED     (= 0x18223234)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCTESTSLIAA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable testing mode for SLIAA

OFF, 0, FALSE, DISABLED  (= 0x24486424)
ON, 1, TRUE, ENABLED     (= 0x13557919)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCTIMELINE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x40345364)
ON, 1, TRUE, ENABLED     (= 0x24545582)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCUNICASTSUBMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Don't use broadcast submit, submit all pusbuffers for each gpu in an UMD loop

OFF, 0, FALSE, DISABLED  (= 0x24486421)
ON, 1, TRUE, ENABLED     (= 0x13557916)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MCUSEBLITRESOLVES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Re-uses already computed access masks for blits in SLI

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MCWDDMV2 CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Bits to control WDDMv2 aspects of SLI

DISABLE IFLIP                 (= 0x00000002)  // Disallow IFLIP SLI on WDDMv2 (DX1x driver)
DISABLE RRI FOR IFLIP         (= 0x00000004)  // Do not apply AFR specific RRI for IFlip
DISABLE DEFDESTROY FOR IFLIP  (= 0x00000008)  // Disable defer destroy for shared primaries when SLI is enabled (as a WAR for MSAction Bug 200335862)
DISABLE IFLIP DX9             (= 0x00000010)  // Disallow IFLIP SLI on WDDMv2 (DX9 driver)
DISABLE EXPLICIT DX12 WAR     (= 0x00000040)  // Disables the WAR that creates companion allocations on primary creation
FORCE SYNC CD FOR IFLIP       (= 0x00000080)  // Force synchronous create/destroy for eFSE shared primaries
BREAK ON FRONT BUFFER RENDER  (= 0x00010000)  // Debug bits: break if front buffer render detected

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
MC DISABLE SLI
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disable SLI (Explicitly set through NVAPI)

OFF, 0, FALSE  (= 0x00000000)  // Keep SLI enabled
ON, 1, TRUE    (= 0x00000001)  // Disable SLI

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MC WDDMV2 OUT OF ORDER FRAMES WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Control Enable/ Disable for WDDMv2 SLI OutOfOrder Frames WAR

DISABLE       (= 0x00000000)  // Disable WDDMv2 SLI OutOfOrder Frames WAR
ENABLE IFLIP  (= 0x00000001)  // Enable WDDMv2 SLI OutOfOrder Frames WAR For Iflip
ENABLE All    (= 0x00000002)  // Enable WDDMv2 SLI OutOfOrder Frames WAR For All Modes

Default values for this setting:
DEFAULT:    ENABLE IFLIP

------------------------------------------------------------
MEM FRACTION 12ON7
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls fraction of total memory allowed to be used for memory budget computations for D3D12 on Win7 applications.


------------------------------------------------------------
MESSAGE BOX ON GPU DISCONNECT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

HIDE SAFE EXIT    (= 0x00000001)  // Hide the dialog and exit silently with ExitProcess() // invokes DllMain
SHOW              (= 0x00000002)  // Show the dialog and exit if requested
HIDE NOEXIT       (= 0x00000004)  // Hide the dialog and do not exit
HIDE UNSAFE EXIT  (= 0x00000008)  // Hide the dialog and exit silently with TerminateProcess() // doesn't invoke DllMain

Default values for this setting:
DEFAULT:    HIDE NOEXIT

------------------------------------------------------------
METACOMMAND CASK KERNEL TEST INDEX
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Index of cask kernel to pick when there are multiple kernels that can support the given operation. Set to 0xffffffff to pick optimal kernel


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
METACOMMAND DUMP PATH
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Path where Metacommand debug data will be dumped


Default values for this setting:
DEFAULT:    c:\log

------------------------------------------------------------
METACOMMAND ENABLE PATCH KERNEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable compute shader based patching solution for reading resource VAs from descriptor heaps on GPU

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
METACOMMAND LOG
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable Metacommand logs

LOG CREATE           (= 0x00000001)  // Log create calls, and unsupported errors.
LOG QUERY            (= 0x00000002)  // Log query calls.
LOG INIT EXECUTE     (= 0x00000004)  // Log init and execute calls.
DETAILED PARAM LOG   (= 0x00000008)  // Log all paramater details for query and create calls. (Need to enable LOG CREATE/LOG QUERY bits too)
DUMP OP TENSOR DATA  (= 0x00000010)  // Dump output tensor at time of execute.
DUMP IP TENSOR DATA  (= 0x00000020)  // Dump input tensors at time of execute.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
METACOMMAND LOG FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Filename with path for metacommand logs (except for query calls)


Default values for this setting:
DEFAULT:    c:\log\MetaCommand log %d.txt

------------------------------------------------------------
METACOMMAND QUERY LOG FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Filename with path for query metacommand logs


Default values for this setting:
DEFAULT:    c:\log\MetaCommand query log.txt

------------------------------------------------------------
METACOMMAND SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Regkey to force disable metacommand support from the driver for perf debugging

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
METACOMMAND TENSOR DUMP MAX SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max size (in bytes) of Tensor Data to dump. The tensor size will be clamped to this setting before dumping. 0 means we dump the full Tensor.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
MIN CE TRANSFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Minimal Copy Engine Transfer Size (in 256 bytes)

MAX      (= 0xffffffff)  // Max CE transfer size (actually 256 bytes short of the maximum allowable size in 40-bit VA space: 0x10000000000)
DEFAULT  (= 0x00000708)  // Default minimal CE transfer size (see bug 528124 for how this value is determined)

Default values for this setting:
DEFAULT:    0x00000708
	DEFAULT                                 

------------------------------------------------------------
MIN PREC16 ENABLED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

enabled/disable min16float type support advertisement in caps D3DDDICAPS SHADER MIN PRECISION.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // min16float not supported
ON, 1, TRUE, ENABLED     (= 0x00000001)  // min16float is supported

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MIN PREC ENABLED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

enabled/disable min prec support (win8)

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // min10float -> fixed type disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // min10float -> fixed type enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MIPMAPDITHERMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLE, OFF, 0, FALSE  (= 0x75955199)  // Disable mipmap dithering (true trilinear)
ENABLE, ON, 1, TRUE     (= 0x39932250)  // Enable mipmap dithering (fake trilinear)
SMART, 2                (= 0x71539305)  // smart dithering (enabled at higher resolutions)

Default values for this setting:
DEFAULT:    SMART

------------------------------------------------------------
MIPMAPMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

trilinear mipmap optimizations

MASK       (= 0x0000000f)
NONE       (= 0x00000000)
BILINEAR   (= 0x00000001)
TRILINEAR  (= 0x00000002)

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
MISCOPTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FASTSRGB DEPRECATED        (= 0x00000001)
NOPARANOIDTEXFETCHES       (= 0x00000002)
SM105 FMUL                 (= 0x00000004)  // Enable SM 1.05 FMUL support
FORCE THIN PS THREADS      (= 0x00000008)
ENABLE 1 BIT ZC HEURISTIC  (= 0x00000010)
MASK                       (= 0x0000001f)

Default values for this setting:
DEFAULT:    0x00000006
	NOPARANOIDTEXFETCHES                    
	SM105 FMUL                              

------------------------------------------------------------
MISC INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Miscellaneous indicators used for debug of various issues.

DEFAULT             (= 0x00000000)  // No indicator.
VRR ENTROPY         (= 0x00000001)  // VRR - prints a green '.' when GSYNC entropy is reported high. Debug or Develop driver builds only.
VRR SUSPEND REASON  (= 0x00000002)  // VRR - prints the reason why GSYNC may have been suspended in DD. Debug or Develop driver builds only.
VRR SUPPORT         (= 0x00000004)  // VRR - prints whether G-sync is supported or not.
MASK                (= 0x00000007)  // Mask of all valid bits.

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 

------------------------------------------------------------
MPOINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Set the indicator of MPO.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MSAA QUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls which MSAA Quality levels are exported and controls how to interpret quality levels received from the API. Use these to reduce exported quality levels from [0,16] (default) to {0,1,2} to eliminate redundant WHQL tests.

STANDARD  (= 0x00000000)  // export [0,16] corresponding to real + virtual coverage
MIN       (= 0x00000001)  // export {0,1,2}, where 0 is no VCAA
SINGLE    (= 0x00000002)  // export only 0, disabling VCAA.  Control pannel can still enable VCAA

Default values for this setting:
DEFAULT:    STANDARD

------------------------------------------------------------
MSHYBRID D3D12 PRESENT FEATURE OPTIMIZATIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable Disable D3D12 Present time feature optimization

DISABLED, OFF, 0, FALSE  (= 0x00000000)  //  Disable D3D12 Present time feature optimization
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Enable D3D12 Present time feature optimization

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
MS HYBRID COPY QUEUE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Override flags for copy queue creation on MsHybrid

COMMAND QUEUE FLAG 3D       (= 0x00000001)  // Create 3D context
COMMAND QUEUE FLAG COMPUTE  (= 0x00000002)  // Create Compute context
COMMAND QUEUE FLAG COPY     (= 0x00000004)  // Create CE context

Default values for this setting:
DEFAULT:    COMMAND QUEUE FLAG COPY

------------------------------------------------------------
MULTIGPU BROADCAST SHIM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable Multi-GPU Broadcast shim

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
MULTIGPU BROADCAST SHIM DUMP APP NAME
------------------------------------------------------------
This key is of type STRING
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

App name for which backbuffer is to be dumped.


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
MULTIGPU BROADCAST SHIM DUMP BACKBUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

Dump backbuffer from Multi-GPU Broadcast shim

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MULTIGPU BROADCAST SHIM DUMP FRAME NUMBER
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Frame number to dump


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
MULTIGPU BROADCAST SHIM DUMP PATH
------------------------------------------------------------
This key is of type STRING
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Path where backbuffer is to be dumped.


Default values for this setting:
DEFAULT:    C:\FD

------------------------------------------------------------
MULTIGPU BROADCAST SHIM LOG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Dump log from Multi-GPU Broadcast shim

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
MULTIGPU BROADCAST SHIM LOG FILE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

File where log is to be created.


Default values for this setting:
DEFAULT:    C:\log

------------------------------------------------------------
MULTIGPU EOF COPY LOOP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of times to loop the copy to simulate transfer bound cases on MsHybrid and SLI


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
MULTITHREAD DDI
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x37278085)
ON, 1, TRUE, ENABLED     (= 0x29465058)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
NATIVE 16 BIT OPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control whether the Native16BitOps caps bit is set.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NEVERFAILVBCREATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x20556640)
ON, 1, TRUE, ENABLED     (= 0x12838744)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NGX CDN MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Used to set the server to use for snippet OTA.

NGX CDN MODE PRODUCTION  (= 0x00000000)  // Use the production server.
NGX CDN MODE STAGING     (= 0x00000001)  // Use the staging server. FOR INTERNAL TESTING ONLY.
NGX CDN MODE DISABLED    (= 0x0000ffff)  // Do not use the downloaded snippets. Force use of the embedded snippets. FOR INTERNAL TESTING ONLY.

Default values for this setting:
DEFAULT:    0x00000000
	NGX CDN MODE PRODUCTION                 

------------------------------------------------------------
NGX CDN PRODUCTION URI
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Used to specify the production server URI to use for snippet OTA updates. Advanced use only.


Default values for this setting:
DEFAULT:    https://static.nvidiagrid.net/models/org/nvidia/team/ngx/models/

------------------------------------------------------------
NGX CDN STAGING URI
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Used to specify the staging server URI to use for snippet OTA updates. Advanced use only.


Default values for this setting:
DEFAULT:    https://static.nvidiagrid.net/stg-models/org/nvidia/team/ngx/models/

------------------------------------------------------------
NGX DLSS MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Used to force DLSS to a specific mode. Used for testing.

NGX DLSS MODE PERFORMANCE         (= 0x00000000)  // Force DLSS to use perfomance mode.
NGX DLSS MODE BALANCED            (= 0x00000001)  // Force DLSS to use balanced mode.
NGX DLSS MODE QUALITY             (= 0x00000002)  // Force DLSS to use quality mode.
NGX DLSS MODE SNIPPET CONTROLLED  (= 0x00000003)  // Allow snippet to control DLSS mode. Default setting.

Default values for this setting:
DEFAULT:    0x00000003
	NGX DLSS MODE BALANCED                  
	NGX DLSS MODE QUALITY                   
	NGX DLSS MODE SNIPPET CONTROLLED        

------------------------------------------------------------
NGX DLSS OVERRIDE OPTIMAL SETTINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Force some optimal settings to values outside of what they were when the game launched. Mostly used to override 4X scaling ratio to 9X for Ampere launch. Bitfield so that we can combine several override in the future..

NGX DLSS OVERRIDE OPTIMAL SETTINGS NONE        (= 0x00000000)  // No change to optimal rendering resolution.
NGX DLSS OVERRIDE OPTIMAL SETTINGS PERF TO 9X  (= 0x00000001)  // Force DLSS to return 9X optimal rendering resolution instead of 4X in Perf mode.

Default values for this setting:
DEFAULT:    0x00000000
	NGX DLSS OVERRIDE OPTIMAL SETTINGS NONE 

------------------------------------------------------------
NGX DLSS SHARPNESS SETTING
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String contains multiple sharpness values that are to be used per resolution bucket (1080p, 1440p, 2160p, 2160p+)/ upscale type. Example sharpness.lanczos=[[2.4][3.0][4.1][4.1]];sharpness.deepisp=[[2.4][3.0][4.1][4.1]];sharpness.nvtaa[[2.9][3.1][3.3][3.5]]


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
NGX DLSS TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Used to force DLSS to a specific algorithm. Used for testing.

NGX DLSS TYPE DLTSS    (= 0x00000000)  // Force DLSS to use DLTSS algorithm (DLSS 2.0).
NGX DLSS TYPE NvTAA4x  (= 0x00000001)  // Force DLSS to use NvTAA4x algorithm (DLSS 1.3).

Default values for this setting:
DEFAULT:    0x00000000
	NGX DLSS TYPE DLTSS                     

------------------------------------------------------------
NGX LOG PATH
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Path where NGX stores the logs


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
NGX PRIVATE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Private flags used by NGX.

ENABLE ZBC TURING           (= 0x00000001)  // enable ZBC on Turing
ENABLE ZBC AMPERE           (= 0x00000002)  // enable ZBC on Ampere
ENABLE ZBC AFTER AMPERE     (= 0x00000004)  // enable ZBC beyond Ampere
ENABLE DVS CYCLESTATS       (= 0x00000008)  // generate cyclestats when running on DVS
ENABLE DVS PUSHBUFFER DUMP  (= 0x00000010)  // dump pushbuffer when running on DVS

------------------------------------------------------------
NOFLOATMADENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

Force all float MAD to MUL + ADD

OFF, 0, FALSE, DISABLED  (= 0x16528890)
ON, 1, TRUE, ENABLED     (= 0x65481281)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NOFMZENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Instructions (FMUL or FFMA) should use FMZ mode in DX9. Set NOFMZENABLE to try FTZ mode.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NOSUBALLOC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

VID   (= 0x00000001)
HOST  (= 0x00000002)
SYS   (= 0x00000004)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NOWFI ON TEX INVALIDATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Maxwell needs to use no WFI version of Tex invalidates (for TC). This debug key is to force an old behaviour

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
NOWFI UPLOAD CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

I2M for various uploads can be done on 3D I2M avoiding WFI from subchannel switch

DISABLE NOWFI TEX UPLOAD IN DSR  (= 0x00000001)  // disable usage of 3D I2M for DSR uploads
FORCE NOWFI TEX UPLOAD           (= 0x00000002)  // force usage of 3D I2M for all uploads

Default values for this setting:
DEFAULT:    0x00000001
	DISABLE NOWFI TEX UPLOAD IN DSR         

------------------------------------------------------------
NULLALPHABLEND
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x35331782)
ON, 1, TRUE, ENABLED     (= 0x30098471)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NULLALPHATEST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x34386543)
ON, 1, TRUE, ENABLED     (= 0x87462087)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NULLDRIVERENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x06375634)
ON, 1, TRUE, ENABLED     (= 0x36574560)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NULLFILL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x53451913)
ON, 1, TRUE, ENABLED     (= 0x83674921)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NULLHWDRIVERENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x66899340)
ON, 1, TRUE, ENABLED     (= 0x92333866)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVAPI GWC USE LOCAL ROOT TABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Use local root table (populated in GPU memory by the app) for GWC shaders instead of the global root table (i.e, root table set on command list). Only for testing/debugging - apps are always expected to use local root table

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
NVAPPSHIM DSR DISALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disallow DSR apply

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVDEVTOOLS ENABLE DEBUGGER
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

Enable Nsight debug mode. Used to set the driver in debug mode, in the absence of Nsight

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVFBC BUMP SURF PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Bump the surface priority to NV BLOCK PRIORITY MAXIMUM for NvFBC allocated surfaces

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVFBC DX9VID EVENT BASED CAPTURE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable NvFBC event-based capture for DX9

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVFBC DX9VID OPTIMIZATIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Use NvFBC Shader optimization to convert RGB to NV12

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
NVFBC LOW LATENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allow NvFBC DX9 UMD Readback from Capture Buffer to use low latency node

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVFBC MULTITAP SCALER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FBC scaling through MultiTap filter for NvStreamer use case. Uses bilinear when disabled

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
NVFBC MULTI CAPTURE BUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Use multiple capture buffer for NvFBC in Geforce Win10 configuration

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
NVFBC OVERLAY CAPTURE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable capturing Windows 7 overlay content

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVFBC QUARTER RES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FBC can populate quarter-res buffer and share it to VideoLib via backdoor communication in DX9-UMD.

OFF           (= 0x00000000)  // Default: Feature disabled
ENABLE        (= 0x00000001)  // Enable only for allowlisted GUIDs. Eg: NvStreamer FBC GUID
FORCE ENABLE  (= 0x00000002)  // Force enable for any FBC session, even for non-allowlisted GUIDs

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
NVFBC SLI CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Bits to Control NVFBC SLI aspects

CAPTUREPROCESS COMPOSE        (= 0x00000001)  // Capture process should Compose i.e. ENABLES all performance optimizations
RENDERPROCESS COMPOSE         (= 0x00000002)  // Render process should Compose  i.e. DISABLES all performance optimizations
DISABLE CE BLIT OPTIMIZATION  (= 0x00000004)  // Disable CE Blit Optimization

Default values for this setting:
DEFAULT:    CAPTUREPROCESS COMPOSE

------------------------------------------------------------
NVFBC UMD SURF DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allow dumping NvFBC DX UMD Capture stages to BMP for isolation

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVFBC ZERO LATENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Mark NvFBC capture side pushbuffer submissions as RealTime. Will enable ZERO latency node AKA real time runlist reorder if KMD regkey 'RealTimeRunlist' turned on.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
NVFEATURES ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Empowers an app profile to denylist NV features like MFAA,FXAA,Gsync,Ansel,FRL,FRM etc. for any app

DISALLOWED, 0, OFF, DISABLED  (= 0x00000000)  // NV features are disallowed
ALLOWED, 1, ON, ENABLED       (= 0x00000001)  // Keep NV features in their default state

Default values for this setting:
DEFAULT:    ALLOWED

------------------------------------------------------------
NVINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Display generic NV Indicator

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable generic NV Indicator
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable generic NV Indicator

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVINST FP16 FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls for generating DXBC/NvInst instructions with fp16 types. Leave undefined for driver to choose based on architecture.

FORCE MIN16FLOAT TO 16  (= 0x00000001)  // minprecision16 type can be 16 or 32-bits, force to 16-bit.
FORCE MIN16FLOAT TO 32  (= 0x00000002)  // minprecision16 type can be 16 or 32-bits, force to 32-bit.

------------------------------------------------------------
NVNET DRIVER IPADDR
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

IP Address Port for NVNet Driver. :0 picks a random port


Default values for this setting:
DEFAULT:    :0

------------------------------------------------------------
NVNET ENABLED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable or disable use of networking features with NvNet

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVNET PROVIDER IPADDR
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

IP Address for NVNet provider


Default values for this setting:
DEFAULT:    :34343

------------------------------------------------------------
NVNREG CACHE DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

PRIMARY SHADER CACHE  (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG CB ALPHA CACHELINES PER SM
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of cachelines per SM we request for alpha circular buffers. Zero means to use driver default.

MIN, AUTOMATIC  (= 0x00000000)
FERMI MAX       (= 0x000003ff)
MAXWELL MAX     (= 0x00003fff)
PASCAL MAX      (= 0x003fffff)
MAX             (= 0x003fffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
NVNREG CB CACHELINES PER SM
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of cachelines per SM we request for circular buffers. Zero means to use driver default.

MIN, AUTOMATIC  (= 0x00000000)
FERMI MAX       (= 0x000003ff)
MAXWELL MAX     (= 0x00003fff)
PASCAL MAX      (= 0x003fffff)
MAX             (= 0x003fffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
NVNREG CUBEMAP ANISO
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Bitfield controlling various behaviors of anisotropic filtering with cubemaps.  Implemented only on Fermi and better.

DEFAULT FACES   (= 0x00000000)  // Hardware default for anisotropic filtering within faces.
ENABLE FACES    (= 0x00000001)  // Allow anisotropic filtering within faces.
DISABLE FACES   (= 0x00000002)  // Forbid anisotropic filtering within faces.
DEFAULT SEAMS   (= 0x00000000)  // Hardware default for anisotropic filtering near cube seams.
ENABLE SEAMS    (= 0x00000010)  // Allow anisotropic filtering near cube seams.
DISABLE SEAMS   (= 0x00000020)  // Forbid anisotropic filtering near cube seams.
SEAMLESS SPAN   (= 0x00000000)  // Use AUTO SPAN SEAM when seamless, unless SEAMLESS CROSS is set.
SEAMLESS CROSS  (= 0x00000100)  // Use AUTO CROSS SEAM when seamless.

Default values for this setting:
DEFAULT:    0x00000111

------------------------------------------------------------
NVNREG DEBUG LAYER CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Flags for NVN debug layer.

APP CONTROL            (= 0x00000000)  // Application controlled.
FORCE ON               (= 0x00000001)  // Enable the NVN debug layer, even if disabled via the NVN application.
FORCE DRAW VALIDATION  (= 0x00000002)  // Enable the NVN debug layer with draw-time validation, even if disabled via the application.
FORCE OFF              (= 0x00000003)  // Disable the NVN debug layer and draw validation, even if enabled via the NVN application.

Default values for this setting:
DEFAULT:    APP CONTROL

------------------------------------------------------------
NVNREG FERMI SETCOMPRESSIONTHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

value for the NV9097 SET COMPRESSION THRESHOLD method.(for DX9)

SAMPLES  0     (= 0x00000000)
SAMPLES  1     (= 0x00000001)
SAMPLES  2     (= 0x00000002)
SAMPLES  4     (= 0x00000003)
SAMPLES  8     (= 0x00000004)
SAMPLES  16    (= 0x00000005)
SAMPLES  32    (= 0x00000006)
SAMPLES  64    (= 0x00000007)
SAMPLES  128   (= 0x00000008)
SAMPLES  256   (= 0x00000009)
SAMPLES  512   (= 0x0000000a)
SAMPLES  1024  (= 0x0000000b)
SAMPLES  2048  (= 0x0000000c)

Default values for this setting:
DEFAULT:    SAMPLES  8

------------------------------------------------------------
NVNREG FERMI SETMAXTIWARPSPERBATCH
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Value for the NV9097 SET MAX TI WARPS PER BATCH method. Value must be 1 <= value <= 32 for GF100/GF104/GF106 and 1 <= value <= 20 for GF108/GF11x.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG FERMI SETPSWARPWATERMARKS
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Value for NV9097 SET PS WARP WATERMARKS

DEFAULT FERMI     (= 0x00300008)  // Fermi class default for this method
DEFAULT KEPLER    (= 0x00400008)  // Kepler class default for this method
DEFAULT MAXWELL   (= 0x00400008)  // Maxwell class default for this method
DEFAULT PASCAL A  (= 0x00800008)  // PASCAL A class default for this method
DEFAULT PASCAL B  (= 0x00400008)  // PASCAL B class default for this method
DEFAULT VOLTA A   (= 0x00800008)  // VOLTA A class default for this method
DEFAULT TURING A  (= 0x00400008)  // TURING A class default for this method

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG FERMI SETSUBTILINGPERFKNOBA
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

GM20Y DEFAULT  (= 0x087f6080)  // Default on GM20Y (T210)

Default values for this setting:
DEFAULT:    0x20164010

------------------------------------------------------------
NVNREG FERMI SETSUBTILINGPERFKNOBB
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
NVNREG FERMI SET L2 CACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Each nibble controls the L2 cache policy for particular operations on the VAF and ROP clients

VAF EVICT FIRST                        (= 0x00000000)
VAF EVICT NORMAL                       (= 0x00000001)
VAF EVICT LAST                         (= 0x00000002)
VAF SHIFT                              (= 0x00000000)
ROP NONINTERLOCKED READ EVICT FIRST    (= 0x00000000)
ROP NONINTERLOCKED READ EVICT NORMAL   (= 0x00000010)
ROP NONINTERLOCKED READ EVICT LAST     (= 0x00000020)
ROP NONINTERLOCKED READ SHIFT          (= 0x00000004)
ROP INTERLOCKED READ EVICT FIRST       (= 0x00000000)
ROP INTERLOCKED READ EVICT NORMAL      (= 0x00000100)
ROP INTERLOCKED READ EVICT LAST        (= 0x00000200)
ROP INTERLOCKED READ SHIFT             (= 0x00000008)
ROP PREFETCH READ EVICT FIRST          (= 0x00000000)
ROP PREFETCH READ EVICT NORMAL         (= 0x00001000)
ROP PREFETCH READ EVICT LAST           (= 0x00002000)
ROP PREFETCH READ SHIFT                (= 0x0000000c)
ROP NONINTERLOCKED WRITE EVICT FIRST   (= 0x00000000)
ROP NONINTERLOCKED WRITE EVICT NORMAL  (= 0x00010000)
ROP NONINTERLOCKED WRITE EVICT LAST    (= 0x00020000)
ROP NONINTERLOCKED WRITE SHIFT         (= 0x00000010)
ROP INTERLOCKED WRITE EVICT FIRST      (= 0x00000000)
ROP INTERLOCKED WRITE EVICT NORMAL     (= 0x00100000)
ROP INTERLOCKED WRITE EVICT LAST       (= 0x00200000)
ROP INTERLOCKED WRITE SHIFT            (= 0x00000014)
CLASS DEFAULT                          (= 0x00101001)
DX10 DEFAULT                           (= 0x00001000)
OGL DEFAULT                            (= 0x00111111)  // OGL default for perf, see bugs 589224 and 1163844

Default values for this setting:
DEFAULT:    0x00101001
	VAF EVICT NORMAL                        
	ROP PREFETCH READ EVICT NORMAL          
	ROP INTERLOCKED WRITE EVICT NORMAL      
	CLASS DEFAULT                           
	DX10 DEFAULT                            

------------------------------------------------------------
NVNREG FERMI SET PRIM CB THROTTLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

For Fermi-generation GPUs, sets max cumulative area (in pixels) of the prims in the CB. Zero means to use driver default. Max is treated as INF, which disabling throttling.

MIN, AUTOMATIC  (= 0x00000000)
MAX             (= 0x003fffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
NVNREG FERMI UNOPT LOD SPREAD
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

Enables or disables unopt LOD spread for fermi

OFF, 0, FALSE, DISABLED  (= 0x56023627)
ON, 1, TRUE, ENABLED     (= 0x37299934)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVNREG FORCE COMPLIANT FLOAT BLEND
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When set, make blending for IEEE special values as close to correct as the HW will allow.

ENABLE   (= 0x00000001)
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
NVNREG GRAPHICS SHADER PREFETCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set value in bytes for GA10x+ Shader prefetch feature. See bugs 2498256 2913514. Only applies to Vertex B and pixel shaders. Note that this value will be aligned to 256B.  The maximum value allowed is capped to the shader size.


Default values for this setting:
DEFAULT:    0x00004000

------------------------------------------------------------
NVNREG KEPLER BALANCED PRIM TIMESLICED MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

Set balanced primitive mode when in timesliced mode. Affects uneven TPC configs.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVNREG KEPLER BALANCED PRIM UNPARTITIONED MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

Set balanced primitive mode when in unpartitioned mode. Affects uneven TPC configs.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NVNREG KEPLER PRI GPCS TPCS SM POWER THROTTLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the default value for NV PGRAPH PRI GPCS TPCS SM POWER THROTTLE


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG KILLED LOAD IS NOP
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NOP load instructions for killed threads.

ENABLE   (= 0x00000001)  // NOP load instructions for killed threads
DISABLE  (= 0x00000000)  // Load instructions are executed on killed threads

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
NVNREG LARGE RECTANGLES
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE  (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG MAXWELL CIRCULAR BUFFER EVICTION POLICY
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Force Maxwell circular buffer eviction policy (NV PTPC PRI PE L2 EVICT POLICY, NV PGPC PRI RASTERARB LINE CLASS).

FIRST   (= 0x00000000)  // First
NORMAL  (= 0x00000001)  // Normal
LAST    (= 0x00000002)  // Last

Default values for this setting:
DEFAULT:    LAST

------------------------------------------------------------
NVNREG MAXWELL LOW LOD OPTIMIZATION
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls behavior of Low LOD optimization

ENABLE             (= 0x00000001)  // enable optimization
TESSELLATION ONLY  (= 0x00000002)  // restrict the optimization only to tessellation shaders (currently noop for DX as we don't yet support VS-GS part)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG MEMPOOL IMPL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Select the NVNmemoryPool implementation to use

DEFAULT                (= 0x00000000)  // Choose the highest perf implementation that is supported on the current platform
RM                     (= 0x00000001)  // Direct RMAPI implementation (highest perf, but only supported on HOS)
SPARSE UNIFIED MEMORY  (= 0x00000002)  // Sparse implementation, but no blits between system and vidmem
SPARSE                 (= 0x00000003)  // Sparse implementation, this is the only one supported on Windows

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
NVNREG PERF STRAT ANISO LOD QUALITY2
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control the lodAnisoQuality2 knob in the texture header, d escribed as 'enable more accurate aniso ratio to solve nv40 artifact. May reduce perf'.  Implemented only on Fermi and better.

LOW   (= 0x00000000)  // Disable more accurate aniso ratio computation.
HIGH  (= 0x00000001)  // Enable more accurate aniso ratio computation.

Default values for this setting:
DEFAULT:    0x00000001
	HIGH                                    

------------------------------------------------------------
NVNREG PERF STRAT COLOR COMPR
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x76165656)  // Perf strat color compression disabled
ONLY RT   (= 0x46379547)  // Perf strat color compresson only render target
ENABLED   (= 0x00000000)  // Perf strat color compression enabled

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
NVNREG PERF STRAT DEPTH COMPR
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x76165656)  // Perf strat depth compression disabled
ENABLED   (= 0x00000000)  // Perf strat depth compression enabled

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
NVNREG PERF STRAT FERMI EARLY Z HYST
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

INSTANTANEOUS  (= 0xabcdef00)  // Instantaneous LateZ to EarlyZ
WAIT 16        (= 0xabcdef01)  // 16 pixels before immediate LateZ to EarlyZ
WAIT 32        (= 0xabcdef02)  // 32 pixels before immediate LateZ to EarlyZ
WAIT 64        (= 0xabcdef03)  // 64 pixels before immediate LateZ to EarlyZ
WAIT 128       (= 0xabcdef04)  // 128 pixels before immediate LateZ to EarlyZ
WAIT 256       (= 0xabcdef05)  // 256 pixels before immediate LateZ to EarlyZ
WAIT 512       (= 0xabcdef06)  // 512 pixels before immediate LateZ to EarlyZ
WAIT 1024      (= 0xabcdef07)  // 1024 pixels before immediate LateZ to EarlyZ
WAIT 2048      (= 0xabcdef08)  // 2048 pixels before immediate LateZ to EarlyZ
WAIT 4096      (= 0xabcdef09)  // 4096 pixels before immediate LateZ to EarlyZ
WAIT 8192      (= 0xabcdef0a)  // 8192 pixels before immediate LateZ to EarlyZ
WAIT 16384     (= 0xabcdef0b)  // 16384 pixels before immediate LateZ to EarlyZ
WAIT 32768     (= 0xabcdef0c)  // 32768 pixels before immediate LateZ to EarlyZ
WAIT 65536     (= 0xabcdef0d)  // 65536 pixels before immediate LateZ to EarlyZ
WAIT 131072    (= 0xabcdef0e)  // 131072 pixels before immediate LateZ to EarlyZ
WAIT 262144    (= 0xabcdef0f)  // 262144 pixels before immediate LateZ to EarlyZ
WAIT 524288    (= 0xabcdef10)  // 524288 pixels before immediate LateZ to EarlyZ
WAIT 1048576   (= 0xabcdef11)  // 1048576 pixels before immediate LateZ to EarlyZ
WAIT 2097152   (= 0xabcdef12)  // 2097152 pixels before immediate LateZ to EarlyZ
WAIT 4194304   (= 0xabcdef13)  // 4194304 pixels before immediate LateZ to EarlyZ
LATEZ ALWAYS   (= 0xabcdef1f)  // Always operate in LateZ mode

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG PERF STRAT FORCE API MANDATED EARLY Z
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE   (= 0x00000001)
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
NVNREG PERF STRAT LOD QUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ANISO LOW ISO LOW    (= 0x034e1413)
ANISO LOW ISO HIGH   (= 0xab0341cf)
ANISO HIGH ISO LOW   (= 0x914b83af)
ANISO HIGH ISO HIGH  (= 0x13478abe)
UNINITIALIZED        (= 0xffffffff)

Default values for this setting:
DEFAULT:    0xFFFFFFFF
	ANISO LOW ISO LOW                       
	ANISO LOW ISO HIGH                      
	ANISO HIGH ISO LOW                      
	ANISO HIGH ISO HIGH                     
	UNINITIALIZED                           

------------------------------------------------------------
NVNREG PERF STRAT TRI LIN OPT SLOPE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

1              (= 0x00000000)
1 125          (= 0x00000001)
1 25           (= 0x00000002)
1 375          (= 0x00000003)
1 5            (= 0x00000004)
1 625          (= 0x00000005)
1 75           (= 0x00000006)
1 875          (= 0x00000007)
2              (= 0x00000008)
2 25           (= 0x00000009)
2 5            (= 0x0000000a)
2 75           (= 0x0000000b)
3              (= 0x0000000c)
3 25           (= 0x0000000d)
3 5            (= 0x0000000e)
3 75           (= 0x0000000f)
4              (= 0x00000010)
4 5            (= 0x00000011)
5              (= 0x00000012)
5 5            (= 0x00000013)
6              (= 0x00000014)
6 5            (= 0x00000015)
7              (= 0x00000016)
7 5            (= 0x00000017)
8              (= 0x00000018)
9              (= 0x00000019)
10             (= 0x0000001a)
11             (= 0x0000001b)
12             (= 0x0000001c)
13             (= 0x0000001d)
14             (= 0x0000001e)
15             (= 0x0000001f)
UNINITIALIZED  (= 0xffffffff)

Default values for this setting:
DEFAULT:    0x00000000
	1                                       

------------------------------------------------------------
NVNREG PERF STRAT ZCULL MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

FORCE DISABLE  (= 0x08c8b771)  // Perf strat zcull force disable
FORCE ENABLE   (= 0xd1329e85)  // Perf strat zcull force enable
FORCE Z ONLY   (= 0xd1329e86)  // Perf strat zcull force Z only
FORCE ZS       (= 0xd1329e87)  // Perf strat zcull force ZS
FORCE Z4X2     (= 0xd1329e88)  // Perf strat zcull force Z4X2
FORCE ZS NVPR  (= 0xd1329e89)  // Perf strat zcull force ZS with NVpr settings

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG POW USE ABS
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Modify the pow instruction to take the absolute value of the base operand, so as to avoid undefined behavior on applications that pass a negative base by default.

DISABLE  (= 0x00000000)  // Use the signed value.
ENABLE   (= 0x00000001)  // Use the absolute value.

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
NVNREG PS ALPHABETA FRACTION
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Fixed Alpha fraction to use when PS ALPHABETA is in static mode

MIN  (= 0x00000000)
MAX  (= 0x000000ff)

Default values for this setting:
DEFAULT:    0x0000003F

------------------------------------------------------------
NVNREG PS KEPLER MRT SUBTILING PERF KNOB A DEFAULT
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The default value for Subtiling Perf Knob A on Kepler when > 2 MRTs are bound


Default values for this setting:
DEFAULT:    0x607F6080

------------------------------------------------------------
NVNREG PS KEPLER MRT SUBTILING PERF KNOB A ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

Enable/Disable Kepler MRT subtiling perf knob a optimization

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
NVNREG PS MAXWELL MRT SUBTILING PERF KNOB A DEFAULT
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The default value for Subtiling Perf Knob A on Maxwell when > 2 MRTs are bound


Default values for this setting:
DEFAULT:    0x20806080

------------------------------------------------------------
NVNREG PS MAXWELL MRT SUBTILING PERF KNOB A ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

Enable/Disable Maxwell MRT subtiling perf knob a optimization

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
NVNREG PS MAXWELL PRI GPC0 SWDX TC TIMEOUT
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This regkey is to set NV PGRAPH PRI GPC0 SWDX TC TIMEOUT


Default values for this setting:
DEFAULT:    0x00010000

------------------------------------------------------------
NVNREG QUALITY ENHANCEMENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

HQUAL  (= 0xfffffff6)  // Quality enhancements high quality
QUAL   (= 0x00000000)  // Quality enhancements quality
PERF   (= 0x0000000a)  // Quality enhancements performance
HPERF  (= 0x00000014)  // Quality enhancements high performance

Default values for this setting:
DEFAULT:    QUAL

------------------------------------------------------------
NVNREG REDUCTION WARPS PER SUBTILE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Modifies PerfknobA QUADS PER SUBTILE used by the non-dynamic reduction tracker


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
NVNREG ROOT TABLE PREFETCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Set values for GA10x+ Root Table prefetch feature. See http://nvbugs/2498256.  Note Vertex (bit 1) and Pixel (bit 5) are the only stages implemented on GA10x hardware

OFF                       (= 0x00000000)  // Disable for all stages
VERTEX CULL BEFORE FETCH  (= 0x00000001)  // Prefetch root tables for VERTEX CULL BEFORE FETCH stage
VERTEX                    (= 0x00000002)  // Prefetch root tables for VERTEX stage
TESSELLATION INIT         (= 0x00000004)  // Prefetch root tables for TESSELLATION INIT stage
TESSELLATION              (= 0x00000008)  // Prefetch root tables for TESSELLATION stage
GEOMETRY                  (= 0x00000010)  // Prefetch root tables for GEOMETRY stage
PIXEL                     (= 0x00000020)  // Prefetch root tables for PIXEL stage
ENABLE ALL                (= 0x0000003f)  // Enable for all stages

Default values for this setting:
DEFAULT:    0x0000003F
	VERTEX CULL BEFORE FETCH                
	VERTEX                                  
	TESSELLATION INIT                       
	TESSELLATION                            
	GEOMETRY                                
	PIXEL                                   
	ENABLE ALL                              

------------------------------------------------------------
NVNREG SECTOR PROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

Used for testing to force different sector promotion methods.

DYNAMIC     (= 0x00000000)
ENABLED 2H  (= 0x00000001)
ENABLED 2V  (= 0x00000002)
ENABLED 4   (= 0x00000003)
DISABLED    (= 0x00000004)

Default values for this setting:
DEFAULT:    DYNAMIC

------------------------------------------------------------
NVNREG SET REDUCE COLOR THRESHOLDS FP16
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
NVNREG SET REDUCE COLOR THRESHOLDS SRGB8
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
NVNREG SET REDUCE COLOR THRESHOLDS UNORM10
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
NVNREG SET REDUCE COLOR THRESHOLDS UNORM16
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
NVNREG SET REDUCE COLOR THRESHOLDS UNORM8
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
NVNREG SHADER CACHE INIT SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Initial number of entries for the shader cache.


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
NVNREG TESLA ANISO QUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

aniso quality on tesla (aka NV50TexPerfSetting)

MIN            (= 0x00000000)
tpsNV30        (= 0x00000000)
tpsNV40        (= 0x00000001)
tpsDefault     (= 0x00000002)
tpsAssertive   (= 0x00000003)
tpsAggressive  (= 0x00000004)
tpsFerocious   (= 0x00000005)
tpsNSettings   (= 0x00000006)
MAX            (= 0x00000005)  // tpsNSettings-1

Default values for this setting:
DEFAULT:    tpsDefault

------------------------------------------------------------
NVNREG TEXTURE LOD BIAS
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Four 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x00001109

------------------------------------------------------------
NVNREG TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
NVNREG TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x0000001F

------------------------------------------------------------
NVNREG TILEDCACHE ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

Enable/disable tiled cache (TC)

FORCE OFF       (= 0x00000000)  // Disabled, NVN tiled cache API treated as NOPs
APP CONTROLLED  (= 0x00000001)  // Allow the application to turn TC on with nvnCommandBufferSetTiledCacheAction

Default values for this setting:
DEFAULT:    APP CONTROLLED

------------------------------------------------------------
NVNREG TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
NVNREG TILEDCACHE TILESIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set X (low 16 bits) and Y (high 16 bits) of tile size


Default values for this setting:
DEFAULT:    0x00800080

------------------------------------------------------------
NVNREG TILE COALESCER CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls the HW Tile Coalescer(TC) - used for arch experiments

MODE NO CONFLICT DETECT      (= 0x00000000)  // Conflict detection disabled
MODE CONFLICT DETECT SAMPLE  (= 0x00000001)  // Same pixel may appear in different quads, but they will not cover same samples
MODE CONFLICT DETECT PIXEL   (= 0x00000002)  // the same pixel will not appear in more than one TC tile
TILE SIZE 16x16              (= 0x00000000)  // Sets the TC tile size to 16x16 (HW default)
TILE SIZE 8x8                (= 0x00000004)  // Sets the TC tile size to 8x8
FRAGMENT ORDER ORDERED       (= 0x00000000)  // TC tiles are processed in the API order of the primitives
FRAGMENT ORDER UNORDERED     (= 0x00000008)  // API ordering of the primitives is not guaranteed

Default values for this setting:
DEFAULT:    0x00000000
	MODE NO CONFLICT DETECT                 
	TILE SIZE 16x16                         
	FRAGMENT ORDER ORDERED                  

------------------------------------------------------------
NVNREG WORKAROUND FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags for NVN workarounds and debugging.

IN BAND CONSTANT UPDATE NOP   (= 0x00000001)  // Work around potential issue with in-band CB updates.
FORCE SPARSE COMPRESSION ON   (= 0x00000002)  // Enable framebuffer compression in NVN, even if disabled via OGL settings.
FORCE SPARSE COMPRESSION OFF  (= 0x00000004)  // Disable framebuffer compression in NVN, even if enabled via OGL settings.

Default values for this setting:
DEFAULT:    0x00000001
	IN BAND CONSTANT UPDATE NOP             

------------------------------------------------------------
NVNREG ZBC COLOR DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control disabling of ZBC color slots

SHARED CLEARS ONLY  (= 0x80000000)  // disable only clears to buffers that are shared with CDE (MSB set)
DEFAULT HOS OPENGL  (= 0x00007ff8)  // Default value for OpenGL and Vulkan on HOS (see http://nvbugs/1802755)
SLOT MASK           (= 0x00007fff)  // a mask of ZBC slots to disable

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG ZBC Z DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control disabling of ZBC depth slots

DEFAULT HOS OPENGL  (= 0x00007ffc)  // Default value for OpenGL and Vulkan on HOS (see http://nvbugs/1802755)
SLOT MASK           (= 0x00007fff)  // a mask of ZBC slots to disable

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
NVNREG ZCULL SUBREGION ALIQUOT LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify an artificial upper limit on the total number of aliquots available for a region when using subregions.

ZERO  (= 0x00000000)  // Pretend we have 0 aliquots
NONE  (= 0xffffffff)  // Don't place an artificial limit on the number of aliquots available

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
NVNREG ZCULL SUBREGION DISTRIBUTION
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control the distribution of formats used for zcull subregions from the priority list of formats chosen by the driver.

WIDE             (= 0xd2329e91)  // Best fit of all formats.
NARROW           (= 0xd2329e90)  // Best fit of two neighboring formats.
ANDROID DEFAULT  (= 0xd2329e90)  // Default on Android

Default values for this setting:
DEFAULT:    WIDE

------------------------------------------------------------
NVNREG ZCULL SUBREGION FORMATS 0
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the Zcull Subregion distribution for subregion IDs 0-7.
See ZCULL SUBREGION FORMATS 1 for the other 8 subregions.
ZCULL SUBREGION STRATEGY must be set to EXPLICIT for these keys to take effect.

Each nibble specifies the zcull format for a single subregion, where the lowest order (least significant) 4 bits sets the 0th subregion etc. For adaptive/dynamic subregion assignment, the highest precision formats should be assigned to the lowest numbered IDs (that is, the LSBs in this setting). If there are insufficient aliquots, as many of the requested formats as possible are used (the final of which may have fewer aliquots than required to cover its subregion), and the remaining are set to NONE and given 0 aliquots.

See below for the available zcull formats (the normalized aliquot scaling factor is in parentheses) and some sample distributions.

Z 16X16X2 4X4, Z 4X4  (= 0x00000000)  // (0.5X) Standard 'high res' (coarse) zcull
ZS 16X16 4X4, ZS 4x4  (= 0x00000001)  // (1X  ) Standard zcull with stencil
Z 16X16 4X2, Z 4X2    (= 0x00000002)  // (1X  ) Standard non-stencil format
Z 16X16 2X4, Z 2X4    (= 0x00000003)  // (1X  ) Standard non-stencil format (alternate occluder orientation)
Z 16X8 4X4            (= 0x00000004)  // (1X  )
Z 8X8 4X2             (= 0x00000005)  // (2X  ) High precision
Z 8X8 2X4             (= 0x00000006)  // (2X  ) High precision
Z 16X16 4X8           (= 0x00000007)  // (0.5X) Large occluder coarse zcull
Z 4X8 2X2             (= 0x00000008)  // (4X  ) *** Useful in AA mode  only  *** (highest available precision)
ZS 16X8 4X2           (= 0x00000009)  // (2X  ) *** Unimplemented ***
ZS 16X8 2X4           (= 0x0000000a)  // (2X  ) *** Unimplemented ***
ZS 8X8 2X2            (= 0x0000000b)  // (4X  ) *** Unimplemented ***
Z 4X8 1X1             (= 0x0000000c)  // (8X  ) *** Unimplemented *** Useful in AA  only 
NONE                  (= 0x0000000f)  // (0X  ) No zcull
ONEHIGH               (= 0xfffffff8)  // 1st @ Z 4X8 2X2 (only a win in AA), no zcull for the rest
COARSEHIRES           (= 0x00000000)  // Use high res zcull (Z 16X16X2 4X4 aka Z 4X4) for all of the first 8 subregions
DEFAULT               (= 0x22555555)  // 6 @ Z 8X8 4X2, 2 @ Z 16X16 4X2 (aka Z 4X2)

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
NVNREG ZCULL SUBREGION FORMATS 1
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the Zcull Subregion distribution for subregion IDs 8-15.
See ZCULL SUBREGION FORMATS 0 for the other 8 subregions.
ZCULL SUBREGION STRATEGY must be set to EXPLICIT for these keys to take effect.

Each nibble specifies the zcull format for a single subregion, where the lowest order (least significant) 4 bits sets the 8th subregion, the next 4 set the 9th, and on through the highest order nibble setting the last. For adaptive/dynamic subregion assignment, the lowest precision formats should be assigned to the highest numbered IDs (that is, the MSBs in this setting). If there are insufficient aliquots, as many of the requested formats as possible are used (the final of which may have fewer aliquots than required to cover its subregion), and the remaining are set to NONE and given 0 aliquots.

See below for the available zcull formats (the normalized aliquot scaling factor is in parentheses) and some sample distributions.

Z 16X16X2 4X4, Z 4X4  (= 0x00000000)  // (0.5X) Standard 'high res' (coarse) zcull
ZS 16X16 4X4, ZS 4x4  (= 0x00000001)  // (1X  ) Standard zcull with stencil
Z 16X16 4X2, Z 4X2    (= 0x00000002)  // (1X  ) Standard non-stencil format
Z 16X16 2X4, Z 2X4    (= 0x00000003)  // (1X  ) Standard non-stencil format (alternate occluder orientation)
Z 16X8 4X4            (= 0x00000004)  // (1X  )
Z 8X8 4X2             (= 0x00000005)  // (2X  ) High precision
Z 8X8 2X4             (= 0x00000006)  // (2X  ) High precision
Z 16X16 4X8           (= 0x00000007)  // (0.5X) Large occluder coarse zcull
Z 4X8 2X2             (= 0x00000008)  // (4X  ) *** Useful in AA mode  only  *** (highest available precision)
ZS 16X8 4X2           (= 0x00000009)  // (2X  ) *** Unimplemented ***
ZS 16X8 2X4           (= 0x0000000a)  // (2X  ) *** Unimplemented ***
ZS 8X8 2X2            (= 0x0000000b)  // (4X  ) *** Unimplemented ***
Z 4X8 1X1             (= 0x0000000c)  // (8X  ) *** Unimplemented *** Useful in AA  only 
NONE                  (= 0x0000000f)  // (0X  ) No zcull
ONELOW                (= 0x02222222)  // Last (15th) subregion @ high res zcull, normal zcull for the rest
COARSEHIRES           (= 0x00000000)  // Use high res zcull (Z 16X16X2 4X4 aka Z 4X4) for all of the last 8 subregions
DEFAULT               (= 0xff222222)  // Subregion IDs 8-13 get normal zcull Z 16X16 4X2 (aka Z 4X2), the last two (IDs 14 and 15) get NONE

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
NVNREG ZCULL SUBREGION REPORT TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

Specify what the counters in the ZCull subregions should count.

There is one counter per subregion and all subregions count the same type of event. The counters only increment when the specified event Type affects a tile.

DEPTH TEST            (= 0x00000000)  // Counts 8x8s that are depth tested
DEPTH TEST NO ACCEPT  (= 0x00000001)  // Counts 8x8s that are depth tested but not trival accepted
DEPTH TEST LATE Z     (= 0x00000002)  // Counts 8x8s that are depth tested in late Z
STENCIL TEST          (= 0x00000003)  // Counts stencil tested 8x8s
AUTOSELECT            (= 0xffffffff)  // Let the driver choose

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
NVNREG ZCULL SUBREGION STRATEGY
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL FEATURE RID49379 NVN 3D API)
You may only assign it to one of the names listed below.

Select the Zcull Subregion distribution strategy. Set this to EXPLICIT and also set ZCULL SUBREGION FORMATS 0 and ZCULL SUBREGION FORMATS 1 for testing and performance shmooing.

FORCE DISABLE  (= 0x00000000)  // Force subregions off
AUTOSELECT     (= 0x00000001)  // The default mode, the driver will pick a strategy
EXPLICIT       (= 0x00000002)  // Use the formats specified in ZCULL SUBREGION FORMATS 0 and ZCULL SUBREGION FORMATS 1

Default values for this setting:
DEFAULT:    AUTOSELECT

Could not locate information for plain text key: NVPMAPIBDEnabled

Could not locate information for plain text key: NVPMAPISecurity

------------------------------------------------------------
NVTRACECOP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

if set, nvTrace.namedBits.OGLBits.bits.bOGL COP is set to true, and nvTraceLevel is set to the value provided

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
NV AMODEL DLL
------------------------------------------------------------
This key is of type STRING
This key is defined for defined(DIRECTAMODEL)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Path to the amodel DLL file


Default values for this setting:
DEFAULT:    (null)

------------------------------------------------------------
NV DEP QMD COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of dependent QMD's to allow


Default values for this setting:
DEFAULT:    0x000001F4

------------------------------------------------------------
NV DIRECTAMODEL SIMCHIP
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DIRECTAMODEL)
You may only assign it to one of the names listed below.

The chip of HW that the AModel driver should use

SIMCHIP G80 TESLA      (= 0x00000000)
SIMCHIP G84 TESLA      (= 0x00000001)
SIMCHIP G86 TESLA      (= 0x00000002)
SIMCHIP G92 TESLA      (= 0x00000003)
SIMCHIP G94 TESLA      (= 0x00000004)
SIMCHIP G96 TESLA      (= 0x00000005)
SIMCHIP G98 TESLA      (= 0x00000006)
SIMCHIP GT200 TESLA    (= 0x00000007)
SIMCHIP GT206 TESLA    (= 0x00000008)
SIMCHIP GT209 TESLA    (= 0x00000009)
SIMCHIP GT212 TESLA    (= 0x0000000a)
SIMCHIP GT214 TESLA    (= 0x0000000b)
SIMCHIP GT215 TESLA    (= 0x0000000c)
SIMCHIP GT216 TESLA    (= 0x0000000d)
SIMCHIP GT218 TESLA    (= 0x0000000e)
SIMCHIP GT21A TESLA    (= 0x0000000f)
SIMCHIP GF100 FERMI    (= 0x00000010)
SIMCHIP GF104 FERMI    (= 0x00000011)
SIMCHIP GF106 FERMI    (= 0x00000012)
SIMCHIP GF108 FERMI    (= 0x00000013)
SIMCHIP GF119 FERMI    (= 0x00000014)
SIMCHIP GF114 FERMI    (= 0x00000015)
SIMCHIP GF116 FERMI    (= 0x00000016)
SIMCHIP GF110 FERMI    (= 0x00000017)  // Formerly known as GF100B
SIMCHIP GF117 FERMI    (= 0x00000018)
SIMCHIP GK104 KEPLER   (= 0x00000020)
SIMCHIP GK106 KEPLER   (= 0x00000021)
SIMCHIP GK107 KEPLER   (= 0x00000022)
SIMCHIP GK110 KEPLER   (= 0x00000023)
SIMCHIP GK20A KEPLER   (= 0x00000024)  // T124
SIMCHIP GK208 KEPLER   (= 0x00000025)
SIMCHIP GK210 KEPLER   (= 0x00000026)
SIMCHIP GM107 MAXWELL  (= 0x00000030)
SIMCHIP GM108 MAXWELL  (= 0x00000031)
SIMCHIP GM206 MAXWELL  (= 0x00000032)
SIMCHIP GM20B MAXWELL  (= 0x00000033)  // T224
SIMCHIP GM200 MAXWELL  (= 0x00000034)
SIMCHIP GM204 MAXWELL  (= 0x00000035)
SIMCHIP GM20C MAXWELL  (= 0x00000036)  // T117
SIMCHIP GM210 MAXWELL  (= 0x00000037)
SIMCHIP GP100 PASCAL   (= 0x00000038)
SIMCHIP GP102 PASCAL   (= 0x00000039)
SIMCHIP GP104 PASCAL   (= 0x0000003a)
SIMCHIP GP106 PASCAL   (= 0x0000003b)
SIMCHIP GP107 PASCAL   (= 0x0000003c)
SIMCHIP GP108 PASCAL   (= 0x0000003d)
SIMCHIP GV100 VOLTA    (= 0x0000003e)
SIMCHIP TU102 TURING   (= 0x00000040)  // Formerly known as GV20x
SIMCHIP TU104 TURING   (= 0x00000041)
SIMCHIP TU106 TURING   (= 0x00000042)
SIMCHIP TU116 TURING   (= 0x00000043)
SIMCHIP TU117 TURING   (= 0x00000044)
SIMCHIP GA100 AMPERE   (= 0x00000045)  // GA100
SIMCHIP GA102 AMPERE   (= 0x00000046)  // GA102
SIMCHIP GA103 AMPERE   (= 0x00000047)  // GA103
SIMCHIP GA104 AMPERE   (= 0x00000048)  // GA104
SIMCHIP GA106 AMPERE   (= 0x00000049)  // GA106
SIMCHIP GA107 AMPERE   (= 0x0000004a)  // GA107
SIMCHIP AD102 ADA      (= 0x00000050)  // AD102
SIMCHIP AD103 ADA      (= 0x00000051)  // AD103
SIMCHIP GH100 HOPPER   (= 0x00000058)  // GH100
SIMCHIP NULL           (= 0xffffffff)

Default values for this setting:
DEFAULT:    SIMCHIP NULL

------------------------------------------------------------
NV DIRECTAMODEL SIMCLASS
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DIRECTAMODEL)
You may only assign it to one of the names listed below.

The class of HW that the AModel driver should use

SIMCLASS NV50 TESLA           (= 0x00000000)  // NV50 TESLA
SIMCLASS G84 TESLA            (= 0x00000001)  // G84 TESLA. Maps to class G82 TESLA.
SIMCLASS GT200 TESLA          (= 0x00000002)  // GT200 TESLA
SIMCLASS GT214 TESLA          (= 0x00000003)  // GT214 TESLA
SIMCLASS GT21A TESLA          (= 0x00000004)  // GT21A TESLA
SIMCLASS GF100 FERMI          (= 0x00000005)  // Deprecated. Use NV DIRECTAMODEL SIMCHIP
SIMCLASS FERMI A              (= 0x00000006)  // FERMI A
SIMCLASS FERMI B              (= 0x00000007)  // FERMI B
SIMCLASS GF104 FERMI          (= 0x00000008)  // Deprecated. Use NV DIRECTAMODEL SIMCHIP
SIMCLASS GF106 FERMI          (= 0x00000009)  // Deprecated. Use NV DIRECTAMODEL SIMCHIP
SIMCLASS GF108 FERMI          (= 0x0000000a)  // Deprecated. Use NV DIRECTAMODEL SIMCHIP
SIMCLASS GF100B FERMI         (= 0x0000000b)  // GF100B FERMI
SIMCLASS GF117 FERMI          (= 0x0000000c)  // Deprecated. Use NV DIRECTAMODEL SIMCHIP
SIMCLASS GF119 FERMI          (= 0x0000000d)  // Deprecated. Use NV DIRECTAMODEL SIMCHIP
SIMCLASS GK100 KEPLER         (= 0x0000000e)  // GK100 KEPLER
SIMCLASS GK110 KEPLER         (= 0x0000000f)  // GK110 KEPLER
SIMCLASS GK20A KEPLER         (= 0x00000010)  // GK20A KEPLER
SIMCLASS GM10x MAXWELL        (= 0x00000011)  // GM10x MAXWELL
SIMCLASS GM20x MAXWELL        (= 0x00000012)  // GM20x MAXWELL
SIMCLASS GM20x TEGRA MAXWELL  (= 0x00000013)  // Deprecated. Use NV DIRECTAMODEL SIMCHIP
SIMCLASS GM21x MAXWELL        (= 0x00000014)  // GM21x MAXWELL
SIMCLASS GP100 PASCAL         (= 0x00000015)  // GP100 PASCAL
SIMCLASS GP10x PASCAL         (= 0x00000016)  // GP10x PASCAL
SIMCLASS GV10x VOLTA          (= 0x00000017)  // GV10x VOLTA
SIMCLASS TU10x TURING         (= 0x00000018)  // TU10x TURING
SIMCLASS GA100 AMPERE         (= 0x00000019)  // GA100 AMPERE
SIMCLASS GA10x AMPERE         (= 0x0000001a)  // GA10x AMPERE
SIMCLASS AD10x ADA            (= 0x0000001b)  // AD10x ADA
SIMCLASS GH100 HOPPER         (= 0x0000001c)  // GH100 HOPPER
SIMCLASS NULL                 (= 0xffffffff)

Default values for this setting:
DEFAULT:    SIMCLASS NULL

------------------------------------------------------------
NV QUALITY UPSCALING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Toggle NVIDIA Quality upscaling on or off

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // On

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
NV REG TEST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting is to make the driver print a message so that test knows the driver gets the right values.

DISABLE  (= 0x00000000)  // Do not print the message.
ENABLE   (= 0x00000001)  // Print the message.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
NV REG WGL COMPATIBILITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

NONE                              (= 0x00000000)  // No WGL compatibility flags set
HWND THREAD MISMATCH              (= 0x00000001)  // WGL compatibilty flag HWND/thread mismatch
PBUFFER NO HWND                   (= 0x00000002)  // WGL compatibilty flag pbuffer no hwnd
DRVSETPIXELFORMAT DRAWABLE ALLOC  (= 0x00000004)  // WGL compatibilty flag DrvSetPixelFormat allocates drawables instead of DrvSetContext

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
NV SM TRAP HANDLER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

enable/disable SM's trap handler and dispatcher code

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
NV SM TRAP HANDLER DUMP SM EXCEPTIONS TO FILE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ease usage: just set this to enable gpu crash dumps

ENABLE                 (= 0x00000001)  // easy goto registry key
ENABLE LVL MASK        (= 0x000000ff)
ENABLE LVL 1 MINIMAL   (= 0x00000001)  // ==1 minimize the amount of captured state
ENABLE LVL 2 MODERATE  (= 0x00000002)  // ==2 capture additional resource state

------------------------------------------------------------
NV SM TRAP HANDLER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

fine grained controls

ENABLE LOG FILE                            (= 0x00000001)  // gpu dumps need fileIO / syscalls don't
ENABLE SHADER DEBUG DATA                   (= 0x00000002)  // map PC to function name, ucode and annotate with d3dasm/nvvm
ENABLE DEBUG PRINTF                        (= 0x00000004)  // output gpu dumps/etc to debugger, too
DUMP SM ERRORS                             (= 0x00000010)  // enables SM exception logging / else ignore errors
DUMP ONLY FIRST FAULTY WARP                (= 0x00000020)  // report first warp with SM exceptions / the other thousands are likely dupes
EXIT AFTER DUMPING SM ERRORS               (= 0x00000040)  // support automation/testing
DISABLE GPU TIMEOUT AND PREEMPTION         (= 0x00001000)
ENABLE PRI MMU DEBUG MODE                  (= 0x00010000)
ENABLE PRI IMPLICIT ERRBAR ON SHADER EXIT  (= 0x00020000)
ENABLE COMMAND TIMING                      (= 0x00100000)  // measure how long commands take

------------------------------------------------------------
NV SM TRAP HANDLER INJECT EVENT APP HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

testing/error injection: modify only a specified app shader


------------------------------------------------------------
NV SM TRAP HANDLER INJECT EVENT LINE NUMBER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

testing/error injection: modify shader at given line number


------------------------------------------------------------
NV SM TRAP HANDLER INJECT EVENT POS X
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

testing/error injection: trigger event only if x position matches (or index for vertex shaders)


------------------------------------------------------------
NV SM TRAP HANDLER INJECT EVENT POS Y
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

testing/error injection: trigger event only if y position matches


------------------------------------------------------------
NV SM TRAP HANDLER INJECT EVENT POS Z
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

testing/error injection: trigger event only if z position matches


------------------------------------------------------------
NV SM TRAP HANDLER INJECT EVENT TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

testing/error injection: what code snippet to inject

NONE                   (= 0x00000000)
BREAKPOINT             (= 0x00000001)
PRINTF                 (= 0x00000002)
DUMP REGISTERS AND GO  (= 0x00000003)
LDG NULL               (= 0x00000010)
LDG FOO                (= 0x00000011)
STG NULL               (= 0x00000020)
STG FOO                (= 0x00000021)
JMP NULL               (= 0x00000030)
JMP FOO                (= 0x00000031)
INFINITE LOOP          (= 0x00000040)

------------------------------------------------------------
NV SM TRAP HANDLER NETWORK CONNECTION STRING
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

TCP/IP address and port to connect to, i.e mywindbghostmachine:8888


------------------------------------------------------------
NV VR PERF LEVEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Requirement ID 10 - Regkey setting to set power modes

POWER SAVINGS   (= 0x00000000)
SUSTAINED LOW   (= 0x00000019)
SUSTAINED HIGH  (= 0x00000032)
BOOST           (= 0x0000004b)
MAX             (= 0x00000064)

Default values for this setting:
DEFAULT:    0x0000004B
	BOOST                                   

------------------------------------------------------------
OCGCONTROL FP16 SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control support of FP16 math on GPUs that include such support (GM20Y+).

DISABLE  (= 0x00000000)  // Disable FP16 math support.
ENABLE   (= 0x00000001)  // Enable FP16 math support.

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
OCGCONTROL FP16 USE FP32 CONVERTERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control support of FP16 math on GPUs that include such support (GM20Y+).

DISABLE  (= 0x00000000)  // Don't allow FP16 instructions to use inline FP32 converters.
ENABLE   (= 0x00000001)  // Allow FP16 instructions to use inline FP32 converters.

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
OCGCONTROL GS
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OCG ENABLE                  (= 0x00000001)
OCG BRANCH OPT              (= 0x00000002)
OCG OPT FORCE LEVEL ENABLE  (= 0x00000008)  // If set, force a specific optimization level.
OCG OPT FORCE LEVEL MASK    (= 0x00000030)  // Bits specifying forced optimization level.
OCG OPT FORCE LEVEL O0      (= 0x00000000)  // Use -O0 as the forced optimization level.
OCG OPT FORCE LEVEL O1      (= 0x00000010)  // Use -O1 as the forced optimization level.
OCG OPT FORCE LEVEL O2      (= 0x00000020)  // Use -O2 as the forced optimization level.
OCG OPT FORCE LEVEL O3      (= 0x00000030)  // Use -O3 as the forced optimization level.

Default values for this setting:
DEFAULT:    0x00000003
	OCG OPT FORCE LEVEL O0                  
	OCG ENABLE                              
	OCG BRANCH OPT                          

------------------------------------------------------------
OCGCONTROL HS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OCG ENABLE                  (= 0x00000001)
OCG BRANCH OPT              (= 0x00000002)
OCG OPT FORCE LEVEL ENABLE  (= 0x00000008)  // If set, force a specific optimization level.
OCG OPT FORCE LEVEL MASK    (= 0x00000030)  // Bits specifying forced optimization level.
OCG OPT FORCE LEVEL O0      (= 0x00000000)  // Use -O0 as the forced optimization level.
OCG OPT FORCE LEVEL O1      (= 0x00000010)  // Use -O1 as the forced optimization level.
OCG OPT FORCE LEVEL O2      (= 0x00000020)  // Use -O2 as the forced optimization level.
OCG OPT FORCE LEVEL O3      (= 0x00000030)  // Use -O3 as the forced optimization level.

Default values for this setting:
DEFAULT:    0x00000003
	OCG OPT FORCE LEVEL O0                  
	OCG ENABLE                              
	OCG BRANCH OPT                          

------------------------------------------------------------
OCGCONTROL KNOBS STRING
------------------------------------------------------------
This key is of type STRING
This key is defined for defined(DEBUG) || defined(DEVELOP) || defined(NV MODS)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String containing multiple packed OCG knobs (space separated).


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
OCGCONTROL LATENCY GS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Gets copied to ParamsForCOP.latency


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
OCGCONTROL LATENCY HS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
OCGCONTROL LATENCY MS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
OCGCONTROL LATENCY MTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
OCGCONTROL LATENCY PS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
OCGCONTROL LATENCY TS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
OCGCONTROL LATENCY VS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
OCGCONTROL MAXINSTINBASICBLOCK GS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL MAXINSTINBASICBLOCK HS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL MAXINSTINBASICBLOCK MS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL MAXINSTINBASICBLOCK MTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL MAXINSTINBASICBLOCK PS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL MAXINSTINBASICBLOCK TS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL MAXINSTINBASICBLOCK VS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL MS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Optimization override for mesh shaders.

OCG ENABLE                  (= 0x00000001)
OCG BRANCH OPT              (= 0x00000002)
OCG OPT FORCE LEVEL ENABLE  (= 0x00000008)  // If set, force a specific optimization level.
OCG OPT FORCE LEVEL MASK    (= 0x00000030)  // Bits specifying forced optimization level.
OCG OPT FORCE LEVEL O0      (= 0x00000000)  // Use -O0 as the forced optimization level.
OCG OPT FORCE LEVEL O1      (= 0x00000010)  // Use -O1 as the forced optimization level.
OCG OPT FORCE LEVEL O2      (= 0x00000020)  // Use -O2 as the forced optimization level.
OCG OPT FORCE LEVEL O3      (= 0x00000030)  // Use -O3 as the forced optimization level.

Default values for this setting:
DEFAULT:    0x00000003
	OCG OPT FORCE LEVEL O0                  
	OCG ENABLE                              
	OCG BRANCH OPT                          

------------------------------------------------------------
OCGCONTROL MTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OCG ENABLE                  (= 0x00000001)
OCG BRANCH OPT              (= 0x00000002)
OCG OPT FORCE LEVEL ENABLE  (= 0x00000008)  // If set, force a specific optimization level.
OCG OPT FORCE LEVEL MASK    (= 0x00000030)  // Bits specifying forced optimization level.
OCG OPT FORCE LEVEL O0      (= 0x00000000)  // Use -O0 as the forced optimization level.
OCG OPT FORCE LEVEL O1      (= 0x00000010)  // Use -O1 as the forced optimization level.
OCG OPT FORCE LEVEL O2      (= 0x00000020)  // Use -O2 as the forced optimization level.
OCG OPT FORCE LEVEL O3      (= 0x00000030)  // Use -O3 as the forced optimization level.

Default values for this setting:
DEFAULT:    0x00000003
	OCG OPT FORCE LEVEL O0                  
	OCG ENABLE                              
	OCG BRANCH OPT                          

------------------------------------------------------------
OCGCONTROL ORI
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL PS
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OCG ENABLE                  (= 0x00000001)
OCG BRANCH OPT              (= 0x00000002)
OCG OPT FORCE LEVEL ENABLE  (= 0x00000008)  // If set, force a specific optimization level.
OCG OPT FORCE LEVEL MASK    (= 0x00000030)  // Bits specifying forced optimization level.
OCG OPT FORCE LEVEL O0      (= 0x00000000)  // Use -O0 as the forced optimization level.
OCG OPT FORCE LEVEL O1      (= 0x00000010)  // Use -O1 as the forced optimization level.
OCG OPT FORCE LEVEL O2      (= 0x00000020)  // Use -O2 as the forced optimization level.
OCG OPT FORCE LEVEL O3      (= 0x00000030)  // Use -O3 as the forced optimization level.

Default values for this setting:
DEFAULT:    0x00000003
	OCG OPT FORCE LEVEL O0                  
	OCG ENABLE                              
	OCG BRANCH OPT                          

------------------------------------------------------------
OCGCONTROL RELAX CONV BLOCK DEFINITION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Applies OCGknob RelaxConvBlockDef=1. Applied only to TU10x+. Will be ignored if knobString or knobFile is specified.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
OCGCONTROL TEXBATCH GS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If set THEN (ParamsForCOP.TexDontAutobatch = TRUE, ParamsForCOP.texBatchSize = regkey value) ELSE (ParamsForCOP.TexDontAutobatch = FALSE, ParamsForCOP.texBatchSzie = ignored)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXBATCH HS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXBATCH MS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXBATCH MTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXBATCH PS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXBATCH TS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXBATCH VS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXMINPHASE GS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

// Gets copied to ParamsForCOP.texMinPhase


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXMINPHASE HS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXMINPHASE MS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXMINPHASE MTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXMINPHASE PS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXMINPHASE TS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TEXMINPHASE VS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OCGCONTROL TS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OCG ENABLE                  (= 0x00000001)
OCG BRANCH OPT              (= 0x00000002)
OCG OPT FORCE LEVEL ENABLE  (= 0x00000008)  // If set, force a specific optimization level.
OCG OPT FORCE LEVEL MASK    (= 0x00000030)  // Bits specifying forced optimization level.
OCG OPT FORCE LEVEL O0      (= 0x00000000)  // Use -O0 as the forced optimization level.
OCG OPT FORCE LEVEL O1      (= 0x00000010)  // Use -O1 as the forced optimization level.
OCG OPT FORCE LEVEL O2      (= 0x00000020)  // Use -O2 as the forced optimization level.
OCG OPT FORCE LEVEL O3      (= 0x00000030)  // Use -O3 as the forced optimization level.

Default values for this setting:
DEFAULT:    0x00000003
	OCG OPT FORCE LEVEL O0                  
	OCG ENABLE                              
	OCG BRANCH OPT                          

------------------------------------------------------------
OCGCONTROL TXDBATCHSIZE PS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

copied to txdBatchSize


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
OCGCONTROL VS
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OCG ENABLE                  (= 0x00000001)
OCG BRANCH OPT              (= 0x00000002)
OCG OPT FORCE LEVEL ENABLE  (= 0x00000008)  // If set, force a specific optimization level.
OCG OPT FORCE LEVEL MASK    (= 0x00000030)  // Bits specifying forced optimization level.
OCG OPT FORCE LEVEL O0      (= 0x00000000)  // Use -O0 as the forced optimization level.
OCG OPT FORCE LEVEL O1      (= 0x00000010)  // Use -O1 as the forced optimization level.
OCG OPT FORCE LEVEL O2      (= 0x00000020)  // Use -O2 as the forced optimization level.
OCG OPT FORCE LEVEL O3      (= 0x00000030)  // Use -O3 as the forced optimization level.

Default values for this setting:
DEFAULT:    0x00000003
	OCG OPT FORCE LEVEL O0                  
	OCG ENABLE                              
	OCG BRANCH OPT                          

------------------------------------------------------------
OCG CRASH DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

dump the COPArgs and NVINST to a file for shader compiles where OCG throws an exception during the compilation. Settings this to false disables the exception handler. Defaults to on except when a debugger is connected. Set to ON to dump the exception even with a debugger.

OFF, 0, FALSE, DISABLED  (= 0x16564886)
ON, 1, TRUE, ENABLED     (= 0x18826043)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
OCG CRASH DUMP FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

filename for crash dumps from OCG


Default values for this setting:
DEFAULT:    \ocg-crash-dump.txt

------------------------------------------------------------
OGL AA LINE GAMMA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000010)  // AA line gamma disable
ENABLED   (= 0x00000023)  // AA line gamma enable
MIN       (= 0x00000001)
MAX       (= 0x00000064)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL AA LINE TWEAKS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

GAUSSIAN EDGES  (= 0x00000001)  // AA line gaussian edges
TEXTURED        (= 0x00000002)  // AA line textured

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL ALIASED LINE WIDTH MAXIMUM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set maximum aliased line width


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
OGL ALIGN VA OFFSET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls virtual address offset alignment

DISABLED                (= 0x00000000)  // Virtual addresses are not aligned by UMD (UMD relies on kmd/os)
ENABLED                 (= 0x00000001)  // UMD forces required/requested alignment of virtual addresses
ENABLED PRE GM20X ONLY  (= 0x00000002)  // Enabled for pre-gm20x only

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL ALLOC DEVICE EVENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Setting to enable or disable device event allocation

ENABLE   (= 0x00000001)  // Enable device event allocation
DISABLE  (= 0x00000000)  // Disable device event allocation

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL ALLOW CLEAR OPTIMIZATIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLED  (= 0x00000000)
COLOR     (= 0x00200000)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
OGL ALLOW DPI UNAWARE UNSCALED FSE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control full-screen exlusive mode validation for DPI-unaware applications

ENABLE   (= 0x00000001)  // Allow FSE for DPI larger then 100% 
DISABLE  (= 0x00000000)  // Do not allow FSE for DPI larger then 100%

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL ALLOW GPGPU INTEROP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables and disables OpenGL interop per GPGPU interop client

CUDA    (= 0x00000001)  // Enable CUDA   <-> OpenGL interop
OPENCL  (= 0x00000002)  // Enable OpenCL <-> OpenGL interop
NVENC   (= 0x00000004)  // Enable NVENC  <-> OpenGL interop
ALL     (= 0x00000007)  // Enable all OpenGL interop

Default values for this setting:
DEFAULT:    0x00000007
	CUDA                                    
	OPENCL                                  
	NVENC                                   
	ALL                                     

------------------------------------------------------------
OGL ALLOW GPU INTERNAL TEXTURE DECOMPRESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allow use of GPU decompression for supported texture formats

FALSE  (= 0x00000000)
TRUE   (= 0x00000001)

Default values for this setting:
DEFAULT:    TRUE

------------------------------------------------------------
OGL ALLOW INTERNAL TEXTURE DECOMPRESS TRANSCODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Not conformant. Allow transcode of unsupported compressed texture formats to supported comrpessed formats

FALSE  (= 0x00000000)
TRUE   (= 0x00000001)

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
OGL ALLOW TEX PRECACHE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
OGL ALWAYS CUT L1TAG COLLECTOR
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When enabled sets the SM L1tag collector to always cut. WAR for HW bug 2094657, effects Volta+ GPUs.

ENABLE          (= 0x00000001)  // Enable the WAR
DISABLE         (= 0x00000000)  // Disable the WAR
DRIVER DEFAULT  (= 0x00000002)  // Use driver default (enabled by default for Volta+)

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL AMODEL DLL
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specifies the AModel dll to be used


------------------------------------------------------------
OGL AMODEL PATH
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specifies the path to where nvamodel.dll is located.


------------------------------------------------------------
OGL API STEREO ANAGLYPH LEFT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

RED  (= 0xffff0000)  // Red

Default values for this setting:
DEFAULT:    RED

------------------------------------------------------------
OGL API STEREO ANAGLYPH RIGHT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

CYAN  (= 0xff00ffff)  // Cyan

Default values for this setting:
DEFAULT:    CYAN

------------------------------------------------------------
OGL API STEREO COLOR INTERLEAVED FILTER0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

SHARP3D  (= 0xff00ff00)  // Sharp 3D Green

Default values for this setting:
DEFAULT:    SHARP3D

------------------------------------------------------------
OGL API STEREO COLOR INTERLEAVED FILTER1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

SHARP3D  (= 0xffff00ff)  // Sharp 3D Red & Blue

Default values for this setting:
DEFAULT:    SHARP3D

------------------------------------------------------------
OGL API STEREO SUPPORT PRIMARY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NO PRIMARY  (= 0x00000000)  // Stereo api support on any devices
DEVICE      (= 0x00000001)  // Stereo api support on this device only

Default values for this setting:
DEFAULT:    NO PRIMARY

------------------------------------------------------------
OGL APPLICATION KEY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NONE         (= 0x00000000)  // No application preferences selected
STANDARD     (= 0x00000001)  // Standard application preferences
SOFTIMAGE3D  (= 0x00000002)  // SoftImage3D
3DSMAX       (= 0x00000003)  // 3DSMax
3DPAINT      (= 0x00000004)  // 3DPaint
MAYA         (= 0x00000005)  // Maya
LIGHTSCAPE   (= 0x00000006)  // Lightscape
SOLIDEDGE    (= 0x00000007)  // SolidEdge
SOLIDWORKS   (= 0x00000008)  // Solidworks
ESPRI        (= 0x00000009)  // Espri
CATIA        (= 0x0000000a)  // Catia
UNISYS       (= 0x0000000b)  // Unisys
NX6PLUS      (= 0x0000000c)  // NX6Plus
3DEXCITE     (= 0x0000000d)  // 3dexcite
CINEMA4D     (= 0x0000000e)  // Cinema4D

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
OGL APPPROFILE SELECTS RENDERING GPU
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

App profile selects the rendering GPU where applicable (MMB, vista/win7)

DISABLE  (= 0x00000000)  // disabled, use default OS primary device
ENABLE   (= 0x00000001)  // enabled, use app profile where possible

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL APP ALLOW RELAXED MULTICAST COPY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allow normal copy or multicast copy without GPU storage

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP ALTERNATE PERFORMANCE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Used to enable/disable SDSR OGL/WS performance paths

ENABLED   (= 0x00000001)  // Enable Setting
DISABLED  (= 0x00000000)  // Disable Setting

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP ASSERT SW FALLBACK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Assert if we switch to SW render. This is for debugging purpose

DISABLED  (= 0x00000000)  // Do not assert when switching to SW render
ENABLED   (= 0x00000001)  // Assert when switching to SW render

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP BINDLESS LIMITS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Adds limits to memory made resident by bindless functions

ENABLE   (= 0x00000001)  // Enable limits
DISABLE  (= 0x00000000)  // Unlimited

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL APP BINDLESS MAXIMUM MEMORY UTILIZATION
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum memory available to bindless memory functions as percentage of vram, can be greater than 1.  Default is 125% vram


Default values for this setting:
DEFAULT:    1.250000

------------------------------------------------------------
OGL APP BINDLESS RESOURCE LIST UTILIZATION
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of lddm resource slots available for bindless memory.  Default is 40%.  Performance suffers around 50% due to frequent flushes.


Default values for this setting:
DEFAULT:    0.400000

------------------------------------------------------------
OGL APP BROKEN NV3X DEMOS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Hacks for broken NV3X demos on NV50 -- cap the number of exposed image units to 16 to avoid crashes, and clamp the position written by vertex programs because NV50 doesn't rasterize primitives with vertices at +/-INF

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP BYPASS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL APP CENTROID SAMPLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Disable centroid sampling G80 only

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL APP CENTROID SAMPLE ALL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable centroid sampling for color and texture

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP CLAW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable the Workstation Performance Code, CLAW

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL APP CLAW DISPLAY LIST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable the usage of CLAW in display lists

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL APP CLAW OPTIMIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable the optimizing compile in CLAW

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL APP CLAW RESTART
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Primitive Restart Override for CLAW


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL APP CLAW STATISTICS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

CLAW statistics bitfield

DEFAULT      (= 0x00000000)
NON DEFAULT  (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
OGL APP CLAW THREADS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

CLAW threading

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL APP CONSTANT OPTIMIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Optimize based on constant values

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP COPYPIXEL FRONTBUFFER FLUSH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Forces a front buffer update on copy pixels, for broken applications using front buffer rendering without glFlush calls

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP CPL AA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Disable different AA override option in the control panel for application that cannot support it

DISABLE NONE         (= 0x00000000)
DISABLE FBO ENHANCE  (= 0x00000001)
DISABLE REPLAY       (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE NONE                            

------------------------------------------------------------
OGL APP DIRECT PUSHBUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Use direct pushbuffer, not cached pushbuffer

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP DLISTEMM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

enable extended dlist memory manger

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP DLIST SEGMENTING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable splitting of large Display List (reduce memory peak consumption)

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP DST REDUCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL APP EXPORT OPENGL 1 2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Some applications have problems with opengl 1.3 -> export opengl 1.2 only

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP FORCE FP DEFAULT PRECISION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

VC7.1 RT (mistakenly) clobbers the FP precision.  This emulates the behavior in newer runtimes, such as VC10.

DISABLED  (= 0x00000000)
53 BIT    (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP FORCE P0 RATED TDP CLOCKS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Lock to rated TDP under PS2.0

DISABLED  (= 0x00000000)  // Unlock from TDP
ENABLED   (= 0x00000001)  // Lock to TDP

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP FORCE PSTATE P0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP FORCE REQUESTED ES VERSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Forces ES context creation to use the requested ES version

DISABLED  (= 0x00000000)  // Allow context promotion to latest compatible ES version.
ENABLED   (= 0x00000001)  // Force requested version.

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP HIDE GL3 ON G80 PLUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When set, advertise OpenGL 2.1 for G80+ GPUs (instead of OpenGL 3.0)

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP IGNORE GLFINISH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Issues a glFlush() instead of a glFinish()

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP IGNORE SWAP HINTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Ignore all swap hint rects. (SDRC I-DEAS MS9 bug workaround)

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP LAZY VBUM DISABLE ON FULL MEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Reset and disable lazy vbum on full memory

FALSE  (= 0x00000000)
TRUE   (= 0x00000001)

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
OGL APP LAZY VBUM VBOS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable the Lazy VBUM optimization for VBOs

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP LEGACY GLSL INTERFACE MATCHING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Ignore spec-correct mismatches between GLSL shader interfaces in favor of the previous permissive behavior


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL APP MAXIMIZE TEXTURE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximize vidmem available for texture storage

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP MINIMIZE VRAM PAGING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimize VRAM paging by limiting buffer object VRAM use to memory available at application startup

FALSE  (= 0x00000000)
TRUE   (= 0x00000001)

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
OGL APP NO EDGES ON CLIPPED WIREFRAMES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Clips edges on a clip plane as opposed to drawing edges on a clip plane per spec

ENABLED   (= 0x00000001)  // Enable Setting
DISABLED  (= 0x00000000)  // Disable Setting

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP NO GENERIC ARRAYS IN FF
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

WAR for apps that exploit old-style vertex array access bugs such as KOTOR2

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP NO SW FALLBACK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Don't fall back to SW buffers if HW buffer allocations fail

DISABLED  (= 0x00000000)  // Allow software fallback render silently
ENABLED   (= 0x00000001)  // Do not allow software fallback render

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP NO SYSMEM PROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Knob to avoid memory fragmentation

ENABLED   (= 0x00000001)  // Enable Setting
DISABLED  (= 0x00000000)  // Disable Setting

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP NO TEX RGBA4 TO RGBA8 MAPPING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Avoid the remapping from the internal texture format GL RGBA4 to GL RGBA8 at the cost of not being able to use that texture as a render target but with the benefit to not having to convert it.

ENABLE   (= 0x00000001)  // Don't map the GL RGBA4 texture format to GL RGBA8 internally.
DISABLE  (= 0x00000000)  // Map the GL RGBA4 texture format to GL RGBA8 internally.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL APP NO VIDMEM PUSHBUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Disable vidmem pushbuffers

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP OPTIMIZED IMMEDIATE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Fast immediate mode path enable

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP OPTIMIZED UNIFORM BUFFER UPDATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Optimize glBufferSubData for use with UNIFORM BUFFER updates

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP PROE 2000I2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Workaround for Pro/E's wrong vertex array enables

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP PROMOTE SHADERS FROM 120 TO 130
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP PROMOTE SHADERS FROM 140 TO 150
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP PUSHBUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls the location of the pushbuffer

DIRECT     (= 0x00000001)  // Use direct pushbuffer, not cached pushbuffer
NO VIDMEM  (= 0x00000002)  // Disable vidmem pushbuffers
VIDMEM     (= 0x00000004)  // This app benefits greatly from vidmem pushbuffers

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL APP RETURN ONLY BASIC GLSL TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Forces the compiler to return old CG compatible GLSL types instead of newer GLSL types.

DISABLE  (= 0x00000000)  // Disable Setting. Return the new type enums defined in NV gpu shader5.
ENABLE   (= 0x00000001)  // Enable Setting. Return the basic GLSL type enums.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL APP RUNTIME VERTEX ATTRIB SOURCING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Post VAB generalizes the vertex shader to test the source of each vertex attribute used.  Allows enabled array state to change without requiring a new vertex shader

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP SDSR ALLOWED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Will allow SDSR if application version allows it

ENABLED   (= 0x00000001)  // Enable Setting
DISABLED  (= 0x00000000)  // Disable Setting

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP SET WGL COMPATIBILITY HWND THREAD MISMATCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Do accept opengl calls with HDCs created by another process than the current one

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP SHADER ASSUMES 0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to forcibly enable zero-initialization of assembly temporaries for different shader stages.

VERTEX           (= 0x00000001)  // Force zero initialization of temporaries in vertex shaders.
FRAGMENT         (= 0x00000002)  // Force zero initialization of temporaries in fragment shaders.
GEOMETRY         (= 0x00000004)  // Force zero initialization of temporaries in geometry shaders.
TESS CONTROL     (= 0x00000008)  // Force zero initialization of temporaries in tessellation control shaders.
TESS EVALUATION  (= 0x00000010)  // Force zero initialization of temporaries in tessellation evaluation shaders.
TASK             (= 0x00000040)  // Force zero initialization of temporaries in task shaders.
MESH             (= 0x00000080)  // Force zero initialization of temporaries in mesh shaders.
ALL STAGES       (= 0x000000ff)  // Force zero initialization of temporaries in all shader stagess.

Default values for this setting:
DEFAULT:    0x00000002
	FRAGMENT                                

------------------------------------------------------------
OGL APP SHADER INIT OUTPUTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to forcibly enable zero-initialization of shader outputs for different shader stages.

VERTEX           (= 0x00000001)  // Force zero initialization of outputs in vertex shaders.
FRAGMENT         (= 0x00000002)  // Force zero initialization of outputs in fragment shaders.
GEOMETRY         (= 0x00000004)  // Force zero initialization of outputs in geometry shaders.
TESS CONTROL     (= 0x00000008)  // Force zero initialization of outputs in tessellation control shaders.
TESS EVALUATION  (= 0x00000010)  // Force zero initialization of outputs in tessellation evaluation shaders.
ALL STAGES       (= 0x000000ff)  // Force zero initialization of outputs in all shader stagess.

Default values for this setting:
DEFAULT:    0x00000002
	FRAGMENT                                

------------------------------------------------------------
OGL APP SOFTIMAGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

38  (= 0x00000026)  // SoftImage 3.8
39  (= 0x00000027)  // SoftImage 3.9

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL APP SUPPORTBITS2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Mix of application workarounds - Part 2

CLAW DISABLE                 (= 0x00000002)  // Disable the Workstation Performance Code, CLAW
NO GENERIC ARRAYS IN FF      (= 0x00000004)  // WAR for apps that exploit old-style vertex array access bugs such as KOTOR2
CLAW DISABLE DISPLAY LIST    (= 0x00000010)  // Disable the usage of CLAW in display lists
CONSTANT OPTIMIZE            (= 0x00000040)  // Optimize based on constant values
LAZY VBUM VBOS               (= 0x00000080)  // Enable the Lazy VBUM optimization for VBOs
VPWW ALLOW LATE ALLOCED      (= 0x00000200)  // In VirtualProtectWriteWatch, allow late allocations
HIDE GL3 ON G80 PLUS         (= 0x00000400)  // When set, advertise OpenGL 2.1 for G80+ GPUs (instead of OpenGL 3.0)
DISABLE DST REDUCE           (= 0x00001000)
USE DX10 SAT                 (= 0x00002000)
FORCE PSTATE P0              (= 0x00040000)
DISABLE BYPASS               (= 0x00400000)
COPYPIXEL FRONTBUFFER FLUSH  (= 0x00800000)  // Force a flush after copypixels to the front buffer
CLIENT ONLY BITS             (= 0x00c636d6)
MEMORY MAP NOT REQUIRED      (= 0x00000020)  // Disables the mapping of video memory to system memory, consumes too much in Vista
NO PFD SUPPORT GDI           (= 0x00000800)  // Final override for exporting PFD SUPPORT GDI. If this bit is set, PFD SUPPORT GDI will not be set, regardless of OGL PfdAdjust or OGL VistaControlFlags values
FORCE SECONDARY ADAPTER      (= 0x00010000)
SERVER ONLY BITS             (= 0x00010820)
SRV DEFAULT                  (= 0x00000000)
UNUSED AVAILABLE             (= 0xff38c109)

Default values for this setting:
DEFAULT:    0x00000000
	SRV DEFAULT                             

------------------------------------------------------------
OGL APP SW2015 OIT FIX
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

SolidWorks 2015 Order Independent Transparency shader fix

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP TEXTUREVIEW DIRTY AFR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Dirty texture AFR after sharing with glTextureView - this is a temporary workaround for Catia NRE

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP TILEDCACHE QUADRO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MAXWELL TILEDCACHE override for Quadro

ON   (= 0x00000001)  // on
OFF  (= 0x00000000)  // off

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
OGL APP USE DX10 SAT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP USE LOOP ENHANCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Replaces some application immediate mode loops with block copy of data

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP USE SDDR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable frame coherency assuming static data but with dynamic references

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP USE SDSR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable frame coherency assuming static data with static references

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP USE WSVARRAY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Quadro specific vertex array paths

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP VBUM VIRTUAL ADDRESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

XP only, virtual addresses are created for any VBUM addresses passed back to the user application. Disabled for performance

ENABLED   (= 0x00000001)  // Virtual Address created for VBUM card references, safer for mode switching
DISABLED  (= 0x00000000)  // VRAM address passed directly back to the application, may not survive mode switch

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL APP VIDMEM PUSHBUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This app benefits greatly from vidmem pushbuffers

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP VPWW ALLOW LATE ALLOCED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

In VirtualProtectWriteWatch, allow late allocations

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP VPWW ALLOW REARM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

In VirtualProtectWriteWatch, allow rearming

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL APP VPWW DISALLOW PER ARCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Disallow VirtualProtectWriteWatch per arch.  A 'disallow' here overrules all other VPWW/VIRTUALPROTECT settings.

DISALLOW32BIT  (= 0x00000001)
DISALLOW64BIT  (= 0x00000002)

Default values for this setting:
DEFAULT:    DISALLOW32BIT

------------------------------------------------------------
OGL APP VPWW FORCE EARLY UNPROTECT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

In VirtualProtectWriteWatch, force and early unprotect

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP VRAM MAXIMUM UTILIZATION
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When minimize vram paging set, defines maximum VRAM utilized.  Default is 150%


Default values for this setting:
DEFAULT:    1.500000

------------------------------------------------------------
OGL APP WAR BUG 1446990 REMOVE INVALIDATE BUFFER BIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

WAR bug 1446990: Unity sets MAP INVALIDATE BUFFER BIT eventhough it reads from the mapped area. Mask MAP INVALIDATE BUFFER BIT flag away from <access> parameter provided to MapBufferRange(). Default is no masking.

DISABLE  (= 0x00000000)  // No masking.
ENABLE   (= 0x00000001)  // Mask MAP INVALIDATE BUFFER BIT away.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL APP WAR BUG 1550290 REMOVE INVALIDATE RANGE BIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Mask MAP INVALIDATE RANGE BIT flag away from <access> parameter provided to MapBufferRange(). Default is no masking.

DISABLE  (= 0x00000000)  // No masking.
ENABLE   (= 0x00000001)  // Mask MAP INVALIDATE RANGE BIT away.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL APP WAR BUG 2000076104 DISABLE BLIT FRAMEBUFFER SCISSOR CLIP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Disable the BlitFramebuffer clipping to scissor

DISABLE  (= 0x00000000)  // execute scissor clipping per GL spec for framebuffer blit, disable the WAR
ENABLE   (= 0x00000001)  // don't scissor clip the framebuffer blit, enable the WAR

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL APP WAR BUG 200558116 REQUIRE CLEAR FOR PRESENT SYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls whether Bug 200558116 workaround is enabled

DISABLED  (= 0x00000000)  // Disabled
ENABLED   (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
OGL APP YIELD AFTER SWAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Call GL YIELD in postSwapBuffers()

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL APP ZULL SUBREGION SWAPCOUNT SKIP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Using a state and global swapcount for tracking, when the last surface swapcount equals the current state/global swapcount, skip zcull subregion update

ENABLED   (= 0x00000001)  // Enable Setting
DISABLED  (= 0x00000000)  // Disable Setting

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL ASSERTION LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
OGL AVOID VALIDATION ON POP MATRIX WITHOUT CHANGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Avoid unnecessary calls to validation on pop matrix where no change has occurred. Limited to app bit to reduce risk

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL BAR1 LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limits the amount of BAR1 space available to the application. Units in MiB. Amount made available is the min of this and the amount the GPU actually supports.

MAX  (= 0xffffffff)  // Essentially unlimited - about 4 petabytes

Default values for this setting:
DEFAULT:    MAX

------------------------------------------------------------
OGL BAR1 RESERVE SPACE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the amount of BAR1 space in MiB that OpenGL and Vulkan cannot use, which is reserved for other applications to allocate graphics channels. A reserve of 10MiB should allow roughly 12 additional apps to start after an app uses all of the BAR1 space it can.


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
OGL BLIT PREFER 3D SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets a threshold for ReadImage prefering 3D over 2D: If blit size < threshold then prefer 2D else prefer 3D.


Default values for this setting:
DEFAULT:    0x00100000

------------------------------------------------------------
OGL BLOCKLINEAR OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
OGL BREAK ON RC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL BRIDGELESS FLIPPING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls enablement of OpenGL bridgeless flipping support.

AUTO      (= 0x00000002)  // Enables bridgless flipping in AFR when bridge support is lacking
FORCE ON  (= 0x00000001)  // Always use the bridgeless flipping path in AFR
OFF       (= 0x00000000)  // Disable bridgeless flipping

Default values for this setting:
DEFAULT:    AUTO

------------------------------------------------------------
OGL BUFFER ALLOC ORDER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

FORCE COLOR DEPTH   (= 0x17283097)  // Buffer alloc order, force color then depth
FORCE DEPTH COLOR   (= 0x87647375)  // Buffer alloc order, force depth then color
APPLICATION DETECT  (= 0x00000000)  // Buffer alloc order, application detect

Default values for this setting:
DEFAULT:    APPLICATION DETECT

------------------------------------------------------------
OGL BUFFER OBJECT ALLOC STRATEGY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls buffer object allocation strategy on Tegra.

DESKTOP        (= 0x00000000)  // Use same strategy as Desktop (for debugging/reference).
PREFER VIDMEM  (= 0x00000001)  // Prefer VIDMEM.

Default values for this setting:
DEFAULT:    PREFER VIDMEM

------------------------------------------------------------
OGL BUFFER OBJECT FORCE MEMORY SPACE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

SYSHEAP            (= 0x00000001)  // SYSHEAP memory (PCI/AGP/PCIE)
VID                (= 0x00000002)  // VID+MALLOC
CACHED PCI         (= 0x00000004)  // PBO Read (Cached PCI memory)
CACHED PCINOSNOOP  (= 0x00000008)  // PBO Read NV45 (Cached, no-snoop PCI memory)
MALLOC             (= 0x00000010)  // MALLOC memory

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL BUFFER OBJECT MEMORY SPACE ENABLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

SYSHEAP            (= 0x00000001)  // SYSHEAP memory (PCI/AGP/PCIE)
VID                (= 0x00000002)  // VID
CACHED PCI         (= 0x00000004)  // PBO Read (Cached PCI memory)
CACHED PCINOSNOOP  (= 0x00000008)  // PBO Read NV45 (Cached, no-snoop PCI memory)
ANY                (= 0x0000000f)  // Any

Default values for this setting:
DEFAULT:    0x0000000F
	SYSHEAP                                 
	VID                                     
	CACHED PCI                              
	CACHED PCINOSNOOP                       
	ANY                                     

------------------------------------------------------------
OGL CACHE DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

PRIMARY SHADER CACHE  (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL CATCH AMODEL EXCEPTIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Catches amodel exceptions to exit cleanly

FALSE  (= 0x00000000)  // Standard call to process methods
TRUE   (= 0x00000001)  // Put a try/catch around amodel method processing

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
OGL CENTROID SAMPLING CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE               (= 0x00000000)  // disable centroid sampling globally
ENABLE ALL            (= 0x00000001)  // enable centroid sampling on all attributes
ENABLE COLOR          (= 0x00000002)  // enable centroid sampling on color
ENABLE FOG            (= 0x00000004)  // enable centroid sampling on fog coordinates
ENABLE COLOR AND FOG  (= 0x00000006)  // enable centroid sampling on color and fog coordinates

Default values for this setting:
DEFAULT:    0x00000006
	ENABLE COLOR                            
	ENABLE FOG                              
	ENABLE COLOR AND FOG                    

------------------------------------------------------------
OGL CHANNEL PRIORITY OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the channel priority of all channels in the application. Allows overriding the user defined value.

DISABLED  (= 0x00000000)  // No override is in effect
LOW       (= 0x00000003)  // Channel priority is set to low
MEDIUM    (= 0x00000002)  // Channel priority is set to medium
HIGH      (= 0x00000001)  // Channel priority is set to high

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL CHANNEL PRIORITY REALTIME FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags control GPU clock boost and host runlist reschedule for REALTIME priority contexts

DISABLE                    (= 0x00000000)  // No options enabled
ENABLE BOOST               (= 0x00000001)  // REALTIME context should execute with boosted GPU clocks
ENABLE RESCHEDULE          (= 0x00000002)  // REALTIME context submit should cause host runlist reschedule
ENABLE RESCHEDULE PREEMPT  (= 0x00000004)  // REALTIME context submit should preempt as needed after prerequisite reschedule

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE BOOST                            

------------------------------------------------------------
OGL CHANNEL TIMESLICE HIGH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specfies the timeslice value in usec for high priority channel

DEFAULT  (= 0x00001450)  // Default timeslice value for high priority channel

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
OGL CHANNEL TIMESLICE LOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specfies the timeslice value in usec for low priority channel

DEFAULT  (= 0x00000514)  // Default timeslice value for low priority channel

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
OGL CHANNEL TIMESLICE MEDIUM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specfies the timeslice value in usec for medium priority channel

DEFAULT  (= 0x00000a28)  // Default timeslice value for medium priority channel

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
OGL CHANNEL TIMESLICE REALTIME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specfies the timeslice value in usec for realtime priority channel

DEFAULT  (= 0x000028a0)  // Default timeslice value for realtime priority channel

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
OGL CHEATING DEATH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)
ENABLE   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL CHECK FOR IDENTITY MATRIX MATH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Add cycles to check for identity matrix math in some cases. Limited to app bit to reduce risk, quadro differentiator

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL CHIP NAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specifies the chip to emulate in Amodel. Append a GL prefix to make it a Quadro


------------------------------------------------------------
OGL CLEAR DATA STORE VIDMEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Clear video memory allocations that may be used as part of a buffer object's data store.

ENABLE   (= 0x00000001)  // Enable vidmem data store clears
DISABLE  (= 0x00000000)  // Disable vidmem data store clears

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL CLEAR METERING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls enabling clears for subframe metering

DISABLE     (= 0x00000000)  // No clear metering for subframe metering.
APP DETECT  (= 0x00000001)  // Use clear metering for detected apps.
ENABLE      (= 0x00000002)  // Use clear metering for subframe metering globally.

Default values for this setting:
DEFAULT:    APP DETECT

------------------------------------------------------------
OGL CLEAR METERING CLEARS PER FLUSH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of clears before triggering a flush in clear metering.


------------------------------------------------------------
OGL CLEAR METERING OUTSTANDING FLUSHES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of clear flushes to allow before stalling.


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
OGL CLIP 2D RENDERING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable optimization to detect bboxes of rendering and generate clips for it

ENABLE                    (= 0x00000001)  // Enable the optimizations, depending on heuristics
DRAW BBOXES               (= 0x00000002)  // Draw bounding boxes using line loops at SwapBuffers/ReadPixels time
PRINT STATISTICS          (= 0x00000004)  // Compute and print percentage of pixels rendered
DEBUG SMALL CLIPS         (= 0x00000008)  // Intentionally use clips that are too small, to show incorrect rendering
ENABLE READPIXELS         (= 0x00000010)  // Enable ReadPixels as an end-of-frame marker
ENABLE DRAW SPLITTING     (= 0x00000020)  // Enable splitting large draws into smaller draws
SPLIT ALL DRAWS           (= 0x00000040)  // Aggressively split all draws
FORCE ENABLE              (= 0x00000080)  // Always try to enable the optimization
ENABLE DRAW TEX           (= 0x00000100)  // Enable converting suitable DrawArrays into DrawTextureNV
ENABLE CULL SKIP          (= 0x00000200)  // Enable zero-area and frustum cull draw skipping
ENABLE CONST COLOR        (= 0x00000400)  // Enable constant color detection and no-op blend draw skipping
ENABLE NO COLOR MULTIPLY  (= 0x00000800)  // Enable constant color detection and skipping a (1,1,1,1) color multiply
ENABLE NO PERSPECTIVE     (= 0x00001000)  // Enable constant clipw detection and disabling perspective interpolation
ENABLE CLIPPING           (= 0x00002000)  // Enable window clipping to the dirty regions
ANDROID DEFAULT           (= 0x00003f21)  // Default value on Android

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL CL EVENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable ARB cl event extension.

DISABLE  (= 0x00000000)  // Disable (hide) extension.
ENABLE   (= 0x00000001)  // Enable extension.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL CMDBUF MEMORY SPACE ENABLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

SYSHEAP  (= 0x00000001)  // SYSHEAP memory (pullable PCI/AGP/PCIE)
VID      (= 0x00000002)  // VID memory

Default values for this setting:
DEFAULT:    0x00000001
	SYSHEAP                                 

------------------------------------------------------------
OGL COMMANDLIST GEFORCE SLOWDOWN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Value of the slowdown on geforce products for each draw inside a commandlist

DEFAULT GEFORCE  (= 0x00000010)  // number of cycles to wait per draw on geforce

Default values for this setting:
DEFAULT:    DEFAULT GEFORCE

------------------------------------------------------------
OGL COMMAND LIST CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls driver behavior related to command list

DYNAMIC           (= 0x00000000)  // load balance between CPU & GPU decoding
FORCE GPU DECODE  (= 0x00000001)  // always use GPU decoding
FORCE CPU DECODE  (= 0x00000002)  // always use CPU decoding

Default values for this setting:
DEFAULT:    0x00000000
	DYNAMIC                                 

------------------------------------------------------------
OGL CONFORMANT BLIT FRAMEBUFFER SCISSOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Indicates that glBlitFramebuffer should be affected by the scissor test, as per the OpenGL specification

NONCONFORMANT  (= 0x00000000)  // ignore the scissor test
CONFORMANT     (= 0x00000001)  // respect the scissor test

Default values for this setting:
DEFAULT:    CONFORMANT

------------------------------------------------------------
OGL CONFORMANT INCOMPLETE TEXTURES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Indicates whether incomplete textures should produce (0,0,0,0) matching D3D and our hardware, or (0,0,0,1) as per the OpenGL specification

NONCONFORMANT  (= 0x00000000)  // return (0,0,0,0)
CONFORMANT     (= 0x00000001)  // return (0,0,0,1)

Default values for this setting:
DEFAULT:    CONFORMANT

------------------------------------------------------------
OGL CONSERVATIVE RASTER BBOX PAD
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control the raster bounding box (8-bit) padding.

DISABLED        (= 0x00000000)  // No padding.
DRIVER DEFAULT  (= 0x000000ff)  // Let driver chose the default value.

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL CONSTANT BUFFER UPDATE BUG 972630 WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable/Disable WAR for HW bug 972630 for experimentation.

DRIVER DEFAULT    (= 0x00000000)  // Use the driver default behavior
DISABLE           (= 0x00000001)  // Disable the WAR.
ENABLE ONE NOP    (= 0x00000002)  // Enable the WAR with 1 pipe-nop after every constant buffer change
ENABLE THREE NOP  (= 0x00000003)  // Enable the WAR with 3 pipe-nops after every constant buffer change
ENABLE EIGHT NOP  (= 0x00000004)  // Enable the WAR with 8 pipe-nops after every constant buffer change
ENABLE TEN NOP    (= 0x00000005)  // Enable the WAR with 10 pipe-nops after every constant buffer change

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL CONSUMER API STEREO MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the API stereo mode for consumer cards. This will only enable stereo on approved configs and applications.

AUTOSELECT    (= 0x00000000)  // Set the stereo mode based on the consumer stereo regkeys
DISABLED      (= 0x00000001)  // Disable 3D Vision
ANAGLYPH      (= 0x00000002)  // Stereo anaglyph (3D Vision discover)
LCD           (= 0x00000003)  // Use a 3D Vision capable LCD
DLP           (= 0x00000004)  // Use a 3D Vision capable DLP TV
DLP REVERSED  (= 0x00000005)  // Use a 3D Vision capable DLP TV (reversed checkerboard)
HDMI14        (= 0x00000006)  // Use a HDMI 1.4 capable TV (3DTV Play)
AEGIS DT      (= 0x00000007)  // Use a 3D Vision capable LCD with embedded AegisDT emitter
OEM EMITTER   (= 0x00000008)  // Use a 3D Vision capable LCD with OEM emitter connected via GPIO

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
OGL CONTROL L1 DM SPLIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable/disable the control of the L1/DM cache split.

NEVER    (= 0x00000000)  // Never use a 16 KB DM.
DYNAMIC  (= 0x00000001)  // Choose the L1/DM config based on the shader state.
ALWAYS   (= 0x00000002)  // Always use a 16 KB DM, when possible

Default values for this setting:
DEFAULT:    DYNAMIC
DEFAULT GL:    NEVER

------------------------------------------------------------
OGL COPY BUFFER METHOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Selects between P2H2P and CPU memcpy to copy buffer between GPU's

P2H2P        (= 0x00000000)  // copy via P2H2P
CPU          (= 0x00000001)  // copy via CPU
COPY ENGINE  (= 0x00000002)  // copy via copy engine

Default values for this setting:
DEFAULT:    P2H2P

------------------------------------------------------------
OGL COP PARTIAL HALF VECTOR WRITES OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Detection override for partial half-vector writes code generation (MRG modifier in SASS)

DEFAULT        (= 0x00000000)  // Use autodetection
FORCE DISABLE  (= 0x00000001)  // Disable the optimization
FORCE ENABLE   (= 0x00000002)  // Force enable if supported. This may inflict corruption on FP16 shaders if GPU SM ECC is enabled on Pascal

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
OGL CPMM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Linux Cross-Process Memory Manager flags

OFF                (= 0x00000000)  // Do not listen to CPMM requests
ON                 (= 0x00000001)  // Listen to CPMM requests, use separate thread if !SINGLE THREADED, otherwise listen as part of   glNVPerFrameOperations
FORCE SYNCHRONOUS  (= 0x00000002)  // Listen to CPMM requests, always in   glNVPerFrameOperations
FORCE THREAD       (= 0x00000003)  // Opposite of the above, use a separate thread even if that loses the SINGLE THREADED optimizations

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
OGL CPMM TRIM PERIOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Linux self-triggered periodic trim period in seconds


Default values for this setting:
DEFAULT:    0x0000012C

------------------------------------------------------------
OGL CROSS ADAPTER DEBUG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE                 (= 0x00000000)
SHOW XA FLAGS           (= 0x00000001)  // Show XA flags on optimus overlay
BLIT 1 PIXEL            (= 0x00000002)  // Force the blit to one pixel for performance investigation
DISABLE PRESENT THREAD  (= 0x00000004)  // Disable present thread
DELAY PRESENT THREAD    (= 0x00000008)  // Delay present thread for debugging purposes

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL CROSS ADAPTER PRESENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Optimus cross adapter, cross vendor present path on Win7

COMPATIBLE         (= 0x00000000)  // Presents via the OS (DCE or thunk) and disable FSE
PERFORMANCE        (= 0x000000ac)  // Fast path using CE DX10 DDI lock vidmem
DX9                (= 0x00000001)  // Present using DX9
COLOR COMPRESSION  (= 0x00000002)  // Color compression to save PCIE bandwidth
ASYNC BLIT         (= 0x00000004)  // OGL blit with asynchronous engines
PRESENT THREAD     (= 0x00000008)  // Present in a different thread
DX9 DDI            (= 0x00000010)  // Present using DX9 DDI
LOCK VIDMEM        (= 0x00000020)  // Lock vidmem, map it to NV GPU
FORCE DCE OFF      (= 0x00000040)  // Force DCE off for better performance
DX10 DDI           (= 0x00000080)  // Present using DX10 DDI
FORCE BLIT         (= 0x00000100)  // Force blit in Optimus mode
NO DXGI SPANNING   (= 0x00000200)  // Do not allow DXGI present when window spanning multiple monitors
DXGI STEREO        (= 0x00000400)  // Use xAdapter blit for DXGI stereo present across multiple adapters
NO LEGACY OPTIMUS  (= 0x80000000)  // Disable legacy Optimus code path
WIN10 DEFAULT      (= 0x80000000)  // Legacy Optimus is not functional with WDDM2 Intel drivers

Default values for this setting:
DEFAULT:    0x000003AC
	PERFORMANCE                             
	ASYNC BLIT                              
	PRESENT THREAD                          
	LOCK VIDMEM                             
	DX10 DDI                                
	FORCE BLIT                              
	NO DXGI SPANNING                        

------------------------------------------------------------
OGL CROSS ADAPTER PSTATE BOOST AT CLEAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Notify RM at each clear that pstates should be pushed to full power for Optimus and MSHybrid

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL CUBEMAP ANISO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Bitfield controlling various behaviors of anisotropic filtering with cubemaps.  Implemented only on Fermi and better.

DEFAULT FACES   (= 0x00000000)  // Hardware default for anisotropic filtering within faces.
ENABLE FACES    (= 0x00000001)  // Allow anisotropic filtering within faces.
DISABLE FACES   (= 0x00000002)  // Forbid anisotropic filtering within faces.
DEFAULT SEAMS   (= 0x00000000)  // Hardware default for anisotropic filtering near cube seams.
ENABLE SEAMS    (= 0x00000010)  // Allow anisotropic filtering near cube seams.
DISABLE SEAMS   (= 0x00000020)  // Forbid anisotropic filtering near cube seams.
SEAMLESS SPAN   (= 0x00000000)  // Use AUTO SPAN SEAM when seamless, unless SEAMLESS CROSS is set.
SEAMLESS CROSS  (= 0x00000100)  // Use AUTO CROSS SEAM when seamless.

Default values for this setting:
DEFAULT:    0x00000111

------------------------------------------------------------
OGL CUBEMAP FILTERING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

API SEAMLESS     (= 0x00000000)  // Use API state for enabling/disabling inter-face filtering.
ALWAYS SEAMLESS  (= 0x00000001)  // Forcibly enable inter-face filtering.

Default values for this setting:
DEFAULT:    API SEAMLESS

------------------------------------------------------------
OGL CYCLESTATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OpenGL-only cyclestats flags

NONE                       (= 0x00000000)  // default
DOWNSAMPLE PART OF RENDER  (= 0x00000001)  // write downsample tags as part of render

Default values for this setting:
DEFAULT:    0x00000001
	DOWNSAMPLE PART OF RENDER               

------------------------------------------------------------
OGL DBG ALLOC SYSMEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

allocate a block of memory at process start (value is block size in bytes)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL DBG CLAW TRACE MASK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

override mask for CLAW tracing


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL DBG PAD GC ALLOC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

pad/shift each GC allocation (value is pad size in bytes)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL DBG PAD OG ALLOC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

pad/shift each OG allocation (value is pad size in bytes)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL DEBUGGER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ASSUME ATTACHED                  (= 0x00000001)
ALLOW ATTACHED                   (= 0x00000002)
REPORT ATTACHED FOR DEBUG BUILD  (= 0x00000004)
WAIT FOR ATTACH                  (= 0x00000008)  // raise(SIGSTOP) at startup to attach debugger

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL DEBUGGER PRESENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

IGNORE DEBUGGER  (= 0x00005691)  // Ignore result of   glNVIsDebuggerPresent

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL DEBUG DIAGENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLED   (= 0x00000001)  // Enable Diag
DISABLED  (= 0x00000000)  // Disable Diag

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL DEBUG RENDERER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NVIDIA     (= 0x00000000)  // Nvidia
SOFTWARE   (= 0x00000001)  // Software
MICROSOFT  (= 0x00000002)  // Microsoft

Default values for this setting:
DEFAULT:    NVIDIA

------------------------------------------------------------
OGL DEDICATED HW STATE PER CONTEXT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether GL is allowed to use dedicated HW state per context

DISABLE        (= 0x00000000)  // Not allowed
ENABLE         (= 0x00000001)  // Allowed for all contexts
ENABLE ROBUST  (= 0x00000002)  // Allowed for robust contexts only

Default values for this setting:
DEFAULT:    ENABLE ROBUST

------------------------------------------------------------
OGL DEEP COLOR SCANOUT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)  // Disable 10bpc displayport scanout when a 10bpc application launches, this causes the 10bpc rendering to be downgraded at present or scanout time, but keeps DWM enabled on Vista (this is irrelevant to Win7, because DWM supports 10bpc scanout on win7)
ENABLE   (= 0x00000001)  // Enable 10bpc displayport scanout when a 10bpc application launches. This causes DWM to be disabled on Vista, but not on Win7.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL DEFAULT SHADER DISK CACHE LOCATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control where OGL driver should store the shader disk cache files

AUTOSELECT  (= 0x00000000)  // Let driver decide the shader cache location based on process integrity levels
LOCAL       (= 0x00000001)  // Force to use LOCAL folder (only for debug and make sure untrusty process cannot create cache)
LOCAL LOW   (= 0x00000002)  // Force to use LOCALLOW folder (only for debug and make sure trusty process can still create cache)

Default values for this setting:
DEFAULT:    0x00000000
	AUTOSELECT                              

------------------------------------------------------------
OGL DEFAULT SWAP INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls the number of V-blank signals from the display to wait before rendering a frame (SwapInterval) on OpenGL. In order to force VSYNC ON or OFF, use VSYNCMODE

TEAR            (= 0x00000000)  // Allow Tearing
VSYNC ONE       (= 0x00000001)  // Sync to VSync
VSYNC           (= 0x00000001)  // Sync to VSync default value which is vsync to 1 vsync
VALUE MASK      (= 0x0000ffff)  // Read mask
FORCE MASK      (= 0xf0000000)  // Force bit read mask
FORCE OFF       (= 0xf0000000)  // Force sync off
FORCE ON        (= 0x10000000)  // Force sync on
APP CONTROLLED  (= 0x00000000)  // Allow application to toggle
DISABLE         (= 0xffffffff)  // Disable Wait For VSync

Default values for this setting:
DEFAULT:    0x00000001
	VSYNC ONE                               
	TEAR                                    

------------------------------------------------------------
OGL DEFAULT SWAP INTERVAL FRACTIONAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls how the current scan line evaluated for a (un)synced flip with negative intervals. A value in the range of 0 - 100%

ZERO SCANLINES               (= 0x00000000)  // do not consider scanlines
ONE FULL FRAME OF SCANLINES  (= 0x00000064)  // consider entire frame of scanlines

Default values for this setting:
DEFAULT:    ZERO SCANLINES

------------------------------------------------------------
OGL DEFAULT SWAP INTERVAL SIGN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Swap intervals are treated as negative or positive values depending on value (0-positive, 1-negative)

POSITIVE  (= 0x00000000)  // swap interval is positive
NEGATIVE  (= 0x00000001)  // swap interval is negative

Default values for this setting:
DEFAULT:    POSITIVE

------------------------------------------------------------
OGL DEFERRED MS TRANSIENT UPDATES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When enabled defers triggering downsampling/upsampling from/to transient multisampled buffers until the moment before needed, instead of immediately after an operation that triggers a resolve

ENABLE   (= 0x00000001)  // Enable deferred downsampling/upsampling behavior
DISABLE  (= 0x00000000)  // Disable deferred downsampling/upsampling behavior

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL DELAY BEFORE SWAP MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The method used to wait in wgl/glXDelayBeforeSwapNV

AUTO        (= 0x00000000)  // Select a system default mode
BUSY WAIT   (= 0x00000001)  // Busy-wait
BUSY YIELD  (= 0x00000002)  // Busy-wait, but yield on each loop
SLEEP       (= 0x00000003)  // Sleep until the time is up

Default values for this setting:
DEFAULT:    AUTO

------------------------------------------------------------
OGL DISABLE GPU CACHE SYSMEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL DISABLE PERSAMPLE FRAGCOORD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

FALSE  (= 0x00000000)  // Don't disable per-sample gl FragCoord 
TRUE   (= 0x00000001)  // Disable per-sample gl FragCoord

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
OGL DISABLE SCRATCH BUFFER OBJECT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Disables use of scratch buffer objects

FALSE  (= 0x00000000)
TRUE   (= 0x00000001)

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
OGL DISABLE TEXBO MIGRATIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable/disable TexBO migrations between sysmem and vidmem

MIGRATION DISABLED  (= 0x00000001)  // Disable TexBO migrations between sysmem and vidmem
MIGRATION ENABLED   (= 0x00000000)  // Enable TexBO migrations between sysmem and vidmem

Default values for this setting:
DEFAULT:    MIGRATION ENABLED

------------------------------------------------------------
OGL DISABLE VERSION CHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

OFF  (= 0x00000000)  // Version checking on
ON   (= 0x00000001)  // Version checking off

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL DISABLE WORKSTATION OPTIMIZATIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Disables automatic enable of some workstation optimizations

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL DISALLOW CE MASK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Sets a bitmask determining whether async CE (bit 0) or GRCE (bit 1) should be disabled.

ASYNC  (= 0x00000001)  // Disable the asynchronous CE
GR     (= 0x00000002)  // Disable the CE on the graphics channel
ALL    (= 0x00000003)  // Disable all CE

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL DISALLOW Z16
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ALLOW     (= 0x00000000)
DISALLOW  (= 0x00000001)

Default values for this setting:
DEFAULT:    ALLOW

------------------------------------------------------------
OGL DISPATCHER SLEEPORSPIN HEURISTIC FACTOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the factor N used in the sleep-or-spin heuristic in the dual core driver. That heuristic decides to sleep if the next sync is expected to take at least N times the time it takes for a sleep synchronization event, as profiled by the driver at startup. Use 0 to always sleep, or a very high value to always spin. Lower values sleep more aggressively.


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
OGL DISPATCH CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE BYPASS  (= 0x00000000)
ALLOW BYPASS    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	ALLOW BYPASS                            

------------------------------------------------------------
OGL DL MEMORY SPACE ENABLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

SYSHEAP  (= 0x00000001)  // SYSHEAP memory (pullable PCI/AGP/PCIE)
VID      (= 0x00000002)  // VID memory
ANY      (= 0x0000001f)

Default values for this setting:
DEFAULT:    0x0000001F
	SYSHEAP                                 
	VID                                     
	ANY                                     

------------------------------------------------------------
OGL DMAPUSH BUFSIZE GPFIFO WORDS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00008000

------------------------------------------------------------
OGL DMAPUSH BUFSIZE WORDS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00040000

------------------------------------------------------------
OGL DMAPUSH MIN PUSH COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000980

------------------------------------------------------------
OGL DOWNSAMPLE RESERVED TEX HEADERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the number of reserved tex headers for downsample textures, this is needed for non-flushing downsample for tile-caching on Maxwell. A value of 0 disables the functionality

DISABLE  (= 0x00000000)  // Disable the use of reserved tex header slots for downsample images.
MAXIMUM  (= 0x00000020)  // Maximum reserved textures supported.

------------------------------------------------------------
OGL DRR LONG SLEEP DURATION US
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

With YIELD POLICY of SLEEP INCREASING TIME, once we begin sleeping in   glNVDelayRegisterReads, sleep for this long each iteration


------------------------------------------------------------
OGL DRR LONG SLEEP START TIME US
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

With YIELD POLICY of SLEEP INCREASING TIME, after the loop surpasses this limit, begin sleeping longer in   glNVDelayRegisterReads


------------------------------------------------------------
OGL DRR YIELD POLICY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This is the policy for   glNVDelayRegisterReads to change how we yield/sleep for perf/power tuning

WAIT FOR GPU           (= 0x00000000)  // Yield with the WAIT FOR GPU hint
SLEEP INCREASING TIME  (= 0x00000001)  // Delay (via yield hint) for at first a short time each iteration, than longer

Default values for this setting:
DEFAULT:    SLEEP INCREASING TIME

------------------------------------------------------------
OGL DWM VIRTUAL MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control DWM Virtual Mode (Virtual resolution) for Win10 TH1 and later

DISABLE VIRTUAL MODE  (= 0x00000000)  // Turn off Virtual Mode so OGL/Vulkan can enter FSE flipping
DISABLE FLIPPING      (= 0x00000001)  // Disable flipping in Virtual Mode. This is default from MSFT

Default values for this setting:
DEFAULT:    DISABLE FLIPPING

------------------------------------------------------------
OGL DX PRESENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Win8 OpenGL present layered on DX11

DISABLE  (= 0x00000000)  // disable DX present
ENABLE   (= 0x00000001)  // enable DX present

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
OGL DX PRESENT DEBUG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE                            (= 0x00000000)  // clear all debug bits
DISABLE FULLSCREEN OPT             (= 0x00000001)  // disable fullscreen optimization
DISABLE THREAD                     (= 0x00000002)  // disable present thread
ENABLE DFLIP ALWAYS                (= 0x00000004)  // enable use of direct flip API parameters
ENABLE NON STEREO                  (= 0x00000008)  // enable DX present on non-stereo windows
FORCE PRESENT RESTARTS             (= 0x00000010)  // force use of DXGI PRESENT RESTART when vsync is disabled
SIGNAL PRESENT END FROM CPU        (= 0x00000020)  // signal present complete from the CPU instead of the GPU (corruption possible)
DISABLE MSHYBRID SEQUENTIAL        (= 0x00000040)  // disable MSHybrid sequential swap effect optimization
ENABLE DX SYNC INTERVAL            (= 0x00000080)  // enable DX sync interval for vsync present instead of OGL WaitForVBlank
DISABLE INTEROP GPU SYNC           (= 0x00000100)  // disable use of interop GPU sync objects
FORCE INTEROP GPU SYNC             (= 0x00000200)  // use interop GPU sync objects (not just on MSHybrid)
DISABLE MSHYBRID DFLIP             (= 0x00000400)  // disable MSHybrid dflip swap effect optimization
ENABLE MSHYBRID DX SYNC INTERVAL   (= 0x00000800)  // ENABLE DX SYNC INTERVAL for mshybrid only
DISABLE ALLOW TEARING FLAG         (= 0x00001000)  // disable use of ALLOW TEARING flag
DISABLE MSHYBRID PRESENT RESTARTS  (= 0x00002000)  // disable DXGI PRESENT RESTART for MSHYBRID
DISABLE DEEP COLOR                 (= 0x00004000)  // disable dx present usage for deep color (int) pixel formats. (Only wddm2.3 uses dx present for deep color so far)
ENABLE DEEP COLOR                  (= 0x00008000)  // enable dx present usage for deep color (int) pixel formats. (wddm2.3 uses dx present for deep color so far)
RESERVED16                         (= 0x00010000)  // reserved (was: DISABLE QUADRO EGPU AND NON NV: disable dx present usage for Quadro connected as egpu when non nv gpus are attached to the desktop)
RESERVED17                         (= 0x00020000)  // reserved (was: ENABLE WITH NON NV: enable dx present usage even when non nv gpus are attached to the desktop)
ENABLE DX DEBUG LAYER              (= 0x00040000)  // Use the DX11 debug layer. For Win10 requires the 'Graphics Tools' optional feature.
ENABLE FOR DXVK                    (= 0x00080000)  // Allow use of DX present with DXVK (may hit errors in DXGI)
DISABLE FULLLSCREEN FLAG ADJUST    (= 0x00100000)  // Disables the addition of the 'WS POPUP' GWL STYLE style while creating a dx device for fullscreen windows.
ENABLE FULLSCREEN WIN7 STEREO      (= 0x10000000)  // enable Win7 fullscreen stereo mechanism

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL DX PRESENT DX SYNC INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

If enabled, DX performs vsync instead of OGL

DISABLE            (= 0x00000000)  // Use OGL for vsync (the debug settings above can override this)
ENABLE MSHYBRID    (= 0x00000001)  // Use DX for vsync on MSHybrid
ENABLE EVERYWHERE  (= 0x00000002)  // Use DX for vsync on all systems

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE MSHYBRID                         

------------------------------------------------------------
OGL DX PRESENT INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE          (= 0x00000000)  // disable DX present indicator
ENABLE           (= 0x00000001)  // enable DX present indicator
RENDER TEAR BAR  (= 0x00000002)  // render moving vertical bar

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL DYNAMIC ADJUST MIN PUSH COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)  // Disable dynamic adjust MinPushCount
ENABLE   (= 0x00000001)  // Enable dynamic adjust MinPushCount

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL EARLY TEXTURE HW ALLOCATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Forces texture to HW during texture creation

DISABLE  (= 0x00000000)  // Disable Setting
ENABLE   (= 0x00000001)  // Enable Setting

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL ENABLE GDI COMPATIBILITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Some applications render GDI on top OpenGL content. There is limited support for this with blit model, but with flip model (can be used by dxPresent path), mixing GDI and other rendering is not supported. In fact the first flip model present to a window permanently disables GDI rendering support for that window. Enabling mixing here prevents the dxPresent path from using flip model when possible (note that diagonal tearing is possible due to bug 200050074). Enabling this is not necessary for applications that use a SUPPORT GDI pixelformat.

DISABLED  (= 0x00000000)  // Disable GDI mixing, allow flip model.
ENABLED   (= 0x00000001)  // Enable GDI mixing, disallow flip model when possible.
AUTO      (= 0x00000002)  // Use driver heuristic to determine mode.

Default values for this setting:
DEFAULT:    AUTO

------------------------------------------------------------
OGL ENABLE SHADOWPLAY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether OGL support for Shadowplay is enabled

ENABLE   (= 0x00000001)  // Enable
DISABLE  (= 0x00000000)  // Disable 

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL ENUM ADAPTERS CONFIG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Configure adapter enumeration.  By default, OpenAdapterFromDeviceName is tried before OpenAdapterFromLocationInformation.

TRY ALL                                      (= 0x00000000)  // try all until one succeeds or all fail
SKIP TRY OpenAdapterFromDeviceName           (= 0x00000001)  // do not try OpenAdapterFromDeviceName
SKIP TRY OpenAdapterFromLocationInformation  (= 0x00000002)  // do not try OpenAdapterFromLocationInformation

Default values for this setting:
DEFAULT:    TRY ALL

------------------------------------------------------------
OGL ES VERSION OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

TO OPENGL ES 1 1  (= 0x00312e31)  // Report OpenGL ES version 1.1
TO OPENGL ES 2 0  (= 0x00302e32)  // Report OpenGL ES version 2.0
TO OPENGL ES 3 0  (= 0x00302e33)  // Report OpenGL ES version 3.0
TO OPENGL ES 3 1  (= 0x00312e33)  // Report OpenGL ES version 3.1
TO OPENGL ES 3 2  (= 0x00322e33)  // Report OpenGL ES version 3.2
DISABLED          (= 0x00000000)  // Disabled
MAXVALUE          (= 0x00ffffff)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL EVENT LOG SEVERITY THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specifies the severity of events logged into the Windows Event log by the OpenGL driver.

DISABLE      (= 0x00000000)  // Do not log any events
CRITICAL     (= 0x00000001)  // Log only Critical events.
WARNING      (= 0x00000002)  // Log Warning and Critical events.
INFORMATION  (= 0x00000003)  // Log Information and more severe events.
ALL          (= 0x00000004)  // Log all events.

Default values for this setting:
DEFAULT:    ALL

------------------------------------------------------------
OGL EVENT LOG VRAM OVERFLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Configure creation of event log entries if high vidmem usage is detected.

PERCENT THRESHOLD MASK  (= 0x000000ff)  // percentage threshold for utilized vidmem
PERCENT THRESHOLD 75    (= 0x0000004b)  // percentage threshold default is 75%
LOG ONLY ONCE           (= 0x00010000)  // log only once per process?  Otherwise, log every new maximum.
LOG SIZE INFO           (= 0x00020000)  // write size info into event log text?

Default values for this setting:
DEFAULT:    0x0001004B
	PERCENT THRESHOLD 75                    
	LOG ONLY ONCE                           

------------------------------------------------------------
OGL EXPERIMENTAL PERF STRATEGY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control whether Unix GL/VK driver will use new RMCTRL NV2080 CTRL CMD PERF BOOST for Boost Clocks instead of NV2080 CTRL CMD PERF SET MODE

DISABLED  (= 0x00000000)  // Use traditional NV2080 CTRL CMD PERF SET MODE
ENABLED   (= 0x00000001)  // Use modern boost rmctrl NV2080 CTRL CMD PERF BOOST (2s boost)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL EXTENDED BYPASS NUM DLLS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of additional dlls allowed to use API bypass


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
OGL EXTENSION STRING BUG WORKAROUND
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting allows to override the OpenGL extension string.


------------------------------------------------------------
OGL EXTENSION STRING NVARCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

HW DEFAULT  (= 0x00000000)  // Default
NV40        (= 0x00000006)  // NV40
NV50        (= 0x00000007)  // NV50

Default values for this setting:
DEFAULT:    HW DEFAULT

------------------------------------------------------------
OGL EXTENSION STRING VERSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL EXTERNAL MEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

External memory settings.

USE ALLOCATION LIST  (= 0x00000001)  // Use existing block allocation entry when importing external allocation which was exported in same memory manager instance.

Default values for this setting:
DEFAULT:    0x00000001
	USE ALLOCATION LIST                     

------------------------------------------------------------
OGL EXTRA CGC OPTION
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Extra options to pass to the GLSL compiler.


------------------------------------------------------------
OGL FAIL LAZY MAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)
ENABLE   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL FASTGS CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Disable FastGS Compilation

NONE                         (= 0x00000000)  // HW default
DISABLE AUTO FAST GS         (= 0x00000001)  // Don't attempt to compile normal geometry shaders as FastGS
DISABLE PASSTHROUGH FAST GS  (= 0x00000002)  // Don't compile NV geometry shader passthrough as FastGS

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
OGL FAST MATH FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls OCG floating point optimization behavior

DISABLE REORDER FLOAT DISTRIBUTE        (= 0x00000001)  // disable canReorderFloatDistribute
DISABLE REORDER CSE                     (= 0x00000002)  // disable canReorderCSE
DISABLE DISTRIBUTE AND REASSOCIATE MUL  (= 0x00000004)  // disable canDistributeAndReassociateMul
ENABLE ALL                              (= 0x00000000)  // all optimizations enabled
DISABLE ALL                             (= 0x00000007)  // all optimizations disabled

Default values for this setting:
DEFAULT:    0x00000007
	DISABLE REORDER FLOAT DISTRIBUTE        
	DISABLE REORDER CSE                     
	DISABLE DISTRIBUTE AND REASSOCIATE MUL  
	DISABLE ALL                             

------------------------------------------------------------
OGL FBO BLIT IGNORE SRGB
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether to ignore GL FRAMEBUFFER SRGB when blitting framebuffers.

CONFORMANT   (= 0x00000000)  // off
IGNORE SRGB  (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    CONFORMANT

------------------------------------------------------------
OGL FBO COMPLETE WITH MIXED SAMPLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Work around for applications that don't follow the GL 4.4 spec for fixed/non-fixed sample locations, these can't be mixed.

ENABLED   (= 0x00000001)  // Enable Setting
DISABLED  (= 0x00000000)  // Disable Setting

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL FB REGION ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Select the enabled FB regions on boards with multiple regions.

ALL REGIONS  (= 0xffffffff)  // Use all FB regions
REGION 0     (= 0x00000000)  // Use FB region 0
REGION 1     (= 0x00000001)  // Use FB region 1

Default values for this setting:
DEFAULT:    ALL REGIONS

------------------------------------------------------------
OGL FILTER EGLCONFIGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Filter out some EGL configs to reduce the total config count.

DISABLE NONE                (= 0x00000000)  // Expose all available configs.
DISABLE SWAP PRESERVED      (= 0x00000001)  // Disable the swap preserve capability.
DISABLE DEPTH 24 STENCIL 0  (= 0x00000002)  // Disable Z24S0 configs.

Default values for this setting:
DEFAULT:    0x00000001
	DISABLE SWAP PRESERVED                  

------------------------------------------------------------
OGL FILTER PIXELFORMAT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

EXPORT 8BPC         (= 0x00000001)
EXPORT 10BPC        (= 0x00000002)
EXPORT 12BPC        (= 0x00000004)
EXPORT 16BPC        (= 0x00000008)
EXPORT 16BPC FLOAT  (= 0x00000010)

Default values for this setting:
DEFAULT:    0x00000011
	EXPORT 8BPC                             
	EXPORT 16BPC FLOAT                      

------------------------------------------------------------
OGL FLUSH CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL FORCED LATE Z FOR NO DEPTH TEST DRAWS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)  // Disable forced Late-Z perstrat 
ENABLE   (= 0x00000001)  // Enable forced Late-Z for some draws with no depth test and low-geometry

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL FORCE BLIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ON   (= 0x00000001)  // Force Blit On
OFF  (= 0x00000000)  // Force Blit Off

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL FORCE BLIT OBFUSCATED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ON   (= 0x939fa397)  // Force Blit On
OFF  (= 0x1af4e434)  // Force Blit Off

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL FORCE BUFFER MAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLED   (= 0x92347832)
DISABLED  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL FORCE COMPLIANT FLOAT BLEND
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When set, make blending for IEEE special values as close to correct as the HW will allow.

ENABLE   (= 0x00000001)
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL FORCE DISPLAYABLE 10BPC SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ON   (= 0x00000001)
OFF  (= 0x00000000)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL FORCE DISPLAYABLE 12BPC SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ON   (= 0x00000001)
OFF  (= 0x00000000)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL FORCE EXIT PROCESS DETACH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Affects driver teardown behavior when (lpReserved != NULL), which
indicates that one or more thread may have been terminated prior to
PROCESS DETACH. In this case attempting to clean up has undefined
results, including the possibility of a hang or a crash.

DISABLED  (= 0x00000000)  // Don't attempt process teardown if lpReserved != NULL, unless CycleStats is enabled
ENABLED   (= 0x00000001)  // Attempt process teardown
NEVER     (= 0x00000002)  // Never call teardown process

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL FORCE FLUSH TEXTURES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Force flushing textures after cooking them.

DISABLE  (= 0x00000000)  // Do not force texture flushes.
ENABLE   (= 0x00000001)  // Force texture flushes.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL FORCE GAMMA DOWNSAMPLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

HARDWARE        (= 0x00000000)
LOW QUALITY     (= 0x00000001)
HIGH QUALITY    (= 0x00000002)
DISABLED        (= 0x00000003)
ENABLED         (= 0x00000002)
APP CONTROLLED  (= 0x00000004)

Default values for this setting:
DEFAULT:    HARDWARE

------------------------------------------------------------
OGL FORCE LOW LATENCY 3D
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Forces 3D contexts to use the low latency node on wddm

ENABLED   (= 0x00000001)  // Enable Setting
DISABLED  (= 0x00000000)  // Disable Setting

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL FORCE MEM SPACE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
OGL FORCE NX6PLUSMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

USE APP DETECT  (= 0x00000000)  // Use App Detection to decide
FORCE ON        (= 0x00000001)  // Force NX6 Plus Mode regardless of app.
FORCE OFF       (= 0x00000002)  // Force NX6 Plus Mode off regardless of app.

Default values for this setting:
DEFAULT:    USE APP DETECT

------------------------------------------------------------
OGL FORCE STEREO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

OFF  (= 0x00000000)  // Force Stereo Flipping Off
ON   (= 0x00000001)  // Force Stereo Flipping On

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL FORCE SYSMEM BUFFERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

COLOR       (= 0x00000001)
DEPTH       (= 0x00000002)
USERD       (= 0x00000004)  // Force the USERD allocation to use sysmem.
SEMAPHORES  (= 0x00000008)  // Force 'vidmem' semaphores to use sysmem.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL FRAGMENT PROGRAM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DUMP                  (= 0x00000001)  // Fragment program dump
NO OPTIMIZE           (= 0x00000002)  // Don't optimize fragment programs
NO HANDCODE           (= 0x00000004)  // No handcoded fragment programs
ALLOW OPTX            (= 0x00000008)  // Allow optx=x, expose raw hw interface
ALWAYS USE OPTIMIZED  (= 0x00000020)  // Always use optimized fragment program
USE NV50 PARSER       (= 0x00000040)  // Use new NV50 program parser (all program types)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL FRUSTUM CLIP CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

HW DEFAULT          (= 0x00000000)  // Use architecture-specific default
DISABLE             (= 0x00000001)  // Disable all frustum clipping.
XY TIGHT            (= 0x00000002)  // Clip tightly to X/Y clip planes (no guardband).
Z TIGHT             (= 0x00000004)  // Clip tightly to Z clip planes.
POINTS LINES TIGHT  (= 0x00000008)  // Clip points/lines tightly to X/Y (no guardband).
XY GUARDBAND        (= 0x00000010)  // Clip to the X/Y clip planes (guardband or tight).
Z GUARDBAND         (= 0x00000020)  // Clip to the Z clip plane (guardband or tight).
FORCE DEPTH CLAMP   (= 0x00000040)  // Forcibly enable the DEPTH CLAMP enable (don't clip to near/far)

Default values for this setting:
DEFAULT:    0x00000000
	HW DEFAULT                              

------------------------------------------------------------
OGL GLOBAL LOAD VIA TEXTURE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set this to 0 in order disable use of global load via texture

ENABLE   (= 0x00000001)  // Enable use of global load via texture on hardware that supports the feature.
DISABLE  (= 0x00000000)  // Disable use of global load via texture.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL GLRANDOM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ENABLE             (= 0x00000001)  // Enable
DISABLE BEEP       (= 0x00000002)  // Disable beep
DISABLE SCREENCAP  (= 0x00000004)  // Disable screencap
QUIT APP           (= 0x00000008)  // Quit app on failure

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL GLSL FAST MATH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allow looser floating point behavior for GLSL compiles

DISABLE  (= 0x00000000)  // Disable GLSL fast math
ENABLE   (= 0x00000001)  // Enable GLSL fast math

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL GLSL FP16 SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control FP16 math support in GLSL compiles, where 'lowp' or 'mediump' qualifiers don't require full FP32.

DISABLE       (= 0x00000000)  // Disable FP16 support in GLSL.
ENABLE        (= 0x00000001)  // Enable FP16 support in GLSL.
FORCE ENABLE  (= 0x00000002)  // Enable FP16 support in GLSL, even if FP16 isn't supported on the underlying hardware.

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
OGL GLSL LINK MULTITHREAD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

GLSL link multithread force on/force off/force defer.  "On" means use multiple link threads.  "Off" means complete linking immediately when requested.  "Defer" means only complete the link when link results are required.  "Defer" is useful for debugging validation issues.

DISABLE    (= 0x00000000)  // Disable link multithreading
ENABLE     (= 0x00000001)  // Enable link multithreading
DEFER      (= 0x00000002)  // Defer, but don't multithread
ALLOW API  (= 0x00000003)  // Allow API multithreading, but not default

Default values for this setting:
DEFAULT:    ALLOW API

------------------------------------------------------------
OGL GLSL LINK THREAD APP RESERVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Multithread linking. Reserve N CPU cores for the application, rather than allocating a link thread for all cores. 0 == auto.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL GLSL LINK THREAD MAX
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limits the number of threads created for multithread linking to N.  0 == auto (all physical cores).


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL GLSL OPTIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

TESLA ENABLE PABO2  (= 0x00000001)  // Use NV parameter buffer object2 for code generation on Tesla

Default values for this setting:
DEFAULT:    0x00000001
	TESLA ENABLE PABO2                      

------------------------------------------------------------
OGL GLSL USE COLLAPSED ARRAYS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Use collapsed arrays when passing bindings from the shader compiler to the driver in order to improve perf & reduce memory usage.

DISABLE  (= 0x00000000)  // Disable Setting. Arrays are expanded before being passed to the driver
ENABLE   (= 0x00000001)  // Enable Setting. Use collapsed arrays between the shader compiler & drver.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL GPFIFO LB OVERFLOW BUG WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control of the WAR for HW bug 1665103 affecting certain Kepler and Maxwell chips

DISABLE          (= 0x00000000)  // Disable the WAR
ENABLE PB ALIGN  (= 0x00000001)  // Enable the push buffer alignment to 128 bytes when possible
ENABLE GP PAD    (= 0x00000002)  // Add an extra nop gpfifo entry after a certain entry that might cause the problem
ENABLE           (= 0x00000003)  // Enable the alignment when possible, and pad the gpfifo to make sure no trouble maker is allowed to occur

Default values for this setting:
DEFAULT:    0x00000003
	ENABLE PB ALIGN                         
	ENABLE GP PAD                           
	ENABLE                                  

------------------------------------------------------------
OGL GPFIFO SIZE ENTRIES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control GPFIFO sizing (in number of entries). The actual GPFIFO size will be the smallest power of 2 greater than or equal to the requested size.

UNINITIALIZED  (= 0x00000000)  // Default value if no specific size requested. GPFIFO size will default to values set by driver.

Default values for this setting:
DEFAULT:    UNINITIALIZED

------------------------------------------------------------
OGL GPU AFFINITY AWARE LOCKING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enables GPU affinity aware device locking to improve performance

DISABLE  (= 0x00000000)
ENABLE   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL GPU LIMITED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Force the indicators in the driver for GPU and CPU limited to drive our heuristics

NONE                   (= 0x00000000)  // Do not force anything
FORCE GPU LIMITED OFF  (= 0x00000001)  // Never let the driver think it is GPU limited
FORCE GPU LIMITED ON   (= 0x00000002)  // Force the driver to think it is GPU limited
FORCE CPU LIMITED OFF  (= 0x00000004)  // Never let the driver think it is GPU limited
FORCE CPU LIMITED ON   (= 0x00000008)  // Force the driver to think it is GPU limited
FORCE ALL OFF          (= 0x00000005)  // Force all off
FORCE ALL ON           (= 0x0000000a)  // Force all on

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
OGL GRAPHICS PREEMPTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether GL is allowed to use graphics preemption

DISABLE FOR ALL CONTEXTS               (= 0x00000000)  // Disable for all contexts
ENABLE FOR LOW PRIORITY CONTEXTS       (= 0x00000001)  // Enable for Low priority contexts
ENABLE FOR MEDIUM PRIORITY CONTEXTS    (= 0x00000002)  // Enable for Medium priority contexts
ENABLE FOR HIGH PRIORITY CONTEXTS      (= 0x00000004)  // Enable for High priority contexts
ENABLE FOR REALTIME PRIORITY CONTEXTS  (= 0x00000008)  // Enable for Realtime priority contexts
ENABLE FOR ALL CONTEXTS                (= 0x0000000f)  // Enable for all contexts

Default values for this setting:
DEFAULT:    ENABLE FOR LOW PRIORITY CONTEXTS

------------------------------------------------------------
OGL GROWS DOWN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

GROWS UP    (= 0x00000000)
GROWS DOWN  (= 0x00000001)

Default values for this setting:
DEFAULT:    GROWS UP

------------------------------------------------------------
OGL GSYNC TEAR MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This is a debugging regkey to switch among three vsync behavior modes under Gsync setup

DISABLED               (= 0x00000000)  // Cap G-Sync FPS at max refresh. Prevent tearing.
APP CONTROL TEAR FLAG  (= 0x00000001)  // Allow G-Sync FPS > max refresh with tearing when swapInterval = 0 (managed by OGL)
APP CONTROL            (= 0x00000002)  // Allow G-Sync FPS > max refresh with tearing when swapInterval = 0 (managed by DD)

Default values for this setting:
DEFAULT:    APP CONTROL TEAR FLAG

------------------------------------------------------------
OGL GS LINE OPTIMIZATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enables or disables the optimization that uses a Geometry Shader in order to cull early smooth AA lines. Only works on cards with more than 1 GPC.

ENABLE   (= 0x00000001)  // Enable the Geometry Shader optimization.
DISABLE  (= 0x00000000)  // Disable the Geometry Shader optimization.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL HDC AFFINITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When ON, the default render GPU for same-quadro HW configs is determined by position of the window associated with the HDC passed to SetPixelFormat. When OFF, or when not a same-quadro HW config, the default is determined by OGL IMPLICIT GPU AFFINITY. The use of gpu affinity always overrides the default. This feature is exposed on vista and newer.

OFF       (= 0x00000000)  // Use a heuristic to select the default render GPU.
ON        (= 0x00000001)  // Use HDC-based selection of the default render GPU on supported HW configs.
FORCE ON  (= 0x00000002)  // Use HDC-based selection of the default render GPU for any HW config.

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
OGL HIDE EXTENSIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether to hide extensions given by OGL HIDE EXTENSIONS STRING.

DISABLE  (= 0x00000000)  // Disable hiding of extensions.
ENABLE   (= 0x00000001)  // Enable hiding of extensions.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL HIDE EXTENSIONS STRING
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Hide OpenGL extensions specified by this string. Multiple extensions are space-separated.


------------------------------------------------------------
OGL HOSTCOPY CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

TEXTURE LAZY MAP                  (= 0x00000001)
TEXTURE LAZY ALLOC                (= 0x00000002)
BUFFEROBJECT LAZY MAP             (= 0x00000004)
BUFFEROBJECT LAZY MAP AGGRESSIVE  (= 0x00000008)
TEXTURE LAZY MAP AGGRESSIVE       (= 0x00000010)

Default values for this setting:
DEFAULT:    0x00000005
	TEXTURE LAZY MAP                        
	BUFFEROBJECT LAZY MAP                   

------------------------------------------------------------
OGL HOST VISIBLE MEMORY CHUNK THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold (in MB) from which host visible memory will be allocated in chunks (0 for disabling feature)


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
OGL IGNORE INVALIDATE FRAMEBUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Ignore glInvalidate*Framebuffer calls. Useful for e.g. Unity which invalidates framebuffers without clearing them and ends up with garbage data used for rendering.

DO NOT IGNORE  (= 0x00000000)  // Allow glInvalidate*Framebuffer calls
IGNORE         (= 0x00000001)  // Ignore glInvalidate*Framebuffer calls

Default values for this setting:
DEFAULT:    DO NOT IGNORE

------------------------------------------------------------
OGL IGNORE WINDOW DESTROY DURING DETACH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Ignore window destroy while threads are being detached. Resolves potential deadlocks.

DISABLED  (= 0x00000000)  // Normal processing during thread detach
THREAD    (= 0x00000001)  // Ignore destroy during thread detach
PROCESS   (= 0x00000002)  // Ingore destroy during process detach

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL IMPLICIT CONCURRENT CE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allow async CE to execute earlier based on tags

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL IMPLICIT GPU AFFINITY
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls selection of the default render GPU. Autoselect means the driver chooses based on a heuristic that favors the biggest quadro. This string is set by the control panel and not meant to be set directly by the user. The use of gpu affinity always overrides the default render GPU.

AUTOSELECT  (= autoselect)

Default values for this setting:
???Tautoselect:    autoselect

------------------------------------------------------------
OGL INVALIDATE CONTEXT ON OOM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether a GL OUT OF MEMORY error will invalidate use of the corresponding OpenGL context.

DISABLE  (= 0x00000000)  // Don't invalidate the context after GL OUT OF MEMORY.
ENABLE   (= 0x00000001)  // Do invalidate the context after GL OUT OF MEMORY.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL IN BAND UPDATE BUG 2548370 WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether Bug 2548370 workaround is enabled

HW DEFAULT                (= 0x00000000)  // Hardware default
DISABLED                  (= 0x00000001)  // Disabled
ENABLED                   (= 0x00000002)  // Enabled
ENABLED TURING AND NEWER  (= 0x00000003)  // Enabled on Turing+ only

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL KILLED LOAD IS NOP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NOP load instructions for killed threads.

ENABLE   (= 0x00000001)  // NOP load instructions for killed threads
DISABLE  (= 0x00000000)  // Load instructions are executed on killed threads

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL LARGE RECTANGLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE  (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL LDC WITH LDG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Replace LDC with LDG in some cases for bug 200364993

NEVER       (= 0x00000000)  // Never replace constant loads with LDG for the workaround
ALWAYS      (= 0x00000001)  // Always replace constant buffer loads with LDG
INDEXED     (= 0x00000002)  // Replace indexed constant loads with LDG
DYNAMIC     (= 0x00000003)  // Use the default driver heuristic to select modes
HW DEFAULT  (= 0x00000004)  // Arch-specific default behavior

Default values for this setting:
DEFAULT:    HW DEFAULT

------------------------------------------------------------
OGL LDDM ADDITIONAL ALLOCATION TRACKING SPACE CHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enables more space checking in win 7 allocation tracking, future default. Resolves OGL error code 8

DISABLED  (= 0x00000000)  // LDDM space checks remain as they have been
ENABLED   (= 0x00000001)  // LDDM space checks take both AL and PLL into account

Default values for this setting:
DEFAULT:    ENABLED
DEFAULT GL:    ENABLED

------------------------------------------------------------
OGL LDDM ASYNC BLIT STATE LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold of allocated state handles where we allow async blit to be initialized.

NO LIMIT  (= 0xffffffff)
TWENTY    (= 0x00000014)  // Allow async blit when there are <= 20 state handles.

Default values for this setting:
DEFAULT:    TWENTY

------------------------------------------------------------
OGL LDDM CROSS ADAPTER VSYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

If the render GPU lacks a display, vsync with presenting GPU

ENABLE   (= 0x00000001)  // Allow cross adapter vsync.
DISABLE  (= 0x00000000)  // Disallow cross adapter vsync.

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
OGL LDDM MT VSYNC WAIT METHOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The vsync wait method for multi-threaded applications (wddm only).

DXGKRNL WAIT                  (= 0x00000000)  // Use Dxgkrnl to block on the vsync event.
SPIN WAIT                     (= 0x00000001)  // Spin wait on the vsync by polling the scan line.
DRIVER DECIDE                 (= 0x00000002)  // The driver chooses the best wait method.
KMD EVENT                     (= 0x00000003)  // Use KMD vsync event to wait for vsync.
DWM KMD EVENT SPIN WAIT ELSE  (= 0x00000004)  // Use KMD vsync event if dwm is enabled else spin wait.

Default values for this setting:
DEFAULT:    DRIVER DECIDE

------------------------------------------------------------
OGL LDDM PRESENT BLIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables present blit optimizations on Vista/Win7.

USE NO OPT         (= 0x00000000)  // Don't use any present blit optimization.
USE GPU EVENT      (= 0x00000001)  // Wait for vsync using GPU event instead of Dxgkrnl event.
USE ADAPTIVE WAIT  (= 0x00000002)  // Use adaptive wait for vsync on top of GPU event.
USE ALL OPT        (= 0xffffffff)  // Use all present blit optimizations.

Default values for this setting:
DEFAULT:    0xFFFFFFFF
	USE GPU EVENT                           
	USE ADAPTIVE WAIT                       
	USE ALL OPT                             

------------------------------------------------------------
OGL LDDM SLI PRESENT SYNC WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

WAR's for synchronizing render and present on LDDM for SLI. Not used for WDDM2.

NONE                   (= 0x00000000)  // No WAR, all allocations are writable (poor perf possible).
DUMMY UNICAST RENDER   (= 0x00000001)  // Submit unicast no-op renders in SwapFlip for bug 922865.
READONLY SCANOUT SURF  (= 0x00000002)  // Set scanout allocations read-only for bug 416652 (corruption possible). Forced on Vista.

Default values for this setting:
DEFAULT:    0x00000003
	DUMMY UNICAST RENDER                    
	READONLY SCANOUT SURF                   

------------------------------------------------------------
OGL LDDM SLI SHARED LINKINSTANCED LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limit in MB <= which we allow shared render targets to use the link-instanced SLI allocation scheme.

NO LIMIT  (= 0xffffffff)

Default values for this setting:
DEFAULT:    NO LIMIT

------------------------------------------------------------
OGL LEGACY TIMESTAMP OFFSET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Restore legacy timestamps where values are relative to base time rather than absolute

DISABLE  (= 0x00000000)  // No offset is added to GL TIMESTAMPS
ENABLE   (= 0x00000001)  // Add offset to GL TIMESTAMPS return value for legacy applications

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL LINUX DEVSHM PAGEABLE ALLOCATIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable use of /dev/shm-based pageable allocations on Linux, saving VA space.

DISABLE ON 64BIT  (= 0x00000000)  // Default policy: enabled for 32bit, disabled for 64bit
FORCE ON          (= 0x00000001)  // Use a mmap()'d file in /dev/shm
DISABLE           (= 0x00000002)  // Use malloc() all the time

Default values for this setting:
DEFAULT:    DISABLE ON 64BIT

------------------------------------------------------------
OGL LOAD MONITOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable/Disable Load Monitor for OGL/Vulkan

DISABLE  (= 0x00000000)  // Disable Load Monitor
ENABLE   (= 0x00000001)  // Enable Load Monitor

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL LOAD MONITOR BUFFER LENGTH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify number of entries to keep track of in ringbuffer for load monitor


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
OGL LOAD MONITOR FRAMES SAVED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify number of frames to keep track of in ringbuffer for load monitor


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
OGL LOAD MONITOR OUTPUT LOGGING FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Specify flags for outputting load monitor frame data statistics to file

DISABLED        (= 0x00000000)
FRAME NUMBER    (= 0x00000001)
FRAME TIME      (= 0x00000002)
PACKET OVERLAP  (= 0x00000004)
GPU TIME        (= 0x00000008)
EMPTY TIME      (= 0x00000010)
FRAME OVERLAP   (= 0x00000020)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
OGL LOCK CONTENTION BIAS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000014

------------------------------------------------------------
OGL LOCK MAX COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x0000FFFF

------------------------------------------------------------
OGL LOCK MIN COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
OGL LOCK ON LINKPROGRAM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Whether to hold a lock around LinkProgram

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL LOCK USE SYSTEM MUTEX
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether nvLockTestAndTestAndSet uses the system's implementation of a lock (e.g. pthreads or SRW lock)

DISABLE         (= 0x00000000)  // Use hand-written adaptive spin lock
ENABLE          (= 0x00000001)  // Use system lock
DRIVER DEFAULT  (= 0x00000002)  // Chosen based on a heuristic

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL LOG TO EVENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE   (= 0x00000001)
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL LUID ADAPTER SELECTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When enabled, allow override of the default rendering GPU via environment
variable.  Note that vsync is not guaranteed with this, especially with GPUs
lacking a display.

The environment variable must be set as follows:

        GL NV RENDER GPU LUID=[LowPart] [HighPart]

Given the LUID of the desired adapter to use for OpenGL rendering, LowPart is an
unsigned 32-bit integer matching LUID.LowPart and HighPart is a signed 32-bit
integer matching LUID.HighPart.  The numbers are separated by a single space.

The syntax expected for each number matches that accepted by strtol with base
equal to zero:

    [{+|-}][0[{x|X}]][digits]

The sign is optional.  Note that the number is assumed decimal unless one of the
following prefixes are used:
1. a 0x or 0X prefix indicates a hexadecimal number.
2. a 0-prefix indicates an octal number (so don't zero pad if using decimal).

DISABLE  (= 0x00000000)  // Ignore environment variable
ENABLE   (= 0x00000001)  // Respect environment variable

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL MACHINE CACHE LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set an upper limit on OpenGL microcode cache allocations, in 4 KiB increments.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL MALLOC BREAK ID
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

In a debug driver, this setting can be used to trigger a breakpoint on the Nth memory allocation performed by the driver.

DISABLED  (= 0x00000000)  // Disable breakpoints on memory allocations.

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL MAX ASTC HDR BLOCK SCAN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of blocks to scan in ASTC HDR block detection. If set there is (small) risk of missing HDR data which let to incorrect texture data.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
OGL MAX FRAMES ALLOWED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
OGL MAX INSTRUCTION COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED     (= 0x00000000)  // Disabled
UPPER BOUND  (= 0x00010000)  // Upper limit for the max

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL MAX TILEPOOL SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max tile pool size for tracked sparse resources (in MB)

WDDM1 DEFAULT   (= 0x00000400)  // 1GB by default for WDDM1 (avoiding large AL/PL)
DRIVER DEFAULT  (= 0x00000020)  // 32MB default for other OS

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL MAX UNIFORM VECTORS CP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of max uniform vectors advertised for compute shaders.

MAX             (= 0x00000ff0)
DRIVER DEFAULT  (= 0x00000000)

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL MAX UNIFORM VECTORS FP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of max uniform vectors advertised for fragment shaders.

MAX             (= 0x00000ff0)
DRIVER DEFAULT  (= 0x00000000)

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL MAX UNIFORM VECTORS GP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of max uniform vectors advertised for geometry shaders.

MAX             (= 0x00000ff0)
DRIVER DEFAULT  (= 0x00000000)

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL MAX UNIFORM VECTORS MP
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL ARCH TURING)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of max uniform vectors advertised for mesh shaders.

MAX             (= 0x00000ff0)
DRIVER DEFAULT  (= 0x00000000)

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL MAX UNIFORM VECTORS MTP
------------------------------------------------------------
This key is of type DWORD
This key is defined for NVCFG(GLOBAL ARCH TURING)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of max uniform vectors advertised for task shaders.

MAX             (= 0x00000ff0)
DRIVER DEFAULT  (= 0x00000000)

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL MAX UNIFORM VECTORS TCP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of max uniform vectors advertised for tess control shaders.

MAX             (= 0x00000ff0)
DRIVER DEFAULT  (= 0x00000000)

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL MAX UNIFORM VECTORS TEP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of max uniform vectors advertised for tess evaluation shaders.

MAX             (= 0x00000ff0)
DRIVER DEFAULT  (= 0x00000000)

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL MAX UNIFORM VECTORS VP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the number of max uniform vectors advertised for vertex shaders.

MAX             (= 0x00000ff0)
DRIVER DEFAULT  (= 0x00000000)

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL MAX VID SURF MEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
OGL MEMMGR CACHED ALLOC LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set an upper limit on cached DMA allocations, in 4 KiB increments. This limit will be capped to the driver's default limit.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL MEMMGR CACHED ALLOC LIMIT RATIO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set an upper limit on cached DMA allocations, expressed in percentage of the total amount of sysmem. This value will override OGL MEMMGR CACHED ALLOC LIMIT


------------------------------------------------------------
OGL MEMMGR SYS HEAP ALLOC LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set an upper limit on sysmem heap allocations, in 4 KiB increments. This limit will be capped to the driver's default limit.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL MEMMGR SYS HEAP ALLOC LIMIT RATIO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set an upper limit on sysmem heap allocations, expressed in percentage of the total amount of sysmem. This value will override OGL MEMMGR SYS HEAP ALLOC LIMIT


------------------------------------------------------------
OGL MEMMGR VID HEAP ALLOC LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set an upper limit on vidmem heap allocations, in 4 KiB increments. This limit will be capped to the driver's default limit.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL MEMORY CHUNK SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Chunk size for allocated memory (in MB)


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
OGL MEMORY CHUNK THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold (in MB) from which memory will be allocated in chunks (0 for disabling feature)


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
OGL MEMORY SPACE ENABLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

SYSHEAP            (= 0x00000001)
VID                (= 0x00000002)
CACHED PCI         (= 0x00000004)
CACHED PCINOSNOOP  (= 0x00000008)
MALLOC             (= 0x00000010)
ANY                (= 0x0000001f)
ANY VTX            (= 0x00000003)
ANY GPU            (= 0x0000000f)

------------------------------------------------------------
OGL ME OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

overide Media & Entertainment card setting (normally Quadro and Titan only)

NOP      (= 0x00000000)  // leave card identification alone
ENABLE   (= 0x00000001)  // force card to be M&E capable
DISABLE  (= 0x00000002)  // force card to not be M&E capable

Default values for this setting:
DEFAULT:    0x00000000
	NOP                                     

------------------------------------------------------------
OGL MGPU AFR GPFIFO DISABLE INVERT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE   (= 0x29475218)  // Kickoff GPFIFO subroutines on the opposite gpus
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL MGPU DMAPUSH BUFSIZE WORDS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00080000

------------------------------------------------------------
OGL MGPU FALL FORWARD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE  (= 0x29475218)  // Try to reenable SLI after each swapbuffers

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL MGPU NVIDIA DMAPUSH BUFSIZE WORDS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00180000

------------------------------------------------------------
OGL MGPU SFR BBOX
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE CULL  (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL MGPU SLIAA BLEND
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000001)
GAMMA    (= 0x00000002)

Default values for this setting:
DEFAULT:    GAMMA

------------------------------------------------------------
OGL MGPU XJITTER 0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
OGL MGPU XJITTER 1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
OGL MGPU YJITTER 0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
OGL MGPU YJITTER 1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
OGL MT FINISH AFTER SWAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether finish is called after swap if multiple threads render to the same drawable.

DISABLE  (= 0x00000000)  // Don't call finish after swap.
ENABLE   (= 0x00000001)  // Call finish after swap.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL MULTIGPU SUPPORT BITS
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

CONFORM                                (= 0x00000000000000FF)  // Safe default to avoid corruption.  Disable performance strategies.
SYNC VID2VID                           (= 0x0000000000000001)  // Vid2Vid copies (CopyTexImage) update remote gpus
TRACK DIRTY VIEWPORT                   (= 0x0000000000000004)  // fallback if usage of glViewport leaves undefined backbuffer content
TRACK DIRTY DEPTHSTENCIL               (= 0x0000000000000008)  // fallback if depth/stencilbuffer is not cleared after toggling gpu
SYNC SECONDARY FOR PRIMARY TRANSITION  (= 0x0000000000000010)  // sync primary image to secondary on AFR PRIMARY to AFR transition
RESTRICT COMPUTE TO AFR GPU            (= 0x0000000000000020)  // dispatch compute on AFR GPU only
SYNC DIRTY READ BUFFER AT ATTACH       (= 0x0000000000000040)  // Read FBOs are sync'd before use
FORCE DISABLE                          (= 0x0000000000001000)  // Disable AFR when running in OpenGL
SYNC ATTACHMENT PROPERTIES             (= 0x0000000000002000)  // Sync attachments on FBO bind if they match specific properties
PER GPU DIRTY TRACKING                 (= 0x0000000000004000)  // Separately track dirty regions for each GPU.  Can improve overlap between frames. Requires ASYNC P2P and viewport regions.
RESET IMAGE BINDING AT SWAP            (= 0x0000000000008000)  // WAR to clear image load/store binding at swap to prevent unnecessary blits
IGNORE OFFSCREEN DB AT FRAME BOUNDARY  (= 0x0000000000010000)  // WAR to keep offscreen drawable in AFR when SwapBuffers is called on the window drawable
RESTRICT COPY IMAGE TO AFR GPU         (= 0x0000000000020000)  // Perform CopyImageSubData on AFR GPU only
DISABLE PBO UNPACK SYNC                (= 0x0000000000040000)  // Prevent interlock during PBO unpack. Requires that the PBOs are buffered for all queued frames
SYNC VID2VID DELAY ONE FRAME           (= 0x0000000000080000)  // Defer P2P texture updates until a texture is used more than one frame later
DISABLE AFR FOR RT SIZE MASK           (= 0x0000000000F00000)  // Disable render target width and height smaller or equal to this value. For example, if value is 8 then a render target with both width and height <= 8, disable AFR for that target.
AFR EARLY PUSH 2X2                     (= 0x0000000002000000)  // Early push AFR render targets of size 2x2 or smaller.
AFR EARLY PUSH RT SIZE MASK            (= 0x000000000F000000)  // Early push small AFR render targets. If the render target width and height both smaller or equal to this value, do early push.
SYNC DIRTY VIEWPORT REGIONS COLOR      (= 0x0000000010000000)  // Track and sync dirty regions of FBO color attachments based on the viewport at color clear time.
SIGNAL USING AFR GPU                   (= 0x0000000020000000)  // Signal sync objects from the current AFR GPU. This requires that the GPU work being signaled was performed in the same frame as the FenceSync.
ASYNC P2P                              (= 0x0000000040000000)  // Use asyncronous P2P with fences when possible to keep textures up to date without SLI interlock.
SYNC DIRTY VIEWPORT REGIONS DEPTH      (= 0x0000000080000000)  // Track and sync dirty regions of FBO depth attachments based on the viewport at depth clear time.
UPDATE OWNERDP AT MAKE CURRENT         (= 0x0000000100000000)  // videoSplitOwnderDP updated at each make current

Default values for this setting:
DEFAULT:    CONFORM |
	SYNC VID2VID                             |
	TRACK DIRTY VIEWPORT                     |
	TRACK DIRTY DEPTHSTENCIL                 |
	SYNC SECONDARY FOR PRIMARY TRANSITION    |
	RESTRICT COMPUTE TO AFR GPU              |
	SYNC DIRTY READ BUFFER AT ATTACH        

------------------------------------------------------------
OGL MULTISAMPLE COMPATIBILITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED        (= 0x00000000)  // Multisample compatibility disabled
ENABLED         (= 0x00000001)  // Multisample compatibility enabled
USE HW DEFAULT  (= 0xffffffff)  // Select hardware default based on capabilities

Default values for this setting:
DEFAULT:    DISABLED
DEFAULT GL:    ENABLED

------------------------------------------------------------
OGL MULTI ADAPTER STEREO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

OFF  (= 0x00000000)  // Allow dualview stereo flipping on one adapter only
ON   (= 0x00000001)  // Allow dualview stereo flipping on multiple adapters

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL MULTI BUFFER RENDER OPTIMIZATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)  // disabled
NODELAY  (= 0x00000001)  // enabled with no delay

Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
OGL NAMED ATTRIB DIVISORS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether or not classic "named" vertex attributes are subject to instancing divisors.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL NON FRAGMENT TEXTURE LOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control the handling of texture LOD computations in non-fragment shaders.

ZERO DERIVATIVES  (= 0x00000000)  // Use hardware instructions using zero derivatives (LOD = -INF).
ZERO LOD          (= 0x00000001)  // Use software replacements that force the base LOD to zero.

Default values for this setting:
DEFAULT:    0x00000000
	ZERO DERIVATIVES                        

------------------------------------------------------------
OGL NOTIFICATION SEMAPHORE DEBUG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Settings for debugging notification semaphores

DISABLED                 (= 0x00000000)  // default
ENABLE TIMESTAMPS        (= 0x00000001)  // Enable semaphore timestamps
ALWAYS BREAK ON FAILURE  (= 0x00000002)  // Break into the debugger when there is a failure, even on release drivers.

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL NO SUPERSAMPLESCALE LINES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL NULL DRIVER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL NVPR ADVERTISE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Advertise GPU-accelerated path rendering (NV path rendering) OpenGL extension

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL NVPR BISTELLAR FLIPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable bistellar flips on Fermi

DISABLE  (= 0x00000000)  // Disable
ENABLE   (= 0x00000001)  // Enable

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL NVPR FONTCONFIG SHARED LIBRARY NAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the shared library name for FontConfig (otherwise libfontconfig-1.dll for Windows)


------------------------------------------------------------
OGL NVPR FONT HIDING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Bitfield to hide NV path rendering font targets

HIDE SYSTEM FONTS     (= 0x00000001)  // hide system fonts
HIDE FILE NAME FONTS  (= 0x00000002)  // hide file name fonts
USE FONTCONFIG        (= 0x00000004)  // use FontConfig+FreeType2 (instead of Win32's CreateFontIndirectA) for system font name lookups

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL NVPR FORCE BOUNDING TRIANGLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Force use of bounding triangle

DISABLE  (= 0x00000000)  // Disable
ENABLE   (= 0x00000001)  // Enable

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL NVPR FREETYPE2 SHARED LIBRARY NAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the shared library name for FreeType2 (otherwise freetype6.dll for Windows)


------------------------------------------------------------
OGL NVPR OPTIMIZE FERMI
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable optimized NVpr rendering path on Fermi

DISABLE  (= 0x00000000)  // Disable
ENABLE   (= 0x00000001)  // Enable

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL NX OPTIMIZER HACK
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This hack tells the driver to slow certain code down to convince NX to pick the right paths during its self test.


------------------------------------------------------------
OGL OCGCONTROL DIRECT NVIR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls OCG support for processing nvInst shaders.  Legacy support converts nvInst to a DAG; newer code converts it directly to NVIR (instruction list) form.

DRIVER DEFAULT  (= 0x00000000)  // Use driver default behavior.
FORCE ENABLE    (= 0x00000001)  // Enable nvInst->NVIR conversion, regardless of defaults
FORCE DISABLE   (= 0x00000002)  // Disable nvInst->NVIR conversion, regardless of defaults

Default values for this setting:
DEFAULT:    DRIVER DEFAULT

------------------------------------------------------------
OGL OCG DISABLE LOW LOD OPTIMIZATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls if LowLODOptimization is enabled or disabled.

OFF  (= 0x00000000)  // Don't disable LowLODOptimization
ON   (= 0x00000001)  // Disable LowLODOptimization

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
OGL OCG FP16 OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Override the OCG FP16 generation flag for testing on GPUs with slow FP16

ALLOW IF FAST            (= 0x00000000)  // Allow FP16 instructions if fast
ALLOW FOR USER PROGRAMS  (= 0x00000001)  // Allow FP16 for user programs
ALLOW FOR ALL PROGRAMS   (= 0x00000002)  // Allow FP16 for all compiles

Default values for this setting:
DEFAULT:    0x00000000
	ALLOW IF FAST                           

------------------------------------------------------------
OGL OPTIMUS TOGGLE DCE ON MODESWITCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Toggle DCE when on an Optimus capable system and DCE is enabled to WAR bug 858751.

ENABLED   (= 0x00000001)  // Toggle DCE on modeswitch
DISABLED  (= 0x00000000)  // Skip toggling DCE on modeswitch.

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL OPT COMPILE MAX COMPILES PER THREAD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limits the number of optional compiles that can be queued to the number of link threads multiplied by this value.


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
OGL OPT COMPILE MAX QUEUE BYTES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limits the total size of all of the programs in the optional compile queue.


Default values for this setting:
DEFAULT:    0x00100000

------------------------------------------------------------
OGL OPT COMPILE MULTITHREAD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Optional compile multithread force on/force off/force heuristic. Requires GLSL LINK MULTITHREAD to be enabled. "On" means always force multithread compile.  "Off" means complete compile immediately on main thread.  "Heuristic" means only do multithread compile based on number of threads and total size of pending compiles.

DISABLE    (= 0x00000000)  // Disable optional compile multithreading
ALWAYS     (= 0x00000001)  // Force optional compile  multithreading
HEURISTIC  (= 0x00000002)  // Use number of threads and total pending compiles to determine

Default values for this setting:
DEFAULT:    HEURISTIC

------------------------------------------------------------
OGL OVERLAY CI TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

RGB EMULATED CI  (= 0x00000000)  // ColorIndex Emulated with RGB
TRUE CI          (= 0x00000001)  // True ColorIndex

Default values for this setting:
DEFAULT:    RGB EMULATED CI

------------------------------------------------------------
OGL OVERLAY MERGEBLIT TIMER MS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

OFF  (= 0x00000000)  // Merge blit timer off

Default values for this setting:
DEFAULT:    0x00000028

------------------------------------------------------------
OGL OVERLAY PIXEL TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NONE         (= 0x00000000)  // No OpenGL overlay support
CI           (= 0x00000001)  // Export LPD TYPE COLORINDEX only
RGBA         (= 0x00000002)  // Export LPD TYPE RGBA only
CI AND RGBA  (= 0x00000003)  // Export both LPD TYPE COLORINDEX and LPD TYPE RGBA

Default values for this setting:
DEFAULT:    CI

------------------------------------------------------------
OGL OVERLAY SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

OFF       (= 0x00000000)  // Disable OpenGL overlay support
ON        (= 0x00000001)  // Use best possible overlay support
FORCE SW  (= 0x00000002)  // Use software emulation ( mergeblit ) overlays

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL OVERRIDE DEFAULT RENDERING GPU
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the default render GPU. The value is a zero-based index in the EnumDisplayDevices iteration space (same index as global {gls,win}device array). Affects both win7 and winxp-MMB.

OFF      (= 0xffffffff)  // do not override
PRIMARY  (= 0xfffffffe)  // use primary display GPU for rendering

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL OVERRIDE VSYNCMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Various policies for overriding the swap interval set in NVCPL or application

NO OVERRIDE   (= 0x00000000)  // Use standard vsync policy
VR FORCE OFF  (= 0x00000002)  // When interop-based VR is detected, force vsync off

Default values for this setting:
DEFAULT:    VR FORCE OFF

------------------------------------------------------------
OGL P2H2P BUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00040000

------------------------------------------------------------
OGL P2H2P NUM STAGES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
OGL PAGEABLE SIZE THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
OGL PERF STRAT ANISO LOD QUALITY2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control the lodAnisoQuality2 knob in the texture header, d escribed as 'enable more accurate aniso ratio to solve nv40 artifact. May reduce perf'.  Implemented only on Fermi and better.

LOW   (= 0x00000000)  // Disable more accurate aniso ratio computation.
HIGH  (= 0x00000001)  // Enable more accurate aniso ratio computation.

Default values for this setting:
DEFAULT:    0x00000001
	HIGH                                    

------------------------------------------------------------
OGL PERF STRAT CLAW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Provides fine tuning of CLAW

ENABLED                      (= 0x00000001)  // Enable CLAW regardless of any other settings
DLIST DISABLED               (= 0x00000002)  // Disable the caching of Display lists by CLAW
DISABLE OG CODE              (= 0x00000004)  // Disable the Online Generated code
IGNORE TRASH BY DIRTY        (= 0x00000008)  // Ignore Dirty Pages as trashing
FORCE BBOX ON                (= 0x00000010)  // Force Bounding Box optimization to be enabled
FORCE BBOX OFF               (= 0x00000020)  // Force Bounding Box optimization to be disabled
IGNORE TRASH                 (= 0x00000040)  // Ignore thrashing
FORCE DIRTY                  (= 0x00000080)  // Consider all memory pages always dirty
DISABLE BUSY WAIT            (= 0x00000100)
FORCE EXECUTE BLOCK          (= 0x00000200)
FORCE EXECUTE PIKACHOU       (= 0x00000400)
EMULATION                    (= 0x00000800)
DISABLE FILL TO LINE         (= 0x00001000)
DISABLE LINE ELIMINATION     (= 0x00002000)
DISABLE LINE SORT            (= 0x00004000)
PIXEL ACCURATE               (= 0x00008000)
DISABLE RING ALLOCATION      (= 0x00010000)
FORCE FRAME ON CLEAR         (= 0x00020000)
FORCE FRAME ON SWAP          (= 0x00040000)
FORCE CLEAN                  (= 0x00080000)
IGNORE MEMORY THRESHOLD      (= 0x00100000)
DISABLE GPU CPU BALANCE      (= 0x00200000)
IGNORE FRAME SIZE THRESHOLD  (= 0x00400000)
TRACE CSV STATS              (= 0x00800000)
THREADS DISABLED             (= 0x01000000)
THREADS ENABLED              (= 0x02000000)
QUEUE ENABLED                (= 0x04000000)
OPTIMIZE DISABLED            (= 0x08000000)
FORCE IGNORE FLUSH           (= 0x10000000)
DISABLED                     (= 0x80000000)
IGNORE REGKEY                (= 0xffffffff)
EMULATION EXPANDED           (= 0x002000c0)  // All the bits that should be used in emulation
PIXEL ACCURATE EXPANDED      (= 0x00006000)  // DISABLE LINE ELIMINATION|DISABLE LINE SORT

Default values for this setting:
DEFAULT:    0x00000001
	ENABLED                                 

------------------------------------------------------------
OGL PERF STRAT CLAW STATISTICS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

CLAW statistics bitfield

DEFAULT      (= 0x00000000)
NON DEFAULT  (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
OGL PERF STRAT COALESCE MAX SUPERSETS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000258

------------------------------------------------------------
OGL PERF STRAT COALESCE ONOFF THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000014

------------------------------------------------------------
OGL PERF STRAT COALESCE THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
OGL PERF STRAT COLOR COMPR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x76165656)  // Perf strat color compression disabled
ONLY RT   (= 0x46379547)  // Perf strat color compresson only render target
ENABLED   (= 0x00000000)  // Perf strat color compression enabled

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL PERF STRAT DEPTH COMPR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x76165656)  // Perf strat depth compression disabled
ENABLED   (= 0x00000000)  // Perf strat depth compression enabled

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL PERF STRAT DLIST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

COALESCE DISABLE     (= 0x00000010)
COALESCE ENABLE      (= 0x00000020)
CONCAT NOT COALESCE  (= 0x00000040)

Default values for this setting:
DEFAULT:    0x00000010
	COALESCE DISABLE                        

------------------------------------------------------------
OGL PERF STRAT FERMI EARLY Z HYST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

INSTANTANEOUS  (= 0xabcdef00)  // Instantaneous LateZ to EarlyZ
WAIT 16        (= 0xabcdef01)  // 16 pixels before immediate LateZ to EarlyZ
WAIT 32        (= 0xabcdef02)  // 32 pixels before immediate LateZ to EarlyZ
WAIT 64        (= 0xabcdef03)  // 64 pixels before immediate LateZ to EarlyZ
WAIT 128       (= 0xabcdef04)  // 128 pixels before immediate LateZ to EarlyZ
WAIT 256       (= 0xabcdef05)  // 256 pixels before immediate LateZ to EarlyZ
WAIT 512       (= 0xabcdef06)  // 512 pixels before immediate LateZ to EarlyZ
WAIT 1024      (= 0xabcdef07)  // 1024 pixels before immediate LateZ to EarlyZ
WAIT 2048      (= 0xabcdef08)  // 2048 pixels before immediate LateZ to EarlyZ
WAIT 4096      (= 0xabcdef09)  // 4096 pixels before immediate LateZ to EarlyZ
WAIT 8192      (= 0xabcdef0a)  // 8192 pixels before immediate LateZ to EarlyZ
WAIT 16384     (= 0xabcdef0b)  // 16384 pixels before immediate LateZ to EarlyZ
WAIT 32768     (= 0xabcdef0c)  // 32768 pixels before immediate LateZ to EarlyZ
WAIT 65536     (= 0xabcdef0d)  // 65536 pixels before immediate LateZ to EarlyZ
WAIT 131072    (= 0xabcdef0e)  // 131072 pixels before immediate LateZ to EarlyZ
WAIT 262144    (= 0xabcdef0f)  // 262144 pixels before immediate LateZ to EarlyZ
WAIT 524288    (= 0xabcdef10)  // 524288 pixels before immediate LateZ to EarlyZ
WAIT 1048576   (= 0xabcdef11)  // 1048576 pixels before immediate LateZ to EarlyZ
WAIT 2097152   (= 0xabcdef12)  // 2097152 pixels before immediate LateZ to EarlyZ
WAIT 4194304   (= 0xabcdef13)  // 4194304 pixels before immediate LateZ to EarlyZ
LATEZ ALWAYS   (= 0xabcdef1f)  // Always operate in LateZ mode

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL PERF STRAT FOG INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE   (= 0x65793215)
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL PERF STRAT FORCE API MANDATED EARLY Z
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE   (= 0x00000001)
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL PERF STRAT FORCE GS LINE CULL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE   (= 0x00000001)
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL PERF STRAT IEB BATCH UPPER THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
OGL PERF STRAT IMM MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

FORCE DIRECT  (= 0x09431392)  // Perf strat immediate mode force direct
FORCE BATCH   (= 0x29313490)  // Perf strat immediate mode force batch

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL PERF STRAT LDDM ALLOCATIONTABLE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
OGL PERF STRAT LDDM BUFFER SIZE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the behavior of how the

    OGL PERF STRAT LDDM CMDBUFFER SIZE
    OGL PERF STRAT LDDM PATCHLOCATIONTABLE SIZE
    OGL PERF STRAT LDDM ALLOCATIONTABLE SIZE

registry keys are used when creating a new context.

REG KEY          (= 0x00000000)  // size = OGL PERF STRAT LDDM XXX SIZE
MIN MIN REG KEY  (= 0x00000001)  // size =   GL MIN(NVL MIN INITIAL XXX SIZE, OGL PERF STRAT LDDM XXX SIZE)
MIN MAX REG KEY  (= 0x00000002)  // size =   GL MIN(NVL MAX INITIAL XXX SIZE, OGL PERF STRAT LDDM XXX SIZE)
MAX MIN REG KEY  (= 0x00000003)  // size =   GL MAX(NVL MIN INITIAL XXX SIZE, OGL PERF STRAT LDDM XXX SIZE)
MAX MAX REG KEY  (= 0x00000004)  // size =   GL MAX(NVL MAX INITIAL XXX SIZE, OGL PERF STRAT LDDM XXX SIZE)
FORCE MIN        (= 0x00000005)  // size = NVL MIN INITIAL XXX SIZE
FORCE MID        (= 0x00000006)  // size = NVL MID INITIAL XXX SIZE
FORCE MAX        (= 0x00000007)  // size = NVL MAX INITIAL XXX SIZE
FORCE ZERO       (= 0x00000008)  // size = 0

Default values for this setting:
DEFAULT:    MIN MIN REG KEY

------------------------------------------------------------
OGL PERF STRAT LDDM CMDBUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00020000

------------------------------------------------------------
OGL PERF STRAT LDDM PATCHLOCATIONTABLE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
OGL PERF STRAT LDDM USE SPLIT POINTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)  // UseSplitPoints disable
ENABLE   (= 0x00000001)  // UseSplitPoints enable

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL PERF STRAT LOD QUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ANISO LOW ISO LOW    (= 0x034e1413)
ANISO LOW ISO HIGH   (= 0xab0341cf)
ANISO HIGH ISO LOW   (= 0x914b83af)
ANISO HIGH ISO HIGH  (= 0x13478abe)
UNINITIALIZED        (= 0xffffffff)

Default values for this setting:
DEFAULT:    0xFFFFFFFF
	ANISO LOW ISO LOW                       
	ANISO LOW ISO HIGH                      
	ANISO HIGH ISO LOW                      
	ANISO HIGH ISO HIGH                     
	UNINITIALIZED                           

------------------------------------------------------------
OGL PERF STRAT MGPU SYNC VID2VID
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE   (= 0x00000000)
DISABLE  (= 0x92580967)

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL PERF STRAT TILEDCACHING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether the tiled caching perf strat is enabled or not

DISABLE  (= 0x00000000)  // Disabled
ENABLE   (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL PERF STRAT TILEDCACHING FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to control the behaviour of the OpenGL tiled caching perf strategy

FORCE Z DISCARD ON SWAP         (= 0x00000001)  // Force z-buffer discard at swap time.
TC FLUSH IN CLEAR WHEN ANY ZBC  (= 0x00000002)  // T$ flush when any buffer in a clear gets ZBC.
TC FLUSH IN CLEAR WHEN ALL ZBC  (= 0x00000004)  // T$ flush when all buffers in a clear get ZBC.
TC FLUSH IN CLEAR ALWAYS        (= 0x00000008)  // T$ flush in a clear always.
DISABLE TC FOR Z RENDERING      (= 0x00000010)  // Disable the T$ for depth only rendering.
FLUSH ON RESOLVES               (= 0x00000020)  // Flush the tiled cache when doing AA resolves.
GA102 3124365 WAR               (= 0x00000040)  // GA102 VK+GL WAR for 3124365 with TC always on and emulate off with max tile size when necessary; this bit is auto removed for none GA102

Default values for this setting:
DEFAULT:    0x00000054
	TC FLUSH IN CLEAR WHEN ALL ZBC          
	DISABLE TC FOR Z RENDERING              
	GA102 3124365 WAR                       

------------------------------------------------------------
OGL PERF STRAT TRI LIN OPT SLOPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

1              (= 0x00000000)
1 125          (= 0x00000001)
1 25           (= 0x00000002)
1 375          (= 0x00000003)
1 5            (= 0x00000004)
1 625          (= 0x00000005)
1 75           (= 0x00000006)
1 875          (= 0x00000007)
2              (= 0x00000008)
2 25           (= 0x00000009)
2 5            (= 0x0000000a)
2 75           (= 0x0000000b)
3              (= 0x0000000c)
3 25           (= 0x0000000d)
3 5            (= 0x0000000e)
3 75           (= 0x0000000f)
4              (= 0x00000010)
4 5            (= 0x00000011)
5              (= 0x00000012)
5 5            (= 0x00000013)
6              (= 0x00000014)
6 5            (= 0x00000015)
7              (= 0x00000016)
7 5            (= 0x00000017)
8              (= 0x00000018)
9              (= 0x00000019)
10             (= 0x0000001a)
11             (= 0x0000001b)
12             (= 0x0000001c)
13             (= 0x0000001d)
14             (= 0x0000001e)
15             (= 0x0000001f)
UNINITIALIZED  (= 0xffffffff)

Default values for this setting:
DEFAULT:    0x00000000
	1                                       

------------------------------------------------------------
OGL PERF STRAT USE VIRTUALPROTECT HEAP LOCK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)  // VirtualProtect WW disable heap lock
ENABLE   (= 0x00000001)  // VirtualProtect WW enable heap lock

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL PERF STRAT USE VIRTUALPROTECT WRITEWATCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE                    (= 0x00000000)  // VirtualProtect WW disable
ENABLE                     (= 0x00000001)  // VirtualProtect WW enable
ENABLE CLEAN               (= 0x00000003)  // VirtualProtect WW enable clean
ENABLE HOOKING             (= 0x00000005)  // VirtualProtect WW enable hook allocations - Quadro default for many years
ENABLE HOOKING DELAY MARK  (= 0x00000009)  // VirtualProtect WW hook but delay work at malloc until write protect calls

Default values for this setting:
DEFAULT:    ENABLE HOOKING DELAY MARK

------------------------------------------------------------
OGL PERF STRAT VA DC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL PERF STRAT ZCULL MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

FORCE DISABLE  (= 0x08c8b771)  // Perf strat zcull force disable
FORCE ENABLE   (= 0xd1329e85)  // Perf strat zcull force enable
FORCE Z ONLY   (= 0xd1329e86)  // Perf strat zcull force Z only
FORCE ZS       (= 0xd1329e87)  // Perf strat zcull force ZS
FORCE Z4X2     (= 0xd1329e88)  // Perf strat zcull force Z4X2
FORCE ZS NVPR  (= 0xd1329e89)  // Perf strat zcull force ZS with NVpr settings

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL PERSISTENT MAPPED BUFFERS PREFER GPU
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Use memory that favors GPU access for persistent mapped buffers even with READ BIT set

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL PFD ADJUST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

SUPPORT GDI                 (= 0x00000001)
EXPORT COMPOSITION          (= 0x00000002)
EXPORT COMPOSITION AND GDI  (= 0x00000004)
USE HW DEFAULT              (= 0xf0000000)  // Select hardware default based on capabilities

Default values for this setting:
DEFAULT:    0x00000002
	EXPORT COMPOSITION                      
DEFAULT GL:    0x00000003
	SUPPORT GDI                             
	EXPORT COMPOSITION                      

------------------------------------------------------------
OGL PIXBAR MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls the heuristic for using pixbar in shaders

DEFAULT       (= 0x00000000)  // Driver manages the pixbar mode.
PS FORCE OFF  (= 0x00000001)  // pixbar is always disabled in pixel shaders
PS FORCE ON   (= 0x00000002)  // pixbar is always enbled in pixel shaders

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
OGL PIXELS FROM MEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Toggle the usage of Pixels From Memory(PFM) for downsamples.

ENABLE   (= 0x00000001)  // Enable use of Pixels From Memory on hardware that supports the feature.
DISABLE  (= 0x00000000)  // Disable use of Pixels From Memory.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL POW USE ABS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Modify the pow instruction to take the absolute value of the base operand, so as to avoid undefined behavior on applications that pass a negative base by default.

DISABLE  (= 0x00000000)  // Use the signed value.
ENABLE   (= 0x00000001)  // Use the absolute value.

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL PRECOMPILE SASS ON LINKPROGRAM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allow the driver to precompile SASS through OCG at LinkProgram with a guess at the state vector

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL PREFER TEXTURE MEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NONE  (= 0x00000000)
SYS   (= 0x00000001)
VID   (= 0x00000002)

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
OGL PREFETCH AHEAD BYTES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL PRESENTBUFFERS CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls how DrvPresentBuffers is invoked. Bypass WARs an OS limitation wrt. multi-GPU hDC usage

USE OPENGL32          (= 0x00000000)  // Call pfnPresentBuffers, it calls DrvPresentBuffers
ALLOW BYPASS          (= 0x00000001)  // Allow bypassing opengl32, call DrvPresentBuffers directly
ALLOW WIN7BLIT        (= 0x00000002)  // Allow win7blit (starting with RS2)
ALLOW WIN7BLIT THUNK  (= 0x00000004)  // Allow win7blit thunk present, bypassing pfnPresentToRedirectionSurface

Default values for this setting:
DEFAULT:    0x00000007
	ALLOW BYPASS                            
	ALLOW WIN7BLIT                          
	ALLOW WIN7BLIT THUNK                    

------------------------------------------------------------
OGL PRESENT CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Can skip presents for debugging purposes (LDDM only)

NORMAL               (= 0x00000000)  // Do a normal present
SKIP                 (= 0x00000001)  // Skip present
GDI                  (= 0x00000002)  // Force present via GDI (for debug purposes only)
DISABLE FLIP TOKENS  (= 0x00000003)  // Do not send flip tokens (WDDM2 only)

Default values for this setting:
DEFAULT:    NORMAL

------------------------------------------------------------
OGL PRIMITIVE RESTART BREAKUP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Breakup drawElements with restart enabled into independent primitives in fall back cases

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL PROG REPLACE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DONT     (= 0x00000000)  // Don't
DUMP     (= 0x04574563)  // Dump
REPLACE  (= 0x06839369)  // Replace

Default values for this setting:
DEFAULT:    DONT

------------------------------------------------------------
OGL PSTATE BOOST AT CLEAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Notify RM at each clear that pstates should be pushed to full power

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED
DEFAULT GL:    ENABLED

------------------------------------------------------------
OGL PSTATE BOOST AT CLEAR BOOST TIME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

PSTATE boost at clear time in seconds


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
OGL PSTATE BOOST AT CLEAR MIN PERIOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Min period, in ms, between boost messages


------------------------------------------------------------
OGL PULL MEM BUFFER SHARED THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
OGL PULL MEM BUFFER SIZE INCREMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
OGL PULL MEM DEFAULT BUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
OGL PUSHBUFFER VERIFY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Compare incoming driver work to outgoing push buffer traffic

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL QMD AUTO INVALIDATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether we rely on HW QMD auto-invalidation

HW DEFAULT  (= 0x00000000)  // Hardware default
DISABLED    (= 0x00000001)  // Disabled
ENABLED     (= 0x00000002)  // Enabled

Default values for this setting:
DEFAULT:    HW DEFAULT

------------------------------------------------------------
OGL QUADRO WORKER THREAD CREATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set this to 0 in order to prevent the creation of a suspended worker thread on Quadro

ENABLE   (= 0x00000001)  // Enable worker thread creation
DISABLE  (= 0x00000000)  // Disable worker thread creation

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL QUALITY ENHANCEMENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

HQUAL, QUADRO DEFAULT  (= 0xfffffff6)  // Quality enhancements high quality
QUAL                   (= 0x00000000)  // Quality enhancements quality
PERF                   (= 0x0000000a)  // Quality enhancements performance
HPERF                  (= 0x00000014)  // Quality enhancements high performance

Default values for this setting:
DEFAULT:    QUAL

------------------------------------------------------------
OGL RECLAIM BUFFER SIZE THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the threshold on the buffer size for aggressive freeing.


------------------------------------------------------------
OGL RECOVER FROM CG OOM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether we enable code which allows the driver to recover from certain GLSL compiler failures without crashing. This code may affect driver stability.

DISABLE  (= 0x00000000)  // Disable compiler recovery code.
ENABLE   (= 0x00000001)  // Enable compiler recovery code.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL REDUCE DST DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ALLOW    (= 0x00000000)
DISABLE  (= 0x31415926)

Default values for this setting:
DEFAULT:    ALLOW

------------------------------------------------------------
OGL REMOTE DESKTOP SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control use of OpenGL in Remote Desktop

AUTOSELECT  (= 0x00000000)  // Pick FULL or PARTIAL based on the GPU's in the system
PARTIAL     (= 0x6e3d4f83)  // Only accelerate applications launched locally
FULL        (= 0x1284c7e3)  // Also accelerate applications launched from the remote session

Default values for this setting:
DEFAULT:    FULL

------------------------------------------------------------
OGL REMOTE MONITOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ENABLED           (= 0x00000001)
INFINITE TIMEOUT  (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL RENDERER STRING OVERRIDE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the GL RENDERER string reported by the driver.


------------------------------------------------------------
OGL RENDER QUALITY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

MMDITHER          (= 0x00000001)  // Render quality flags, mm dither
TEXBITS MASK      (= 0x0000000c)
TEXBITS AUTO      (= 0x00000000)
TEXBITS 16        (= 0x00000004)
TEXBITS 32        (= 0x00000008)
TEXBITS RESERVED  (= 0x0000000c)

Default values for this setting:
DEFAULT:    0x00000000
	TEXBITS AUTO                            
	TEXBITS AUTO                            

------------------------------------------------------------
OGL RENDER TIME INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This shows an indicator with the current render time

DISABLE  (= 0x00000000)  // disable render time indicator
ENABLE   (= 0x00000001)  // enable render time indicator

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL REREAD REGISTRY ON SWAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ON   (= 0x00000001)  // Reread registry on swap
OFF  (= 0x00000000)  // Don't reread registry on swap

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
OGL RINGBUFFER SETTINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls various ringbuffer allocation settings.

DISABLE RECREATE   (= 0x00000001)  // Disable the recreate (orphan/realloc) path
DISABLE HDR REUSE  (= 0x00000002)  // Disable reusing ringbuffer allocations on recreate
DISABLE ALL        (= 0x00000003)  // Disable all optimizations

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL ROBUSTNESS BUFFER WATCHDOG TIMEOUT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specfies the timeout value in ms once a buffer will get killed by the reset engine in KMD


Default values for this setting:
DEFAULT:    0x000005DC

------------------------------------------------------------
OGL RSQ ZERO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

HW DEFAULT             (= 0x00000000)
MAKE RSQ OF ZERO ZERO  (= 0x00000001)

Default values for this setting:
DEFAULT:    HW DEFAULT

------------------------------------------------------------
OGL RVCH MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls Volta resource view coherency hash (RVCH) and surface load/store caching.

RVCH INVALIDATE  (= 0x00000001)  // Enable RVCH hardware support.
SULD CACHE       (= 0x00000002)  // Allow harwdare L1 caching of data fetched by SULD.
SUST CACHE       (= 0x00000004)  // Allow hardware L1 caching of data written by SUST.

Default values for this setting:
DEFAULT:    0x00000006
	SULD CACHE                              
	SUST CACHE                              

------------------------------------------------------------
OGL S3TC QUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

STANDARD    (= 0x00000000)  // Default quality
FORCE DXT3  (= 0x00000001)  // Force DXT3
NO DITHER   (= 0x00000002)  // No dithering

Default values for this setting:
DEFAULT:    0x00000000
	STANDARD                                

------------------------------------------------------------
OGL SCG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags controlling SCG behaviour

DISABLE LIMITS IN ALL COMPUTE  (= 0x00000001)  // All SMs will be allocated to SCG when the FE determines there is no GFX work available.

Default values for this setting:
DEFAULT:    0x00000001
	DISABLE LIMITS IN ALL COMPUTE           

------------------------------------------------------------
OGL SCG MAX SM FRACTION
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limits hardware to use only a fraction of the total SM count for SCG (simultaneous compute and graphics).  A value of 0x100 means to use all SMs.

DEFAULT  (= 0x00000067)  // Default - 40% of SMs to be used for SCG
MIN      (= 0x00000000)  // Allow 0% of all SMs to be used for SCG (rounded up to 1 SM)
MAX      (= 0x00000100)  // Allow up to 100% of all SMs to be used for SCG.

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
OGL SCG MIN SM FRACTION
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets a floor on the fraction of SMs that will be allocated to SCG work. This only applies if there is actually SCG work, if there isn't these SMs will be released to do GFX work.

MIN  (= 0x00000000)  // No minimum guarantee for the number of SMs dedicated to SCG.
MAX  (= 0x00000100)  // All SMs will be allocated to SCG work when it is available.

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
OGL SCREEN INFORMATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Toggles our on screen display information, with VSYNC, FLIP and MMB.

DISABLE      (= 0x00000000)  // Disable the on-screen display information
ENABLE       (= 0x00000001)  // Enable the on-screen display information
ENABLE USER  (= 0x00000002)  // Display the user facing information only

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL SDSR STRAT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Provides fine tuning of SDSR

NO EXTRA OPTIMIZATION  (= 0x00000000)  // Disable all extra optimization
VBO DISABLED           (= 0x00000001)  // Override - disable caching of VBO by SDSR
OPT VARRAY REMAP       (= 0x00000002)  // remap vertex arrays to interleave data move to 16 bit indices
OPT PUSH INDEX LIST    (= 0x00000004)  // push index list instead of pull
OPT IMMEDIATE MODE     (= 0x00000008)  // translate immedate mode into vertex arrays
OPT CHECK INDEX REUSE  (= 0x00000010)  // build index list from referenced data, matched points get same index
OPT DISPLAY LIST       (= 0x00000020)  // optimize rendering of display lists
OPT ATTRIBUTES         (= 0x00000040)  // Remove redundant attributes from stream

Default values for this setting:
DEFAULT:    0x00000000
	NO EXTRA OPTIMIZATION                   

------------------------------------------------------------
OGL SECTOR PROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Used for testing to force different sector promotion methods.

DYNAMIC     (= 0x00000000)
ENABLED 2H  (= 0x00000001)
ENABLED 2V  (= 0x00000002)
ENABLED 4   (= 0x00000003)
DISABLED    (= 0x00000004)

Default values for this setting:
DEFAULT:    DYNAMIC

------------------------------------------------------------
OGL SET REDUCE COLOR THRESHOLDS FP16
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
OGL SET REDUCE COLOR THRESHOLDS SRGB8
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
OGL SET REDUCE COLOR THRESHOLDS UNORM10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
OGL SET REDUCE COLOR THRESHOLDS UNORM16
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
OGL SET REDUCE COLOR THRESHOLDS UNORM8
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
OGL SHADER CACHE INIT SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Initial number of entries for the shader cache.


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
OGL SHADER DISK CACHE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable caching shader microcode to disk

DISABLE      (= 0x00000000)  // Disable caching shader microcode to disk
ENABLE       (= 0x00000001)  // Enable caching shader microcode to disk
DEBUG CACHE  (= 0x00000002)  // Compare cached shader microcode against compiler
REBUILD      (= 0x00000004)  // Rebuild shader cache per run

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
OGL SHADER DISK CACHE LOCATION
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override location of the shader disk cache. This location must already exist, and should not include "/GLCache/" at the end


------------------------------------------------------------
OGL SHADER DISK CACHE READ ONLY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Access cached shader microcode read-only

DISABLE  (= 0x00000000)  // Access cached shader microcode read-write
ENABLE   (= 0x00000001)  // Access cached shader microcode read-only

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL SHADER DISK CACHE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the size of the shader disk cache

DEFAULT ANDROID  (= 0x00200000)  // 2MB by default for Android
DEFAULT LEGACY   (= 0x08000000)  // 128MB by default for legacy caches (unix only)

------------------------------------------------------------
OGL SHADER INSTRUCTION PREFETCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control the SM instruction prefetch. This is the in SM prefetch of upcoming instructions.

HW DEFAULT  (= 0x00000000)  // Hardware default
DISABLED    (= 0x00000001)  // Disable SM instruction prefetch
ENABLED     (= 0x00000002)  // Enable SM instruction prefetch

Default values for this setting:
DEFAULT:    HW DEFAULT

------------------------------------------------------------
OGL SHADER KILL BEHAVIOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control the behavior of fragment shader KIL instructions.

EXIT GLSL  (= 0x00000001)  // Terminate GLSL shaders executing KIL instructions (technically required by the spec).
EXIT ASM   (= 0x00000002)  // Terminate assembly shaders executing KIL instructions (not required).
EXIT NONE  (= 0x00000000)  // Don't terminate any shaders executing a KIL instruction.

Default values for this setting:
DEFAULT:    0x00000001
	EXIT GLSL                               

------------------------------------------------------------
OGL SHADER LOCAL MEMORY PER WARP LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies a maximum shader local memory allocation size, in bytes per warp.  The driver may throttle (running shaders on fewer warps for graphics or fewer TPCs for compute) when using shaders requiring more local memory.  The driver may also allocate more local memory than indicated by this cap if the size derived from the cap is insufficient to run the shader.  A value of zero indicates no cap on the local memory allocation size and thus no throttling.


Default values for this setting:
DEFAULT:    0x00002000

------------------------------------------------------------
OGL SHADER MEMORY ACCESS BOUNDS CHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control software bounds checking preventing faults on accesses to out-of-bounds or unpopulated buffer memory bindings.

DISABLE SSBO     (= 0x00000001)  // Disable bounds checks on SSBO accesses.
DISABLE ATOMCTR  (= 0x00000002)  // Disable bounds checks on atomic counter accesses.
DISABLE UBO      (= 0x00000004)  // Disable bounds checks on UBO accesses not using hardware constant buffer bindings.
DISABLE ALL      (= 0x00000007)  // Disable all software bounds checks.
CLAMP            (= 0x00000008)  // Clamp the coordinate to zero rather than branching over the access.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL SHADER OBJECTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

TRUE   (= 0x00000001)  // Enabled
FALSE  (= 0x00000000)  // Disabled

Default values for this setting:
DEFAULT:    TRUE
DEFAULT GL:    TRUE

------------------------------------------------------------
OGL SHADER PORTABILITY WARNINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control what level of strictness in grammar check during compile or link for cg compiler

FALSE         (= 0x00000000)  // Disabled
TRUE          (= 0x00000001)  // legacy enum matching strict level 1
STRICT LVL 1  (= 0x00000001)  // strict level 1 - default strict level
STRICT LVL 2  (= 0x00000002)  // strict level 2 - superset of strict level 1 with more strict grammar check (some reserved words is not permitted to use)

Default values for this setting:
DEFAULT:    TRUE

------------------------------------------------------------
OGL SHADER REPLACE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Dump and replace GLSL shaders during runtime.
  Create the directory 'ogldumps' off the root of the drive where your app will run.
  .org are dumped, .rep to replace.

DONT     (= 0x00000000)  // Don't
DUMP     (= 0x04574563)  // Dump
REPLACE  (= 0x06839369)  // Replace

Default values for this setting:
DEFAULT:    DONT

------------------------------------------------------------
OGL SHADER WARNINGS AS ERRORS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether portability warnings of shaders without '#version' directives are treated as errors.

TRUE                         (= 0x00000001)  // Enabled for all profiles and all shaders (old setting, used by NVEmulate).
FALSE                        (= 0x00000000)  // Default driver behavior (old setting, used by NVEmulate).
DISABLED ALWAYS              (= 0x0000000a)  // Disabled for all profiles and all shaders (only for debug and to avoid breaking shipping apps).
ENABLED FOR VERSION          (= 0x0000000b)  // Enabled for shaders with #version; disabled otherwise.
ENABLED FOR CORE OR VERSION  (= 0x0000000c)  // Enabled when using the core and ES profiles, or for shaders with #version; disabled otherwise.
ENABLED ALWAYS               (= 0x0000000d)  // Enabled for all profiles and all shaders.

Default values for this setting:
DEFAULT:    ENABLED FOR CORE OR VERSION

------------------------------------------------------------
OGL SHADER ZERO TIMES ANYTHING IS ZERO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether shader instructions multiplying zero times +/-INF or NaN produce 0 (enabled) or NaN (disabled, but correct per IEEE).

DISABLE  (= 0x00000000)  // Zero times +/-INF or NaN produces NaN.
ENABLE   (= 0x00000001)  // Zero times +/-INF or NaN produces 0.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL SHADOWPLAY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls OGL/VK Shadowplay behaviour

DISABLE IN DX PRESENT  (= 0x00000001)  // When doing DX present - disable OGL Shadowplay and let DX handle everything
USE 2D OVERLAY         (= 0x00000002)  // Use 2D to render overlays

Default values for this setting:
DEFAULT:    0x00000003
	DISABLE IN DX PRESENT                   
	USE 2D OVERLAY                          

------------------------------------------------------------
OGL SHARE GROUP LOCKING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enables context share group aware locking

DISABLE  (= 0x00000000)
ENABLE   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL SIMPLESHADER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Force simple shaders for performance analysis

NONE     (= 0x00000000)  // HW default
PS FFX   (= 0x00000001)  // replace all fixed function fragment shaders with a single instruction
VS FFX   (= 0x00000002)  // replace all fixed function vertex shaders to only output position
PS USER  (= 0x00000004)  // replace all asm/glsl fragment shaders with a single instruction
VS USER  (= 0x00000008)  // replace all asm/glsl vertex shaders to only output position

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
OGL SIMULATION FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

NONE                    (= 0x00000000)  // Run normal code paths
NO GLS CHANNEL          (= 0x00000001)  // Disable creation and use of the GLS channel
SW READPIXELS           (= 0x00000002)  // Use software ReadPixels path for speed
VIDMEM RINGBUFFER       (= 0x00000008)  // Put the ringbuffer in vidmem (useful with amodel 2D)
NO GLS CHANNEL KICKOFF  (= 0x00000010)  // Don't send methods down the GLS channel

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
OGL SINGLE BACKDEPTH BUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE         (= 0x00000000)  // Disable single back/depth buffer
ENABLE          (= 0x00000001)  // Enable single back/depth buffer
USE HW DEFAULT  (= 0xffffffff)  // Select hardware default based on capabilities

Default values for this setting:
DEFAULT:    DISABLE
DEFAULT GL:    ENABLE

------------------------------------------------------------
OGL SKIP TEXTURE HOST COPIES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE   (= 0x00000001)
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL SKIP TEXTURE HOST COPY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

NONE                 (= 0x00000000)  // Default, no flags.
KEEP BASE INITIALLY  (= 0x00000001)  // Keep the host copy initially during glTexImage calls.
NULL DATA TEXTURES   (= 0x00000002)  // Skip host copies for textures allocated with null data

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
OGL SLI ALLOW TWOD P2P
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control the method used for peer to peer memory copy in a SLI setup

DISABLED  (= 0x00000000)  // Do not use 2D TWOD for peer to peer copy 
ENABLED   (= 0x00000001)  // Try to use 2D TWOD for peer to peer copy if possible

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL SLI ASYNC P2P MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls mode used for Async P2P transfers

GRCE READ                   (= 0x00000000)  // Use GRCE reads for Async P2P transfers (safe default)
2D READ                     (= 0x00000001)  // Use 2D reads for Async P2P transfers (doesn't support NVLINK)
ASYNCBLIT READ              (= 0x00000002)  // Use ASYNCBLIT reads for Async P2P transfers
ASYNCBLIT WRITE             (= 0x00000003)  // Use ASYNCBLIT writes for Async P2P transfers
ASYNCBLIT SECONDARY READ    (= 0x00000004)  // Use ASYNCBLIT reads on secondary GPUs, GRCE on primary
ASYNCBLIT SECONDARY ALWAYS  (= 0x00000005)  // Always use secondary ASYNCBLIT read/write
ASYNCBLIT FASTEST           (= 0x00000006)  // Pick the fastest mode based on the SLI mode

Default values for this setting:
DEFAULT:    GRCE READ

------------------------------------------------------------
OGL SLI CFR DEBUG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE               (= 0x00000000)  // clear all debug bits
INDICATOR GPU RECT    (= 0x00000001)  // display render gpu and clip rect id in indicator
ENABLE ALL GPUS       (= 0x00000002)  // enable CFR on all GPU's, not just Turing and above
SKIP PRESENT RESOLVE  (= 0x00000004)  // skip secondary to primary blit on present
SKIP REMOTE MAPPING   (= 0x00000008)  // skip setting up remote GPU VA mapping
DISABLE FBO CFR       (= 0x00000010)  // disable CFR processing of FBO's
DISABLE FBO SYNC      (= 0x00000020)  // disable present resolve and fbo lock/unlock sync'ing
DISABLE PRESENT SYNC  (= 0x00000040)  // disable present resolve and fbo lock/unlock sync'ing

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL SLI CFR MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls CFR modes and options

DISABLE      (= 0x00000000)  // disable CFR
ENABLE       (= 0x00000001)  // enable CFR
CLASSIC SFR  (= 0x00000002)  // enable classic split line SFR

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL SLI DL CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Optimise SLI downloads using P2P transfers

ENABLE       (= 0x00000001)  // Bit set to use SLI DL optionations
PUSH         (= 0x00000002)  // USE PUSH P2P instead of pull
LIMIT DL     (= 0x00000004)  // limit download to one subdivce
LIMIT CE     (= 0x00000008)  // limit CE to use only one engine
METH CE      (= 0x00000010)  // use copy enigine
METH MASK    (= 0x000000f0)  // method mask
CHUNKS       (= 0x00020000)  // number of chunks to use
WATERFALL    (= 0x00000100)  // use waterfall copy
SKIP P2P     (= 0x00000200)  // skip P2P but use rest of algorithm
ONE 2 MANY   (= 0x00000400)  // copy from one GPU to many
CHUNKS MASK  (= 0x00ff0000)  // chunks mask
BASE         (= 0x00000111)  // Enable by default with CE

Default values for this setting:
DEFAULT:    0x00000111
	METH CE                                 
	ENABLE                                  
	WATERFALL                               

------------------------------------------------------------
OGL SLI GPU BOOST SYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether we are going to limit the GPU Boost in SLI mode.

DISABLE  (= 0x00000000)  // Don't limit GPU boost.
ENABLE   (= 0x00000001)  // Limit boost to the slowest GPU in the SLI group.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL SLI INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE             (= 0x00000000)  // disable sli indicator
ENABLE              (= 0x00000001)  // enable addition split line indicator info
SPLIT SLIAA         (= 0x00000002)  // only sliaa blend top half of window (vista p2h2p only)
AFR DISPLAY         (= 0x00000004)  // enable afr visible/render gpu/buffer printout
AA DISPLAY          (= 0x00000008)  // enable aa mode and aniso filter level printout
RESOLUTION DISPLAY  (= 0x00000010)  // enable window resolution printout
AFR HISTORY         (= 0x00000020)  // enable afrGpu history chart
P2P CONNECTIVITY    (= 0x00000040)  // enable P2P info
LOAD INDICATOR      (= 0x00010000)  // enable a scaling accurate load indicator for n-way AFR

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL SLI MOSAIC CLIP TO SUBDEV
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables SLI Mosaic clipping to each sub-device to improve performance

DISABLE      (= 0x00000000)  // Disable Setting
CLIP WINDOW  (= 0x00000001)  // Enable clipping of onscreen windows
CLIP FBO     (= 0x00000002)  // Enable clipping of desktop size FBOs

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL SLI MOSAIC CLIP TO SUBDEV H OVERLAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Horizontal Overlap when SLI Mosaic clipping to each sub-device is enabled


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL SLI MOSAIC CLIP TO SUBDEV V OVERLAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Vertical Overlap when SLI Mosaic clipping to each sub-device is enabled


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL SLI MULTICAST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls whether NV gpu multicast operation is supported or not

DISABLE        (= 0x00000000)  // disable multicast
ENABLE         (= 0x00000001)  // enable multicast (overrides afr/sfr)
FORCE DISABLE  (= 0x00000002)  // disable multicast (overrides environment variable)
ALLOW MOSAIC   (= 0x00000004)  // allow multicast + mosaic (requires enable bit or env var)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL SLI TEST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE                           (= 0x00000000)  // disable all debug support modes
DISABLE HW SLIAA                  (= 0x00000001)  // disable hw blend scanout, force p2p or p2h2p blend path
FORCE P2H2P                       (= 0x00000002)  // force p2h2p path (disable p2p, must also set disable hw sliaa)
FORCE BRIDGELESS WAFR             (= 0x00000004)  // force use of the WAFR path, even in fullscreen
DISABLE VIDEO BRIDGE              (= 0x00000008)  // disable video bridge even if it exists
P2H2P SYSMEM                      (= 0x00000010)  // if p2h2p then use sysmem staging buffer instead of vidmem
BRIDGE INCAPABLE                  (= 0x00000020)  // act as if the video bridge does not support the current mode (e.g. 4k)
FORCE DISABLE WDDM2 AFR           (= 0x00000040)  // disable AFR on WDDM2
FORCE DISABLE WDDM2 P2P           (= 0x00000080)  // disable P2P support on WDDM2
FORCE DISABLE WDDM2 MOSAIC        (= 0x00000100)  // disable SLI Mosaic and Surroud on WDDM2
FORCE DISABLE WDDM2 SLIAA         (= 0x00000200)  // disable SLIAA on WDDM2
FORCE DISABLE WDDM2 SURROUND AFR  (= 0x00000400)  // disable surround + AFR on WDDM2
FORCE DISABLE WDDM2 ASYNC BLIT    (= 0x00000800)  // disable async blit on WDDM2

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL SLI WINDOWED AFR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE         (= 0x00000000)
ENABLE          (= 0x00000001)
USE HW DEFAULT  (= 0xffffffff)  // Enable for GL, disable for GF.

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 
DEFAULT GL:    0x00000001
	ENABLE                                  

------------------------------------------------------------
OGL SMALL BLOCK HEAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable the small block heap allocator (system memory). Enabled by default on XP32, disabled on XP64.

ENABLE   (= 0x00000001)  // Enable the small block heap allocator
DISABLE  (= 0x00000000)  // Disable the small block heap allocator, use the CRT default heap

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL SMOOTH LINE AA MODE KEPLER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enables a new AA mode for smooth lines use in Kepler. This is a system global setting!

DEFAULT  (= 0x00000000)  // Use the driver's default (enabled in Kepler by the RM)
ENABLE   (= 0x00000001)  // In Kepler use the new AA mode for lines
DISABLE  (= 0x00000002)  // Do not use the new AA mode.

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
OGL SMOOTH LINE WIDTH MAXIMUM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set maximum smooth line width


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
OGL SM SCG ASYNC COMPUTE PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Default priority to set for async compute work in SM SCG mode. Lower values are higher priority.

LOWEST PRIORITY   (= 0x0000003f)
HIGHEST PRIORITY  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
OGL SM SCG COMPUTE SCHEDULING PARAMETERS 0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Init values for compute scheduling parameters used for SM-SCG. See glregistry.rky for packing info and value ranges.


Default values for this setting:
DEFAULT:    0x0680801F

------------------------------------------------------------
OGL SM SCG COMPUTE SCHEDULING PARAMETERS 1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Init values for compute scheduling parameters used for SM-SCG. See glregistry.rky for packing info and value ranges.


Default values for this setting:
DEFAULT:    0x01000000

------------------------------------------------------------
OGL SM SCG GRAPHICS PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Default priority to set for graphics work in SM SCG mode. Lower values are higher priority.

LOWEST PRIORITY   (= 0x0000003f)
HIGHEST PRIORITY  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
OGL SM SCG GRAPHICS SCHEDULING PARAMETERS 0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Init values for graphics scheduling parameters used for SM-SCG. See glregistry.rky for packing info and value ranges.


Default values for this setting:
DEFAULT:    0x7A7A7A10

------------------------------------------------------------
OGL SM SCG GRAPHICS SCHEDULING PARAMETERS 1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Init values for graphics scheduling parameters used for SM-SCG. See glregistry.rky for packing info and value ranges.


Default values for this setting:
DEFAULT:    0x10108080

------------------------------------------------------------
OGL SM SCG GRAPHICS SCHEDULING PARAMETERS 2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Init values for graphics scheduling parameters used for SM-SCG. See glregistry.rky for packing info and value ranges.


Default values for this setting:
DEFAULT:    0x7E010200

------------------------------------------------------------
OGL SM SCG SYNC COMPUTE PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Default priority to set for synchronous compute work in SM SCG mode. Lower values are higher priority.

LOWEST PRIORITY   (= 0x0000003f)
HIGHEST PRIORITY  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x0000001F

------------------------------------------------------------
OGL SPARSE TEXTURE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Sparse texture features

NONE                                     (= 0x00000000)  // Disable all features
RESERVED                                 (= 0x00000001)  // Reserved
DISABLE FULL ARRAY CUBE MIPMAPS          (= 0x00000002)  // Force disable SPARSE TEXTURE FULL ARRAY CUBE MIPMAPS ARB
ENABLE FULL ARRAY CUBE MIPMAPS           (= 0x00000004)  // Force enable SPARSE TEXTURE FULL ARRAY CUBE MIPMAPS ARB
MIPMAP TAIL SMALLER THAN TILE SIZE       (= 0x00000008)  // Start mipmap tail if level size smaller than tile size
MIPMAP TAIL FULL ARRAY                   (= 0x00000010)  // Commit/uncommit mipmap tail for all layers of an texture array
TILE SIZE 128KB SUPPORTED                (= 0x00000020)  // Support 128kb tile size on 128kb big pages
DISABLE COMPRESSION                      (= 0x00000040)  // Disable compression
SEPARATE TILE POOLS                      (= 0x00000080)  // Allocate separate tile pools for different formatIds and samples
COMPRESS NON RT                          (= 0x00000100)  // Allow compression on non-render targets
FORCE ASSIGN COMPTAGS DRIVER PROTECTION  (= 0x00000200)  // Force assignment of comptags in driver protection (wddm2)
BATCH CONSECUTIVE VA UPDATES             (= 0x00000400)  // Batch consecutive VA updates (wddm2)
TEGRA DEFAULT                            (= 0x000000a0)  // Default value on Tegra

Default values for this setting:
DEFAULT:    0x00000480
	SEPARATE TILE POOLS                     
	BATCH CONSECUTIVE VA UPDATES            

------------------------------------------------------------
OGL SPINLOOP TIME SECS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x0000000C

------------------------------------------------------------
OGL SPIRV REPLACE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Dump and replace SPIR-V shaders during runtime.
  Create the directory 'ogldumps' off the root of the drive where your app will run.
  .org are dumped, .rep to replace. Requires debug or develop driver

DONT          (= 0x00000000)  // Don't
DUMP          (= 0x04574563)  // Dump
REPLACE       (= 0x06839369)  // Replace
REPLACE BLOB  (= 0x0683936a)  // Replace Blob

Default values for this setting:
DEFAULT:    DONT

------------------------------------------------------------
OGL SRV APP FORCE OGL GEFORCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable GeForce optimizations on a Quadro

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL SRV APP FORCE SECONDARY ADAPTER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL SRV APP MEMORY MAP NOT REQUIRED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Disables the mapping of video memory to system memory, consumes too much in Vista

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL SRV APP NON FSAA SINGLEBUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Do not use FSAA modes for single buffered clients ( this helps a lot with Studio Tools 10 which draws menues with OpenGL )

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL SRV APP NOZ16STENCIL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Remove Z16 pixelformats with stencil

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL SRV APP NO PFD SUPPORT GDI
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Final override for exporting PFD SUPPORT GDI. If this bit is set, PFD SUPPORT GDI will not be set, regardless of OGL PfdAdjust or OGL VistaControlFlags values

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL SRV APP NO Z0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Remove Z0 pixelforamts

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL SSBO LOAD USING TLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allow the driver to use texture loads to implement SSBOs if coherence requirements allow

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)
DYNAMIC   (= 0x00000002)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL STATIC SHADER COPARGS OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control which copargs are overridden for shader replacement.

NONE                          (= 0x00000000)  // Don't override any settings
MAX REGS ALLOWED              (= 0x00000001)  // Allow overriding the maximum registers allowed for a shader
HAS OOO DRAIN ISSUES          (= 0x00000002)  // Allow overriding if a shader has out-of-order drain issues
NON UNIFORM QUAD DERIVATIVES  (= 0x00000004)  // Allow overriding the non-uniform quad derivatives optimization
UNIFORM BRANCH HOIST          (= 0x00000008)  // Allow overriding the uniform branch hoist optimization
ALL                           (= 0xffffffff)  // Allow overriding all settings/optimizations

Default values for this setting:
DEFAULT:    0xFFFFFFFF
	MAX REGS ALLOWED                        
	HAS OOO DRAIN ISSUES                    
	NON UNIFORM QUAD DERIVATIVES            
	UNIFORM BRANCH HOIST                    
	ALL                                     

------------------------------------------------------------
OGL STATIC SHADER REPLACEMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allow disabling static shader replacement in order to test compiler changes.

DISABLE  (= 0x00000000)  // Disable static shader replacement.
ENABLE   (= 0x00000001)  // Enable static shader replacement.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL STRICT DRAW RANGE ELEMENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Indicates whether all vertices in the bounding range [start, end] passed to glDrawRangeElements are required to be valid.  If true, they may all be compiled in some cases to improve performance, otherwise only those vertices between the greatest and least element index will ever be accessed.

NONSTRICT RANGE  (= 0x00000000)  // all vertices in range need not be valid
STRICT RANGE     (= 0x00000001)  // all vertices in range must be valid

Default values for this setting:
DEFAULT:    STRICT RANGE

------------------------------------------------------------
OGL SURFACE PHYSICALLY NONCONTIGUOUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether to allow RM to allocate surfaces non-contiguously in physical VRAM.

DISABLED   (= 0x00000000)  // All surfaces are contiguous (pre-r364 driver behavior)
128M PLUS  (= 0x00000001)  // All 128MB+ surfaces are allocated with the non-contiguous flag
16M PLUS   (= 0x00000002)  // All 16MB+  surfaces are allocated with the non-contiguous flag
ALL        (= 0x00000003)  // All surfaces are allocated with the non-contiguous flag

Default values for this setting:
DEFAULT:    16M PLUS

------------------------------------------------------------
OGL SWAP GROUP CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

WDDM BARRIER BINDING LOOP DISABLE  (= 0x00000400)  //  calls to BindSwapBarrier should only be done on the current gc and drawable 
WDDM PRE SWAP WAIT                 (= 0x00000800)  //  Wddm only: waits before the next swap instead of after the current swap.
WDDM DISABLE FULLSCREEN FLIPPING   (= 0x00004000)  //  Disallow swapgroups in fullscreen flipping mode (win8+ only)
WDDM ALLOW DWM CLONE FLIPPING      (= 0x00008000)  //  Allow flipping in dwm clone (where each head has its own allocation)
WDDM SETTING MASK                  (= 0x0000cc00)  //  Bits to be taken into account on wddm based builds
NON WDDM SETTING MASK              (= 0x00000000)  //  Bits to be taken into account on non-wddm based builds
STANDARD                           (= 0x00000000)  //  No overrides 
STANDARD WDDM                      (= 0x00008000)  //  Allow flipping on dwm clone. 

Default values for this setting:
DEFAULT:    0x00000000
	NON WDDM SETTING MASK                   
	NON WDDM SETTING MASK                   
	NON WDDM SETTING MASK                   
	STANDARD                                

------------------------------------------------------------
OGL SWAP GROUP PRESENT INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This shows an indicator reporting swap group present information

DISABLE  (= 0x00000000)  // no swapGroupPresent indicator
ENABLE   (= 0x00000001)  // enable swapGroupPresent indicator

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL SYNC OBJECT APP THREAD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When the dual core driver is enabled, controls an optimization allowing the application thread to avoid synchronizing with the worker thread by incrementing the refcount of sync objects in the application thread and decrementing the refcount in the worker thread.

DISABLE  (= 0x00000000)  // When the dual core driver is enabled, all functions that interact with sync objects must synchronize with the worker thread.
ENABLE   (= 0x00000001)  // When the dual core driver is enabled, most functions that interact with sync objects can avoid synchronizing with the worker thread.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL SYNC OBJECT DEFERRED DELETE FIFO SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Delay the deletion of Sync objects by queueing them into a FIFO of the length defined by this registry key.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL SYSMEM TEXTURE PROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Textures being promoted from Sysmem to Vidmem

ENABLE   (= 0x00000001)
DISABLE  (= 0x00000000)

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL SYS HEAP REUSE RATIO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control the amount of freed system memory the allocator reserves for reuse by future allocations. By default the allocator reserves up to 10% of the total SRAM. The units are in 1/1000ths of total heap. So 100 means 10%.


Default values for this setting:
DEFAULT:    0x00000064

------------------------------------------------------------
OGL TARGET FLUSHCOUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
OGL TDR DELAY VALUE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the TDR delay value in seconds (0 is disabled)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL TEARING FREE SWAP PRESENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE                                        (= 0x00000000)  // no tearing free present
PREFERENCE MASK                                (= 0x00000003)
FIFO                                           (= 0x00000001)  // first client
MOST VISIBLE PIXELS                            (= 0x00000002)  // client with most visible pixels
LARGEST WINDOW                                 (= 0x00000003)  // client with largest window
ALLOWANCE MASK                                 (= 0x00000004)
MODE SPANNING                                  (= 0x00000000)  // client can be in span mode
MODE NO SPANNING                               (= 0x00000004)  // client can not be in span mode
BEHAVIOR MASK                                  (= 0x00000008)
INVALIDATE RECT BEFORE PRESENT                 (= 0x00000000)  // Call InvalidateRect before presenting (default)
DONT INVALIDATE RECT BEFORE PRESENT            (= 0x00000008)  // Don't call InvalidateRect before swapping (WARs app bug 840091)
WAIT MASK                                      (= 0x00000010)  // Choose when to do the wait
POST SWAP WAIT                                 (= 0x00000000)  // Wait on the HW flip event after swapbuffers is finished, but before it returns
PRE SWAP WAIT                                  (= 0x00000010)  // Wait on the HW flip event for frame N when swapbuffers is called for frame N+1
SYNC MASK                                      (= 0x00000020)  // Allows the choice of a finish or KMD semaphore synchronisation
SYNC FINISH                                    (= 0x00000000)  // Call a finish to synchronise the present blit with the HW flip
SYNC SEMAPHORE                                 (= 0x00000020)  // Create an overaly surface which will receive be the semaphore surface shared between KMD present blit and HW flip
SPECIAL OPTIONS MASK                           (= 0x00000040)  // Options not belonging to anything above are placed here.
SPECIAL OPTIONS STEREO FLIP MODE DEFAULT       (= 0x00000000)  // Use the driver's current stereo flip mode.
SPECIAL OPTIONS STEREO FLIP MODE AT ANY FRAME  (= 0x00000040)  // Select at any frame stereo flip mode as tearfree flip setting in stereo case.

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 
	DISABLE                                 
	DISABLE                                 
	DISABLE                                 
	DISABLE                                 
	DISABLE                                 
	DISABLE                                 
	MODE SPANNING                           
	INVALIDATE RECT BEFORE PRESENT          
	POST SWAP WAIT                          
	SYNC FINISH                             
	SPECIAL OPTIONS STEREO FLIP MODE DEFAULT

------------------------------------------------------------
OGL TEARING FREE SWAP PRESENT INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This shows an indicator when the client is tearing free present on Vista

DISABLE  (= 0x00000000)  // no tearingFreePresent indicator
ENABLE   (= 0x00000001)  // enable tearingFreePresent indicator

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL TEXCLAMP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

USE HW  (= 0x00000000)  // Use HW values
SPEC    (= 0x00000001)  // Force OGL Spec
EDGE    (= 0x00000002)  // Force Clamp-To-Edge

Default values for this setting:
DEFAULT:    USE HW

------------------------------------------------------------
OGL TEXTURE COLUMNOFZEROS RATIO
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the ratio of column of zeros used to optimize out texture function (used for viewperf13/medical optimization). A value of 0.f will disable the optimization entirely.


Default values for this setting:
DEFAULT:    0.050000

------------------------------------------------------------
OGL TEXTURE LOD BIAS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL TEX MEMORY SPACE ENABLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

SYSHEAP  (= 0x00000001)  // Allow SYS
VID      (= 0x00000002)  // Allow VID
ANY      (= 0x00000003)  // SYS+VID

Default values for this setting:
DEFAULT:    0x00000003
	SYSHEAP                                 
	VID                                     
	ANY                                     

------------------------------------------------------------
OGL THREAD AFFINITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISPATCHER MASK  (= 0x0000ffff)  // Set the dispatcher thread affinity 
PLAYER MASK      (= 0xffff0000)  // Set the player thread affinity

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL THREAD CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ENABLE   (= 0x00000001)  // Force Enables threading
DISABLE  (= 0x00000002)  // Force Disable threading

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL THREAD CONTROL 2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DUMP STATS                    (= 0x00000004)  // Creates files in C: that contain various stream statistics.
IGNORE GET ERROR              (= 0x00000008)  // glGetError always returns NO ERROR, skips the sync.
DISPATCHER USE EVENT ON LOAD  (= 0x00000010)  // Forces the dispatcher to use events to wait for the player if a hyperthreaded system is on high load.
PLAYER USE SPIN               (= 0x00000020)  // Allows the player to spin when waiting for commands.
FORCE CACHE SHARING           (= 0x00000100)  // Set thread affinity to run app and game within a shared cache.
FORCE CACHE SEPERATION        (= 0x00000200)  // Set thread affinity to run app and game on seperate caches.
FORCE HT SEPERATION           (= 0x00000400)  // Set thread affinity to avoid running driver and app on one hyperthreads of one core.
SHOW INDICATOR                (= 0x00000800)  // Draw an indicator on screen to show whether dual-core is running or not.
SERIALIZED WORKER             (= 0x00001000)  // Serialize execution of worker threads to allow single thread optimization
ENABLE QUADRO DC              (= 0x00010000)  // Turn on the DC driver on Quadro
FORCE SYNC VACACHE            (= 0x00020000)  // Force a Sync on each BindVertexArray
DISABLE TIMER                 (= 0x00040000)  // Disable front/backend timers normally used to disable threading when not effective
IGNORE OCCLUSION              (= 0x00080000)  // Ignore GetQuery for occlusion tests, always return TRUE
TRACK CURRENT COLOR           (= 0x00100000)  // Track current color in the app thread to speed glGetFloat requests
TRACK CURRENT MVP MATRIX      (= 0x00200000)  // Track current MVP matrix in the app thread to speed glGetFloat requests
TRACK CURRENT FB BINDING      (= 0x00400000)  // Track current FB bindings to avoid syncs in glGetIntegerv
CONVERT MAPBUFFERRANGE        (= 0x00800000)  // Convert glMapBufferRange/glUnmapBuffer sequences to glBufferSubData.
ASSUME MAP INVALIDATE         (= 0x01000000)  // Assume that the app does not expect valid content when calling glMapBufferRange (as if GL MAP INVALIDATE RANGE BIT would be set by the app).
CACHE BUFFERNAMES             (= 0x02000000)  // Enable buffer name cache
CACHE TEXTURENAMES            (= 0x04000000)  // Enable texture name cache
CACHE VERTEXARRAYNAMES        (= 0x08000000)  // Enable vertex array name cache

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL THREAD DATA SYS COPY LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max. size in bytes for using separate sysmem copy of user data to avoid a Sync.  Above this limit, we pass user ptr and force a Sync to avoid sysmem copy.  Currently only used for BufferSubData.

NO LIMIT  (= 0xffffffff)

Default values for this setting:
DEFAULT:    NO LIMIT

------------------------------------------------------------
OGL THREAD OPTIMIZATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Set this to 0 in order to prevent the creation of a suspended worker thread on Quadro

CACHE VIEWPORT                      (= 0x00000001)  // Cache calls to glViewport
CACHE GLSL OBJECTS                  (= 0x00000002)  // Cache calls to glGetUniformLocation and glIsShader
CACHE GL STATE                      (= 0x00000004)  // Cache calls to glIsEnabled for a subset of state
CACHE MATRIX                        (= 0x00000008)  // Cache calls to glGetFloatv for GL PROJECTION MATRIX and GL MODELVIEW MATRIX
IGNORE CHECK FB STATUS              (= 0x00000010)  // Ignore calls to glCheckFramebufferStatus
MAKE CURRENT ASYNC                  (= 0x00000020)  // Don't sync on DrvSetContext and DrvReleaseContext if possible. Ignores return values.
IGNORE DLIST PIXELSTATE UPDATE      (= 0x00000040)  // Pixel state not updated by display lists do not invalidate app thread pixel state due to callList
IGNORE DLIST PARTIAL PRIM           (= 0x00000080)  // No partial begin/ends in display list.  Do not assume calls must be ignored after callList
CACHE GET RESULTS                   (= 0x00000100)  // Cache calls to certain glGets
QUEUE WINDOW EVENTS                 (= 0x00000200)  // Queue window events instead of syncing
APP THREAD GETS                     (= 0x00000400)  // Perform certain glGet* calls in the application thread when the front and back-end threads are already synchronized.
DISABLE ALL OPTIMIZATIONS, DISABLE  (= 0x00000000)  // Disable all optimizations
ENABLE ALL                          (= 0x000001ff)  // Enable all threading optimizations
QUADRO DEFAULT                      (= 0x00000400)  // Quadro specific default
QUADRO ONLY BITS                    (= 0x000007e0)  // Bits intended only for Quadro

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE ALL OPTIMIZATIONS               

------------------------------------------------------------
OGL THREAD OPTIMIZATION GEFORCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Threaded optimizations for GeForce.

CACHE VIEWPORT                      (= 0x00000001)  // Cache calls to glViewport
CACHE GLSL OBJECTS                  (= 0x00000002)  // Cache calls to glGetUniformLocation and glIsShader
CACHE GL STATE                      (= 0x00000004)  // Cache calls to glIsEnabled for a subset of state
CACHE MATRIX                        (= 0x00000008)  // Cache calls to glGetFloatv for GL PROJECTION MATRIX and GL MODELVIEW MATRIX
IGNORE CHECK FB STATUS              (= 0x00000010)  // Ignore calls to glCheckFramebufferStatus
MAKE CURRENT ASYNC                  (= 0x00000020)  // Don't sync on DrvSetContext and DrvReleaseContext if possible. Ignores return values.
IGNORE DLIST PIXELSTATE UPDATE      (= 0x00000040)  // Pixel state not updated by display lists do not invalidate app thread pixel state due to callList
IGNORE DLIST PARTIAL PRIM           (= 0x00000080)  // No partial begin/ends in display list.  Do not assume calls must be ignored after callList
DISABLE ALL OPTIMIZATIONS, DISABLE  (= 0x00000000)  // Disable all optimizations
ENABLE ALL                          (= 0x000000ff)  // Enable all threading optimizations

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE ALL OPTIMIZATIONS               

------------------------------------------------------------
OGL TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Raw value to pass to the TiledCacheBufferInterleave method.  The legal values may be GPU-dependent, and we might need to split to different per-architecture settings if we ever need to do per-application overrides.

MAXWELL PASCAL VOLTA DEFAULT  (= 0x0000210a)  // Default value for Maxwell, Pascal, and Volta GPUs.
TURING DEFAULT                (= 0x0002210a)  // Default value for Turing GPUs.
GA102 3124365 WAR             (= 0x0003431c)  // Used when TC is always on for GA102 WAR 3124365
USE HW DEFAULT                (= 0x00000000)  // Use an architecture-appropriate default value.

Default values for this setting:
DEFAULT:    USE HW DEFAULT

------------------------------------------------------------
OGL TILE COALESCER CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls the HW Tile Coalescer(TC) - used for arch experiments

MODE NO CONFLICT DETECT      (= 0x00000000)  // Conflict detection disabled
MODE CONFLICT DETECT SAMPLE  (= 0x00000001)  // Same pixel may appear in different quads, but they will not cover same samples
MODE CONFLICT DETECT PIXEL   (= 0x00000002)  // the same pixel will not appear in more than one TC tile
TILE SIZE 16x16              (= 0x00000000)  // Sets the TC tile size to 16x16 (HW default)
TILE SIZE 8x8                (= 0x00000004)  // Sets the TC tile size to 8x8
FRAGMENT ORDER ORDERED       (= 0x00000000)  // TC tiles are processed in the API order of the primitives
FRAGMENT ORDER UNORDERED     (= 0x00000008)  // API ordering of the primitives is not guaranteed

Default values for this setting:
DEFAULT:    0x00000000
	MODE NO CONFLICT DETECT                 
	TILE SIZE 16x16                         
	FRAGMENT ORDER ORDERED                  

------------------------------------------------------------
OGL TMON LEVEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This setting specifies the severity of events logged into the tmonlog by the OpenGL driver.

DISABLE      (= 0x00000000)  // Do not log any events
CRITICAL     (= 0x00000001)  // Log only Critical events.
WARNING      (= 0x00000002)  // Log Warning and Critical events.
INFORMATION  (= 0x00000003)  // Log Information and more severe events.
MOST         (= 0x00000004)  // Log all but verbose events.
VERBOSE      (= 0x00000005)  // Log all including verbose events

Default values for this setting:
DEFAULT:    MOST

------------------------------------------------------------
OGL TRACE FILE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Which file to write nvtrace output to

BASIC  (= nvtrace.txt)  // Default nvtrace output filename

Default values for this setting:
DEFAULT:    nvtrace.txt

------------------------------------------------------------
OGL TRACE LEVEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Which level of tracing is desired

NONE  (= 0x00000000)  // Default level of tracing is disabled

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
OGL TRACE MASK
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Mark of which code to TRACE

NONE          (= 0x0000000000000000)  // Nothing selected
CLEAR         (= 0x0000000000000001)
BEGIN         (= 0x0000000000000002)
VERTEX        (= 0x0000000000000004)
XFORM         (= 0x0000000000000008)
TEXTURE       (= 0x0000000000000010)
STATE         (= 0x0000000000000020)
RASTER        (= 0x0000000000000040)
LIGHT         (= 0x0000000000000080)
DLIST         (= 0x0000000000000100)
VTXARRAY      (= 0x0000000000000200)
ICD CMDS      (= 0x0000000000000400)
EVAL          (= 0x0000000000000800)
PIXEL         (= 0x0000000000001000)
ERRORS        (= 0x0000000000002000)
PUSHBUFFER    (= 0x0000000000004000)
WGL           (= 0x0000000000008000)
DRAWABLE      (= 0x0000000000010000)
USER 1        (= 0x0000000000020000)  // Reserved for hacking. Don't check
		in anything that uses TR USER* values.
GLS           (= 0x0000000000040000)  // GLS
MEMALLOC      (= 0x0000000000080000)  // AGP memory allocation
THREAD        (= 0x0000000000100000)  // Multi-thread driver info
LIST EXEC     (= 0x0000000000200000)  // DL execution info
PROGRAM       (= 0x0000000000400000)  // common for VP and FP, see COP for
		levels to dump nvInst list and ucode bits
MALLOC        (= 0x0000000000800000)  // non-AGP memory alloc/free/realloc
CLAW          (= 0x0000000001000000)  // CLAW messages
FSAA          (= 0x0000000002000000)  // FSAA tracking
GET           (= 0x0000000004000000)  // any GET routine
VP CREATE     (= 0x0000000008000000)  // Vertex Program create/destroy
		level 25 print key when generating VP
		level 35-40 internal VP generation
		level 43 trace VP generation
		level 44 trace when VP sent to GPU
		level 45 generate each time (instead of sometimes getting from cache)
		level 55 loading GPU cache, switching user <--> fixed VP
VALIDATE      (= 0x0000000010000000)  // for tracing validation
TEXMGR        (= 0x0000000020000000)  // internal texture management
		Level 20: System issues (mode switch)
		Level 25: Init/Destroy/Exception
		Level 30: Alloc/Free
		Level 35: Use/Orphan/Promote/Tag
		Level 40: Eviction/Discard
		Level 45: Wait
		Level 50: Frame counter (in nvContext.c)
		Level 60: Texture download (cook texture)
		Level 80: LRU list printing
MUTEX         (= 0x0000000040000000)  // mutex grab/releasing
		Level 70: Mutex acquire/release
CONFIG        (= 0x0000000080000000)  // various config info, like Reg. values
VP INTERNAL   (= 0x0000000100000000)  // internal VP generation will push/clear/pop bit
		VP CREATE unless this mask bit is set
STATS         (= 0x0000000200000000)
PM STATS      (= 0x0000000400000000)  // nvpmapi and assoc'd stats tracing
FP CREATE     (= 0x0000000800000000)
COP           (= 0x0000001000000000)  // to get trace for filing OCG bugs, set this bit
		and level == 50.  Cut trace
		from ***** Begin COP compile
		to ***** End COP compile
		level 50 dump source and inst list
		level 60 dump inst list to be converted to ucode
		level 70 dump ucode bits
FBO           (= 0x0000002000000000)
MULTIGPU      (= 0x0000004000000000)  // multiGpu related debug output
PROGRAM EXEC  (= 0x0000008000000000)  // SW GPU program execution
LONGHORN      (= 0x0000010000000000)  // Longhorn stuff
GLSL          (= 0x0000020000000000)  // GLSL shader/program compilation
UTIL          (= 0x0000040000000000)  // for glUtil tracing
WWMP          (= 0x0000080000000000)  // For WWMP
PATH          (= 0x0000100000000000)  // Path Rendering
WSPERF        (= 0x0000200000000000)  // WSPERF paths
SHADERS       (= 0x0000400000000000)  // cyclestats-style shader dumps
MEMUSAGE      (= 0x0000800000000000)  // GL memory usage stats
DISKCACHE     (= 0x0001000000000000)  // Shader disk cache stats
CYCLESTATS    (= 0x0002000000000000)  // CycleStats internals
NVN           (= 0x0004000000000000)  // NVN API usage
VK ERROR      (= 0x0008000000000000)  // Report any VK API usage errors we detect
RAYTRACING    (= 0x0010000000000000)  // Raytracing
VK SYNC       (= 0x0020000000000000)  // Vulkan synchronization
SPARSE        (= 0x0040000000000000)  // Sparse resources
PERFSTRAT     (= 0x0080000000000000)  // Performance strategies
FENCE         (= 0x0100000000000000)  // GL synchronization
INTEROP       (= 0x0200000000000000)  // Interop
ALL           (= 0x03FFFFFFFFFFFFFF)  // All trace bits

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
OGL TRACE OPTIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Which level of tracing is desired

NONE                 (= 0x00000000)  // No options selected
LOG TO CONSOLE       (= 0x00000001)  // trace output to a console window
LOG TO FILE          (= 0x00000002)  // trace output to a file
LOG TO DEBUGGER      (= 0x00000004)  // trace output to debugger window
LOG TO CALLBACK      (= 0x00000008)  // trace output to a user-specified callback
LOG TO STDOUT        (= 0x00000010)  // trace output to stdout
LOG TO BUFFER        (= 0x00000020)  // trace output to circular buffer
LOG TO ANY           (= 0x0000003f)  // LOG TO CONSOLE | LOG TO STDOUT | LOG TO FILE | LOG TO DEBUGGER | LOG TO CALLBACK | LOG TO BUFFER
PER FRAME LOGFILE    (= 0x00000200)  // w/LOG TO FILE, new name each frame
PRINT FRAME COUNT    (= 0x00001000)  // prepend each line with frame count
PRINT THREAD ID      (= 0x00002000)  // prepend each line with thread ID
PRINT THREAD NUM     (= 0x00004000)  // ... with thread number
PRINT INDENT         (= 0x00008000)  // indent per stack level
PRINT FUNCTION       (= 0x00040000)  // prepend each line with the function name (class::function for C++)
PRINT THIS           (= 0x00080000)  // Add the this ptr for C++ (i.e. class(ptr)::function)
PRINT PREFIX PAD     (= 0x00100000)  // pad the prefix out to NV TRACE PREFIX PAD characters
PRINT TIME           (= 0x00400000)  // prepend each line with current time
FLUSHFILE PER WRITE  (= 0x40000000)  // flush log file after each write
DISABLE ASSERT BRK   (= 0x80000000)  // don't break into the debugger on failed assertions
DEFAULT              (= 0x00000005)  // Default options

Default values for this setting:
DEFAULT:    0x00000005
	LOG TO CONSOLE                          
	LOG TO DEBUGGER                         
	DEFAULT                                 

------------------------------------------------------------
OGL TREAT DEPTH24 AS DEPTH32
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

For Quadro on Windows OSs only, set this to 1 in order to report depth 24 / stencil 0 formats as depth 32

ENABLE   (= 0x00000001)  // Enable reporting depth 24 as depth 32
DISABLE  (= 0x00000000)  // Disable reporting depth 24 as depth 32

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL TRIPLE BUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL TURING TILEPOOL ALLOW HOSTMEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether host memory is allowed for tile pools

DISABLED  (= 0x00000000)  // Don't allow hostmem for tile pools on Turing
ENABLED   (= 0x00000001)  // Allow hostmem for tile pools on Turing

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL UNSUPPORTED COMPRESSED TEXTURES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Compressed texture settings.

KEEP HOSTCOPY COMPRESSED      (= 0x00000001)  // Keep texture host copy compressed (required to pass OpenGL CTS for ES 3.2).
ADVERTISE ASTC                (= 0x00000002)  // Advertise ASTC LDR extensions.
ADVERTISE ASTC ES ONLY        (= 0x00000004)  // Advertise ASTC LDR extensions only on OpenGL ES contexts (required to pass OpenGL CTS for ES 3.2).
FORCE FP16 ASTC               (= 0x00000008)  // Use always FP16 texture for ASTC.
ADVERTISE ASTC HDR            (= 0x00000010)  // Advertise ASTC HDR extension (includes EMULATE ASTC HDR).
ADVERTISE ASTC HDR ES ONLY    (= 0x00000020)  // Advertise ASTC HDR extension only on OpenGL ES contexts (includes EMULATE ASTC HDR ES ONLY).
ADVERTISE ASTC HDR ON LDR HW  (= 0x00000040)  // Advertise ASTC HDR extension on hw which supports ASTC LDR (includes EMULATE ASTC HDR ON LDR HW).
EMULATE ASTC HDR              (= 0x00000080)  // Emulate ASTC HDR (regardless of advertising extension).
EMULATE ASTC HDR ES ONLY      (= 0x00000100)  // Emulate ASTC HDR only on OpenGL ES contexts (regardless of advertising extension).
EMULATE ASTC HDR ON LDR HW    (= 0x00000200)  // Emulate ASTC HDR on hw which supports ASTC LDR (regardless of advertising extension).

Default values for this setting:
DEFAULT:    0x00000025
	KEEP HOSTCOPY COMPRESSED                
	ADVERTISE ASTC ES ONLY                  
	ADVERTISE ASTC HDR ES ONLY              

------------------------------------------------------------
OGL USE ALLOC RENDERABLE NON GLS TEXTURES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allocate all 1x textures as renderable using NON GLS allocation.

DISABLE  (= 0x00000000)  // Disable
ENABLE   (= 0x00000001)  // Enable

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL USE ONLINE GENERATED CODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enables driver to use online-generated code. Disable it to avoid driver allocating exec memory for example. Note that right now it only works on ARM but not on x86, because some x86 paths don't have fall-back code when OG fails.

ENABLE   (= 0x00000001)  // Enable
DISABLE  (= 0x00000000)  // Disable

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL VENDOR STRING OVERRIDE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the GL VENDOR string reported by the driver.


------------------------------------------------------------
OGL VERSION OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

TO OPENGL 1 0  (= 0x00302e31)  // Report OpenGL version 1.0
TO OPENGL 1 1  (= 0x00312e31)  // Report OpenGL version 1.1
TO OPENGL 1 2  (= 0x00322e31)  // Report OpenGL version 1.2
TO OPENGL 1 3  (= 0x00332e31)  // Report OpenGL version 1.3
TO OPENGL 1 4  (= 0x00342e31)  // Report OpenGL version 1.4
TO OPENGL 1 5  (= 0x00352e31)  // Report OpenGL version 1.5
TO OPENGL 2 0  (= 0x00302e32)  // Report OpenGL version 2.0
TO OPENGL 2 1  (= 0x00312e32)  // Report OpenGL version 2.1
TO OPENGL 3 0  (= 0x00302e33)  // Report OpenGL version 3.0
TO OPENGL 3 1  (= 0x00312e33)  // Report OpenGL version 3.1
TO OPENGL 3 2  (= 0x00322e33)  // Report OpenGL version 3.2
TO OPENGL 3 3  (= 0x00332e33)  // Report OpenGL version 3.3
TO OPENGL 4 0  (= 0x00302e34)  // Report OpenGL version 4.0
TO OPENGL 4 1  (= 0x00312e34)  // Report OpenGL version 4.1
TO OPENGL 4 2  (= 0x00322e34)  // Report OpenGL version 4.2
TO OPENGL 4 3  (= 0x00332e34)  // Report OpenGL version 4.3
TO OPENGL 4 4  (= 0x00342e34)  // Report OpenGL version 4.4
TO OPENGL 4 5  (= 0x00352e34)  // Report OpenGL version 4.5
TO OPENGL 4 6  (= 0x00362e34)  // Report OpenGL version 4.6
DISABLED       (= 0x00000000)  // Disabled
MAXVALUE       (= 0x00ffffff)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL VERSION STRING OVERRIDE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the GL VERSION string reported by the driver.


------------------------------------------------------------
OGL VERTEX LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
OGL VERTEX PROGRAM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NO LIVEDEAD  (= 0x00000001)  // No livedead vertex programs

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL VGX LOAD ZCULL CONDITIONALLY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Load or invalidate zcull conditionally based on if VGX migration occurs

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL VID HEAP REUSE RATIO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control the amount of freed video memory the allocator reserves for reuse by future allocations. By default the allocator reserves up to 10% of the total VRAM. The units are in 1/1000ths of total heap. So 100 means 10%.


Default values for this setting:
DEFAULT:    0x00000064

------------------------------------------------------------
OGL VIRTUALIZED FLIPPING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control use of OpenGL Virtualized Flipping for DPI unawared applications

AUTOSELECT  (= 0x00000002)  // Only Enable when the logical and physical desktops differ in size.
FORCE ON    (= 0x00000001)  // Enable Virtualized Flipping
FORCE OFF   (= 0x00000000)  // Disable Virtualized Flipping

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
OGL VISTA CONTROL FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

NO DCE          (= 0x00000001)
NULL RENDERING  (= 0x00000002)
NO SUPPORT GDI  (= 0x00000004)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL VISTA FULL SCREEN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE DCE    (= 0x00000001)
DCE UNCHANGED  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000001
	DISABLE DCE                             

------------------------------------------------------------
OGL VPIPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OPTIMIZE                    (= 0x00000000)  // Full optimizations
DISABLE BATCHED DLISTS      (= 0x00000002)  // Disable batched dlists
DISABLE CDE                 (= 0x00000004)  // Disable cde
DISABLE LINE STRIP CDE      (= 0x00000008)  // Disable linestrip cde
DISABLE IAB BBOX            (= 0x00000010)  // Disable vpipe IAB bbox
DISABLE IAB PULLING         (= 0x00000020)  // Disable IAB pulling
ENABLE IAB INDEX PULLING    (= 0x00000040)  // Enable IAB index pulling
DISABLE STAGED PULLING      (= 0x00000080)  // Disable staged pulling
DISABLE DIRECT BATCH        (= 0x00000100)  // Disable direct batch
DISABLE DIRECT BATCH OG     (= 0x00000200)  // Disable direct batch OG
DISABLE BBOX UCLIP TESTING  (= 0x00001000)  // Disable bbox uclip testing
DISABLE FACET LINE MODE     (= 0x00002000)  // Disable LINE mode facet optimization
DISABLE MULTI IDX PULL      (= 0x00020000)  // Disable multi-idx pull
DISABLE IDX PULL            (= 0x00040000)  // Disable IDX pull
DISABLE CONSECUTIVE BEGIN   (= 0x00080000)  // Disable combining consecutive begin/end into a single batch

Default values for this setting:
DEFAULT:    0x00000000
	OPTIMIZE                                

------------------------------------------------------------
OGL VPIPE BBOX HEADER THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NV2X  (= 0x00000020)  // Vpipe bounding box header threshold NV2X
NV1X  (= 0x00000020)  // Vpipe bounding box header threshold NV1X

Default values for this setting:
DEFAULT:    NV2X

------------------------------------------------------------
OGL VPIPE BBOX MAX THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000080

------------------------------------------------------------
OGL VPIPE BBOX MIN THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
OGL VPIPE CDE PRIM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DEFAULT NV2x GL  (= 0x000003fa)  // CDE primitive default NV2x GL

Default values for this setting:
DEFAULT:    0x000003F0

------------------------------------------------------------
OGL VPIPE FORMAT BLOAT LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limit the number of attributes vpipe will allow before forcing a vertex format change


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
OGL VPIPE INDEX BATCH THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NV2X  (= 0x0000000c)  // Vpipe index batch threshold NV2X
NV1X  (= 0x0000000c)  // Vpipe index batch threshold NV1X

Default values for this setting:
DEFAULT:    NV2X

------------------------------------------------------------
OGL VPIPE VTX PULL THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NV3X  (= 0x00000020)  // Vpipe vtx pull threshold <= NV3X
NV4X  (= 0x00000000)  // Vpipe vtx pull threshold NV4X

Default values for this setting:
DEFAULT:    NV3X

------------------------------------------------------------
OGL VRAM SIZE BASED MEMORY BLOCKS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Memory manager block size based on vram size

ENABLED   (= 0x00000001)  // Enable Setting
DISABLED  (= 0x00000000)  // Disable Setting

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL VRAM SIZE BASED MEMORY BLOCKS TABLE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

For VRAM sized memory blocks, table size required to represent all memory blocks


Default values for this setting:
DEFAULT:    0x00000400

------------------------------------------------------------
OGL VSYNC DISPLAY DEVICE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DRIVER  (= 0x00000000)  // Allow the driver to select the sync Head

Default values for this setting:
DEFAULT:    0x00000000
	DRIVER                                  

------------------------------------------------------------
OGL VSYNC HEADS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

NO                         (= 0x00000000)  // Only sync to the primary head
YES                        (= 0x00000001)  // Sync to all heads, unless rasterlocked, then only syncs to one
YES AND IGNORE RASTERLOCK  (= 0x00000002)  // Sync to all heads, but ingnores rasterlock

Default values for this setting:
DEFAULT:    YES

------------------------------------------------------------
OGL VSYNC METHOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

SEMAPHORE  (= 0x00000000)  // Use semaphores to conduct wait for vsync
POLL       (= 0x00000002)  // CPU polling method for wait for vsync on one head

Default values for this setting:
DEFAULT:    SEMAPHORE

------------------------------------------------------------
OGL VULKAN LLVM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control use of LLVM for Vulkan pipeline layouts

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)
DYNAMIC   (= 0x00000002)

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
OGL VULKAN SHADER CACHE TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the Vulkan shader cache type

NONE  (= 0x00000000)  // Disable the shader cache for Vulkan
DISK  (= 0x00000001)  // Save the Vulkan shader cache to disk
MEM   (= 0x00000002)  // Save the Vulkan shader cache to memory

Default values for this setting:
DEFAULT:    DISK

------------------------------------------------------------
OGL WARP CULLING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control the behavior of vertex shader warp level culling.

VSB CULL  (= 0x00000001)  // The vertex shader will do warp level culling using the VOTE instruction.
NONE      (= 0x00000000)  // Do not generate any code to cull entire warp

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
OGL WASTE TLS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

waste this number of TLS variables; force generic TLS variables

NONE           (= 0x00000000)  // default
FORCE SLOW     (= 0x00000040)  // force slow TLS variables
FORCE GENERIC  (= 0x80000000)  // force generic TLS variables

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
OGL WDDM2 LDA BROADCAST SUBMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)  // Unicast LDA buffer submission
ENABLE   (= 0x00000001)  // Broadcast LDA buffer submission

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL WDDM2 MSHYBRID DX PRESENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls default DX present policy for MSHybrid configurations.  Note that disabling DX present here does not prevent it from getting enabled for some other reason (e.g. HDR).  RS2 is the first version that supports Win7-blit (providing effecient MSHybrid support).  RS4 is the first version with a fix for diagonal tearing bug 200050074.

DISABLE                       (= 0x00000000)  // Disable DX present (still allowed for hdr).
ENABLE                        (= 0x00000001)  // Enable DX present.
USE WIN7 BLIT FOR GDI COMPAT  (= 0x00000002)  // Disable DX present when GDI compatibility needed for MSHybrid on Win10 >= RS2 (see OGL ENABLE GDI COMPATIBILITY/  lhglDetermineGdiCompatibility).
DISABLE RS4                   (= 0x00000003)  // Disable DX present on Win10 >= RS4.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
OGL WDDM2 MSHYBRID EVERYWHERE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls enable of MSHybrid policy based on RID 72193, where MSHybrid render and display support is enabled for all NVIDIA GPUs.

DISABLE           (= 0x00000000)  // Use legacy handling.
ENABLE            (= 0x00000001)  // Use RID 72193 handling.
ENABLE VIBRANIUM  (= 0x00000002)  // Use RID 72193 handling for Vibranium+.

Default values for this setting:
DEFAULT:    ENABLE VIBRANIUM

------------------------------------------------------------
OGL WDDM2 MSHYBRID EVERYWHERE OPTIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Options for MSHybrid Everwhere

NONE                     (= 0x00000000)  // No options
DISABLE FLIP TRANSITION  (= 0x00000001)  // Present transition to fullscreen flipping
DONT REQUIRE MSHYBRID    (= 0x00000002)  // Don't require MSHybrid flag to enable this path
DISABLE INTEROP SYNC     (= 0x00000004)  // Disable interop synchronization and use the present thread

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
OGL WDDM2 RESIDENCY CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls driver behavior related to wddmv2 residency model.
Refer to //sw/docs/gpu/drivers/OpenGL/wddm2/ogl-wddmv2-overview.docx.

| stage | residency | res when | sync   | sync type | regkey |
|-------+-----------+----------+--------+-----------+--------|
| mR1   | OS        | always   | OS     | sync      |    dnc |
| mR2   | driver    | always   | OS     | sync      |      0 |
| mR2   | driver    | always   | driver | async     |      1 |
| mR3   | driver    | both     | driver | async     |      1 |
| mR5   | driver    | always   | driver | async     |      1 |
| mR6   | driver    | use      | driver | async     |      1 |

| stage | periodicTrim | evictToBudget | allocLegacyAlPll |
|-------+--------------+---------------+------------------|
| mR3   | no           | no            | yes              |
| mR5   | yes          | no            | yes              |
| mR6   | yes          | yes           | no               |

regeky: RTL REGISTRY CONTROL/GraphicsDrivers/MemoryManagement/EnableAsyncResidency

'Both' residency means lock (MakeResident) at CreateAllocation, then
lock again at use. Locking at use enables comparing isResident against
the AL to assert if any allocations were not made resident.

mR1   (= 0x00000001)  // OS does MakeResident and synchronous paging
mR2   (= 0x00000002)  // MakeResident at Alloc
mR3   (= 0x00000003)  // MakeResident at Alloc and at Use
mR5   (= 0x00000005)  // mR2 + periodicTrim
mR5a  (= 0x00000033)  // (temporary) MakeResident at use, periodic trim (no toBudget), have AL/PLL
mR5b  (= 0x00000034)  // (temporary) MakeResident at use, periodic and toBudget trim, have AL/PLL
mR6   (= 0x00000006)  // MakeResident at use, periodic and toBudget trim, no AL/PLL
DEV   (= 0x00000007)  // Temporary development settings.

Default values for this setting:
DEFAULT:    mR5b

------------------------------------------------------------
OGL WDDM2 RESIDENCY DEBUG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Debug flags that override individual bits of behavior from OGL WDDM2 RESIDENCY CONTROL

NONE                           (= 0x00000000)  // All flags off
FORCE RESIDENCY AT CREATE      (= 0x00000001)  // Trapdoor force residency in postCreateResource
FORCE RESIDENCY AT FINALIZE    (= 0x00000002)  // Trapdoor force residency in Finalize (processing AL)
DISABLE ASSUME NOT IN USE OPT  (= 0x00000004)  // Disable AssumeNotInUse optimization in DestroyAllocation

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
OGL WDDM2 RESIDENCY MAX TRIM LEVEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control which trim level is the highest allowed

ANY TRIM  (= 0x00000000)  // Allow any level
LEVEL1    (= 0x00000001)  // Allow up to level 1
LEVEL2    (= 0x00000002)  // Allow up to level 2
LEVEL3    (= 0x00000003)  // Allow up to level 3

Default values for this setting:
DEFAULT:    0x00000000
	ANY TRIM                                

------------------------------------------------------------
OGL WDDM ALLOW HOST RATIO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A percentage ratio of memory after which sysheap is allowed for tiled resources


------------------------------------------------------------
OGL WDDM FULLSCREEN FLIPPING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the flipping behaviour on Windows8+

ALLOW APP ACTIVATE MSG             (= 0x00000001)  // Allow flipping on WM ACTIVATEAPP message
ALLOW APP NON FOREGROUND           (= 0x00000002)  // Allow flipping when the app is not in the foreground
ALLOW APP WRONG STYLE              (= 0x00000004)  // Allow flipping when the app has the wrong style
DISABLE EXCLUSING MODE MUTEX       (= 0x00000008)  // Do not take the exclusive mode mutex when going into fullscreen
DISABLE VIDPN VIS                  (= 0x00000010)  // Do not blank the heads unnecessarily (unimplemented)
ENABLE PER HEAD FULLSCREEN CHECKS  (= 0x00000020)  // Loop over all heads instead of only checking the device desktop rect
DISABLE INVALIDATE RECT            (= 0x00000040)  // Do not use invalidate rect on enabling or disabling flipping
DISABLE FLICKER WAR                (= 0x00000080)  // Remove WAR for multiple heads (could interact with vidpn vis above eventually)
ALLOW DEEPCOLOR MULTIMON           (= 0x00000100)  // Allow flipping of deepColor client in multimon config (deepColor window is part of desktop)
DISABLE ZORDER CHANGE              (= 0x00000200)  // Do not disable flipping if a z-order window change occurs.
DISABLE MENU DETECTION             (= 0x00000400)  // Do not disable flipping if a menu is detected as visible.
DISABLE NCDESTROY                  (= 0x00000800)  // Do not disable flipping if a WM NCDESTROY is seen.
ALLOW DMW CLONE                    (= 0x00001000)  // Allow flipping in dwm clone (where each head has its own allocation).
ALLOW MONO DBL W STEREO VIBRANIUM  (= 0x00002000)  // Allow flipping with mono drawable when workstation stereo is enabled on Vibranium.
ENABLE ALL                         (= 0xffffffff)  // Enable all
ENABLE NONE                        (= 0x00000000)  // enable none

Default values for this setting:
DEFAULT:    ENABLE PER HEAD FULLSCREEN CHECKS

------------------------------------------------------------
OGL WDDM SUB FULLSCREEN FLIPPING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

When enabled, permits Windows FSE flipping when a window's client area is smaller than the size of the display.
The window client area gets displayed at (0,0) screen origin, with width and height matching the window width and height, and all other pixels are black.
 When HANDLE WM KILLFOCUS is set, using alt-tab to change focus away from the window causes the contents to return to their normal position on desktop, and the pixels outside the window client area become visible.
It is not necessary for the window to be borderless, only the desktop coordinates of the window's client area is relevant. By default the feature engages only when the window's client area is at (0,0), but this constraint can be relaxed by setting ALLOW WINDOW OFFSET.
 By default the feature engages only when the window is joined to a swapgroup, but this constraint can be relaxed by setting ALLOW NON SWAPGROUP WINDOW.

DISABLE                     (= 0x00000000)  // Window must be fullscreen-sized to get promoted FSE flipping
ENABLE                      (= 0x00000001)  // Enable FSE flipping for a smaller than fullscreen-sized window
ALLOW WINDOW OFFSET         (= 0x00000100)  // Allow to engage when the window client area is not located at (0,0) logical desktop coordinates, provided the window client area is fully contained within the screen rectangle.
ALLOW NON SWAPGROUP WINDOW  (= 0x00000200)  // Allow to engage when the window is not joined to a swapgroup.
HANDLE WM KILLFOCUS         (= 0x00010000)  // Allow to disable flipping when a window is in sub fullscreen flipping mode then the focus is changed. Window retains fullscreen resources even when it does not have keyboard focus. The rest of desktop may momentarily be visible when focus changes, then the app window regains FSE flipping.

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
OGL WDDM VID ONLY CAP RATIO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A percentage ratio of memory that can be consumed by HEAP VID-only allocations


------------------------------------------------------------
OGL WGL ABORT BEHAVIOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ABORT           (= 0x00000000)  // call abort()
RAISEEXCEPTION  (= 0x00000001)  // call RaiseFailFastException()
FASTFAIL        (= 0x00000002)  // call   fastfail() if supported, otherwise fallback to RAISEEXCEPTION
EXITBIT         (= 0x00001000)  // call exit(exitcode)
EXITCODEMASK    (= 0x00000fff)  // mask for exitcode

Default values for this setting:
DEFAULT:    ABORT

------------------------------------------------------------
OGL WGL ALIGN OG ALLOC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Align OG allocation address (WGL only)

DISABLED                   (= 0x00000000)  // no adjustment
COUNT SHIFT                (= 0x00000000)
COUNT MASK                 (= 0x0000ffff)  // align this number of OG allocations
COUNT ALL                  (= 0x0000ffff)  // align all OG allocations
COUNT 2                    (= 0x00000002)  // align first two OG allocations
BIT SHIFT                  (= 0x00000010)
BIT MASK                   (= 0x00ff0000)  // force this address bit
BIT 12                     (= 0x000c0000)  // force address bit 12
BIT 16                     (= 0x00100000)  // force address bit 16
VALUE SHIFT                (= 0x00000018)
VALUE MASK                 (= 0x01000000)  // force address bit to this value
VALUE 0                    (= 0x00000000)  // force address bit to 0
VALUE 1                    (= 0x01000000)  // force address bit to 1
FORCE BIT16 VALUE0 COUNT2  (= 0x00100002)  // BIT 16 | VALUE 0 | COUNT 2
FORCE BIT16 VALUE1 COUNT2  (= 0x01100002)  // BIT 16 | VALUE 1 | COUNT 2

Default values for this setting:
DEFAULT:    0x01100002
	COUNT 2                                 
	BIT 16                                  
	VALUE MASK                              

------------------------------------------------------------
OGL WGL FBO CREATE DUMMY WINDOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether or not a dummy window is created for each FBO.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
OGL WGL MESSAGE BOX ON ABORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED
DEFAULT GL:    ENABLED

------------------------------------------------------------
OGL WGL MESSAGE BOX ON GPU DISCONNECT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

HIDE EXIT    (= 0x00000000)  // Hide the dialog and exit silently
SHOW         (= 0x00000001)  // Show the dialog and exit if requested
HIDE NOEXIT  (= 0x00000002)  // Hide the dialog and do not exit

Default values for this setting:
DEFAULT:    HIDE EXIT

------------------------------------------------------------
OGL WIN7BLIT FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Misc options for Win7-blit present path

USE ASYNC BLIT FOR WAFR           (= 0x00000001)  // Use async-blit for WAFR blit only
USE ASYNC BLIT                    (= 0x00000002)  // Use async-blit for all configs
USE ASYNC BLIT FOR DEVICE GROUPS  (= 0x00000004)  // Use async-blit for device groups
USE 3D FOR VSYNC                  (= 0x00000008)  // Only use async-blit when swapInterval == 0
DEVICE GROUPS FORCE P2P READ      (= 0x00000010)  // Force P2P read instead of P2P write
USE MONITORED FENCE               (= 0x00000100)  // Use monitored fence for present sync (win10+)
PREFER ASYNC 3D FOR SCG           (= 0x00000200)  // Prefer async-3D instead of async-blit for SCG present

Default values for this setting:
DEFAULT:    0x0000030D
	USE ASYNC BLIT FOR WAFR                 
	USE ASYNC BLIT FOR DEVICE GROUPS        
	USE 3D FOR VSYNC                        
	USE MONITORED FENCE                     
	PREFER ASYNC 3D FOR SCG                 

------------------------------------------------------------
OGL WRITE INFO LOG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

TRUE   (= 0x00000001)  // Enabled
FALSE  (= 0x00000000)  // Disabled

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
OGL WRITE PROGRAM OBJECT ASSEMBLY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

TRUE   (= 0x00000001)  // Enabled
FALSE  (= 0x00000000)  // Disabled

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
OGL WRITE PROGRAM OBJECT SOURCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

TRUE   (= 0x00000001)  // Enabled
FALSE  (= 0x00000000)  // Disabled

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
OGL WSOPTTEST HARNESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables loading of wsOptTest harness dll

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
OGL WSVA STRAT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Provides fine tuning of WSVA

NO EXTRA OPTIMIZATION    (= 0x00000000)  // Disable all extra optimization
OPT MIXED MODE           (= 0x00000001)  // Allow VBO and nonVBO in an enabled array
OPT HOST MIRROR          (= 0x00000002)  // Mirror SDDR data in cpu memory
OPT IGNORE USER POINTER  (= 0x00000004)  // Applications that pass data on stack wildly reuse the same pointer ranges, disable SDDR in this case

Default values for this setting:
DEFAULT:    0x00000007
	OPT MIXED MODE                          
	OPT HOST MIRROR                         
	OPT IGNORE USER POINTER                 

------------------------------------------------------------
OGL X NV ADAPTER PRESENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE   (= 0x00000000)
AUTO      (= 0x00000001)
NOSYNC    (= 0x00000002)
SYNCIDLE  (= 0x00000003)
SYNCTAG   (= 0x00000004)
SYNCOBJ   (= 0x00000005)

Default values for this setting:
DEFAULT:    AUTO

------------------------------------------------------------
OGL YCBCR 422
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE  (= 0x00000000)  // YCBCR 422 disabled
ENABLE   (= 0x26730422)  // YCBCR 422 enabled

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
OGL YIELD FUNCTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Default yield function to use. Depending on the operating system, not all yield functions may be implemented exactly.

SWITCHTOTHREAD   (= 0x00000000)  // SwitchToThread() - Yield to next waiting thread only
BUSY WAIT        (= 0x00000001)  // Busy Wait - Do not yield the CPU
SLEEP 0MS        (= 0x00000002)  // Sleep(0) - Yield to all waiting threads
SLEEP 1MS        (= 0x00000003)  // Sleep(1) - Yield CPU for approximately 1ms
SLEEP 250US      (= 0x00000004)  // usleep(250) - Sleep for approximately 250 microseconds
SLEEP VARIABLE   (= 0x00000005)  // usleep(hintInfo->desiredDelayMicros) - Sleep requested time, if non-NULL hintInfo
ANDROID DEFAULT  (= 0x00000005)  // Default policy on Android

Default values for this setting:
DEFAULT:    SWITCHTOTHREAD

------------------------------------------------------------
OGL YIELD FUNCTION FAST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The CPU yield technique used when spin-waiting where speed is important.

SWITCHTOTHREAD   (= 0x00000000)  // SwitchToThread() - Yield to next waiting thread only
BUSY WAIT        (= 0x00000001)  // Busy Wait - Do not yield the CPU
SLEEP 0MS        (= 0x00000002)  // Sleep(0) - Yield to all waiting threads
SLEEP 1MS        (= 0x00000003)  // Sleep(1) - Yield CPU for approximately 1ms
SLEEP 250US      (= 0x00000004)  // usleep(250) - Sleep for approximately 250 microseconds
SLEEP VARIABLE   (= 0x00000005)  // usleep(hintInfo->desiredDelayMicros) - Sleep requested time, if non-NULL hintInfo
ANDROID DEFAULT  (= 0x00000005)  // Default policy on Android

Default values for this setting:
DEFAULT:    SWITCHTOTHREAD

------------------------------------------------------------
OGL YIELD FUNCTION SLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The CPU yield technique used when spin-waiting where fairness is important.

SWITCHTOTHREAD   (= 0x00000000)  // SwitchToThread() - Yield to next waiting thread only
BUSY WAIT        (= 0x00000001)  // Busy Wait - Do not yield the CPU
SLEEP 0MS        (= 0x00000002)  // Sleep(0) - Yield to all waiting threads
SLEEP 1MS        (= 0x00000003)  // Sleep(1) - Yield CPU for approximately 1ms
SLEEP 250US      (= 0x00000004)  // usleep(250) - Sleep for approximately 250 microseconds
SLEEP VARIABLE   (= 0x00000005)  // usleep(hintInfo->desiredDelayMicros) - Sleep requested time, if non-NULL hintInfo
ANDROID DEFAULT  (= 0x00000005)  // Default policy on Android

Default values for this setting:
DEFAULT:    SWITCHTOTHREAD

------------------------------------------------------------
OGL YIELD FUNCTION WAIT FOR DC QUEUE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The CPU yield technique used when spin-waiting for the DC queue.

SWITCHTOTHREAD   (= 0x00000000)  // SwitchToThread() - Yield to next waiting thread only
BUSY WAIT        (= 0x00000001)  // Busy Wait - Do not yield the CPU
SLEEP 0MS        (= 0x00000002)  // Sleep(0) - Yield to all waiting threads
SLEEP 1MS        (= 0x00000003)  // Sleep(1) - Yield CPU for approximately 1ms
SLEEP 250US      (= 0x00000004)  // usleep(250) - Sleep for approximately 250 microseconds
SLEEP VARIABLE   (= 0x00000005)  // usleep(hintInfo->desiredDelayMicros) - Sleep requested time, if non-NULL hintInfo
ANDROID DEFAULT  (= 0x00000005)  // Default policy on Android

Default values for this setting:
DEFAULT:    SWITCHTOTHREAD

------------------------------------------------------------
OGL YIELD FUNCTION WAIT FOR FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The CPU yield technique used when spin-waiting for a frame to complete.

SWITCHTOTHREAD   (= 0x00000000)  // SwitchToThread() - Yield to next waiting thread only
BUSY WAIT        (= 0x00000001)  // Busy Wait - Do not yield the CPU
SLEEP 0MS        (= 0x00000002)  // Sleep(0) - Yield to all waiting threads
SLEEP 1MS        (= 0x00000003)  // Sleep(1) - Yield CPU for approximately 1ms
SLEEP 250US      (= 0x00000004)  // usleep(250) - Sleep for approximately 250 microseconds
SLEEP VARIABLE   (= 0x00000005)  // usleep(hintInfo->desiredDelayMicros) - Sleep requested time, if non-NULL hintInfo
ANDROID DEFAULT  (= 0x00000005)  // Default policy on Android

Default values for this setting:
DEFAULT:    SWITCHTOTHREAD

------------------------------------------------------------
OGL YIELD FUNCTION WAIT FOR GPU
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The CPU yield technique used when spin-waiting for the GPU.

SWITCHTOTHREAD   (= 0x00000000)  // SwitchToThread() - Yield to next waiting thread only
BUSY WAIT        (= 0x00000001)  // Busy Wait - Do not yield the CPU
SLEEP 0MS        (= 0x00000002)  // Sleep(0) - Yield to all waiting threads
SLEEP 1MS        (= 0x00000003)  // Sleep(1) - Yield CPU for approximately 1ms
SLEEP 250US      (= 0x00000004)  // usleep(250) - Sleep for approximately 250 microseconds
SLEEP VARIABLE   (= 0x00000005)  // usleep(hintInfo->desiredDelayMicros) - Sleep requested time, if non-NULL hintInfo
ANDROID DEFAULT  (= 0x00000005)  // Default policy on Android

Default values for this setting:
DEFAULT:    SWITCHTOTHREAD

------------------------------------------------------------
OGL ZBC COLOR DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control disabling of ZBC color slots

SHARED CLEARS ONLY  (= 0x80000000)  // disable only clears to buffers that are shared with CDE (MSB set)
DEFAULT HOS OPENGL  (= 0x00007ff8)  // Default value for OpenGL and Vulkan on HOS (see http://nvbugs/1802755)
SLOT MASK           (= 0x00007fff)  // a mask of ZBC slots to disable

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL ZBC TABLE ADD HYSTERESIS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

INSTANTANEOUS  (= 0x00000000)
NEVER          (= 0xffffffff)

Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
OGL ZBC Z DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control disabling of ZBC depth slots

DEFAULT HOS OPENGL  (= 0x00007ffc)  // Default value for OpenGL and Vulkan on HOS (see http://nvbugs/1802755)
SLOT MASK           (= 0x00007fff)  // a mask of ZBC slots to disable

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL ZCULL FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

NONE                            (= 0x00000000)  // Run normal code paths
DISABLE FOR LAYERED             (= 0x00000001)  // Disable zcull for texture arrays/3D textures
DISABLE SUBREGIONS FOR LAYERED  (= 0x00000002)  // Disable zcull subregions for texture arrays/3D textures
NO CTXSWITCH                    (= 0x00000004)  // Do not context-switch Zcull - NV2080 CTRL GR SET CTXSW ZCULL MODE NO CTXSW
DONT DISABLE ZF32 AS Z16        (= 0x00000008)  // nvbugs/2427703 ZF32 AS Z16 gets no zcull for ZF32 depth value < 0.25 but better near 1.0
FORCE DISABLE ZF32 AS Z16       (= 0x00000010)  // nvbugs/2427703 debug bit to disable ZF32 AS Z16 regardless of clear depth

Default values for this setting:
DEFAULT:    0x00000002
	DISABLE SUBREGIONS FOR LAYERED          

------------------------------------------------------------
OGL ZCULL PBUFFER ONLY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ENABLE  (= 0x20189529)  // ZCull only for pbuffers

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OGL ZCULL SUBREGION DISTRIBUTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control the distribution of formats used for zcull subregions from the priority list of formats chosen by the driver.

WIDE             (= 0xd2329e91)  // Best fit of all formats.
NARROW           (= 0xd2329e90)  // Best fit of two neighboring formats.
ANDROID DEFAULT  (= 0xd2329e90)  // Default on Android

Default values for this setting:
DEFAULT:    WIDE

------------------------------------------------------------
OGL ZPREPASS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable optimization to render a z-only pre-pass for opaque geometry

ENABLE LEQUAL     (= 0x00000001)  // Enable the optimization for LEQUAL mode
ENABLE LESS       (= 0x00000002)  // Enable the optimization for LESS mode
DEBUG STATISTICS  (= 0x00000004)  // Print sample counts and timestamps for each pass
DEBUG TOGGLE      (= 0x00000008)  // Render zprepass on alternate frames only
ZCULL ONLY        (= 0x00000010)  // Use zcull-only rendering in the prepass
POSITION ONLY     (= 0x00000020)  // Use position-only vertex shader in the prepass
SW IMPL           (= 0x00000040)  // Force software implementation on hw multipass capable chips
HW IMPL ONLY      (= 0x00000080)  // Only do zprepass on hw multipass capable chips

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OPTIMUS DEBUG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Debug bits for optimus performance

NULL RENDER TRANSPORT                       (= 0x00000001)  // Disable render transport layer  - screen will be black
NULL DISPLAY TRANSPORT                      (= 0x00000002)  // Disable display transport layer - screen will be black
DISABLE CE USAGE                            (= 0x00000004)  // Disable Copy Engine Usage in transport layer for Optimus
DETECT FRONT BUFFER RENDERING MISSING SYNC  (= 0x00000008)  // Detect missing sync and Front Buffer rendering scenarios in MS hybrid 

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OPTIMUS HCLONE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Temporary regkey to enable heterogeneous clone during development. Set it to ALLOWED for apps to be aware of hclone. Set it to ENABLED to turn clone on. Clear ENABLED to turn clone off.

ALLOWED  (= 0x00000001)  // HClone is allowed - must be set before starting app
ENABLED  (= 0x00000002)  // User has entered HClone - can be turned on/off will app is running

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
OPTIMUS MAXAA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum AA we are going to allow for a given application

MIN  (= 0x00000000)
MAX  (= 0x00000010)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
OS VRR APP OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Profile-specific override for OS VRR

ALLOW      (= 0x00000000)  // Honor OS VRR setting
FORCE OFF  (= 0x00000001)  // Deny this app for OS VRR

Default values for this setting:
DEFAULT:    ALLOW

------------------------------------------------------------
OVERLAP COLS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Distance between displays per column. Positive number indicates overlap, negative - gap (in pixels)

NONE  (= 0)  // None

Default values for this setting:
???T0:    0

------------------------------------------------------------
OVERLAP ROWS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Distance between displays per row. Positive number indicates overlap, negative - gap (in pixels)

NONE  (= 0)  // None

Default values for this setting:
???T0:    0

------------------------------------------------------------
OVERRIDE LMEM BYTES PER SM THROTTLE LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If this is set to a value other than zero, the LMEM bytes per SM warp throttling limit will be overridden. Allocation granularity is 128Kb and will be rounded up/enforced by the driver.


Default values for this setting:
DEFAULT:    0x00800000

------------------------------------------------------------
PARTIALTEXFP16ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

PASSIVE                           (= 0xffffffff)
FORCEOFF, DISABLE, OFF, FALSE, 0  (= 0x05584652)
FORCEON, ENABLE, ON, TRUE, 1      (= 0x44737498)

Default values for this setting:
DEFAULT:    PASSIVE

------------------------------------------------------------
PARTIALTEXFP32ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

PASSIVE                           (= 0xffffffff)
FORCEOFF, DISABLE, OFF, FALSE, 0  (= 0x18029049)
FORCEON, ENABLE, ON, TRUE, 1      (= 0x09663533)

Default values for this setting:
DEFAULT:    PASSIVE

------------------------------------------------------------
PARTIALTEXHEURISTIC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x01FFFE00

------------------------------------------------------------
PASCAL A TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

4 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x00002313

------------------------------------------------------------
PASCAL A TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
PASCAL A TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
PASCAL A TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
PASCAL A TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
PASCAL BINNED OCC QUERY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Turn on support for binned pascal queries

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PASCAL ENABLE CLAMP FP BLEND TO MAXVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables clamping of FP Render Target blend results to Max Val

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
PASCAL IQ2M
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Use Inline QMD to Memory for compute dispatch.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PASCAL SCG COMPUTE1 MIN SM COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Min number of SMs which is reserved for compute 1 (async) when more work is pending (GP10x+)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PASCAL SCG COMPUTE1 SM FACTOR
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Percentage of total SM count assigned to compute during SCG, when MAX SM COUNT isn't specified (0.0 to 1.0).


Default values for this setting:
DEFAULT:    0.600000

------------------------------------------------------------
PASCAL SCG USE ALL SMS IN ALL COMPUTE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

controls if MaxSmCount is applied in all compute mode (GP10x+)

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PATH TO NVAPPS XML
------------------------------------------------------------
This key is of type BINARY
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Path to nvapps.xml which used by CPL for storing user profiles.


------------------------------------------------------------
PBSPACEMULTIPLIER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PCITEXHEAPSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
PERF TESLA UNIT SELECTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

NVPMAPI Perf Counter Selection Control for Tesla

TPC MASK       (= 0x000000ff)
ROP MASK       (= 0x0000ff00)
FIRST SM MASK  (= 0x000f0000)
LAST SM MASK   (= 0x00f00000)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PHYSXINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLED, OFF, 0, FALSE  (= 0x34534064)
ENABLED, ON, 1, TRUE     (= 0x24545582)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
PHYSX APPLICATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Set for PhysX applications

OFF, 0, FALSE, DISABLED, NO  (= 0x00000000)  // Default
ON, 1, TRUE, ENABLED, YES    (= 0x00000001)  // PhysX application

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PRECISIONDEMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF      (= 0x00000000)
DEMOTE   (= 0x00000001)
DISABLE  (= 0x00000002)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PREFERRED PSTATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Preferential power states

ADAPTIVE                       (= 0x00000000)
PREFER MAX                     (= 0x00000001)
DRIVER CONTROLLED              (= 0x00000002)
PREFER CONSISTENT PERFORMANCE  (= 0x00000003)
PREFER MIN                     (= 0x00000004)  // Currently Unsupported
OPTIMAL POWER                  (= 0x00000005)
MIN                            (= 0x00000000)
MAX                            (= 0x00000005)

Default values for this setting:
DEFAULT:    OPTIMAL POWER
DEFAULT GL:    DRIVER CONTROLLED

------------------------------------------------------------
PREFERRED Z16 PAGEKIND
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

PASCAL B+: preferred page kind for Z16 surfaces

KIND 2C   (= 0x00000001)
KIND 2CZ  (= 0x00000002)

------------------------------------------------------------
PREFER DRIVER CREATED SYNCOBJ INTERCHANNEL SYNC BUG 2867804
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Use driver created sync objs in InterChannelSync, as a WAR for msaction bug 2867804 in Vibranium hws. Noop in 19577+ hws or in non-hws.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PRERENDERLIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the maximum number of presents that can be queued before CPU blocks.

MIN             (= 0x00000000)
MAX             (= 0x000000ff)
APP CONTROLLED  (= 0x00000000)  // The present limit will be controlled by application or driver adjustments.

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
PRERENDERLIMIT DEVFLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

DEFAULT                    (= 0x00000000)  // Default
MASK                       (= 0x00000003)  // Mask of valid values
DISABLE NOTIFIER WAIT      (= 0x00000001)  // Always spin instead of using notifiers and events to wait on the present limit.
ENABLE NOTIFIER VSYNC OFF  (= 0x00000002)  // Enable notifier event wait even when vsync is off

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 
	DEFAULT                                 

------------------------------------------------------------
PRESERVEZONRTCHANGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Causes depth buffer to be preserved in switching between super and normal reps when the render target is changed. Use to diagnose major corruption, especially with antialiasing.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PREVENTNEGATIVESQRT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Emit 'max tmp, 0.0, arg' before an RSQ call to prevent NaN.

OFF              (= 0x00000000)  // Disable
VERTEX SHADER    (= 0x00000001)  // Enable prevent negative SQRT in VS
GEOMETRY SHADER  (= 0x00000002)  // Enable prevent negative SQRT in GS
PIXEL SHADER     (= 0x00000004)  // Enable prevent negative SQRT in PS
HULL SHADER      (= 0x00000008)  // Enable prevent negative SQRT in HS
DOMAIN SHADER    (= 0x00000010)  // Enable prevent negative SQRT in DS
COMPUTE SHADER   (= 0x00000020)  // Enable prevent negative SQRT in CS
MASK             (= 0x0000003f)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     
	OFF                                     

------------------------------------------------------------
PREVENT UI AF OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This setting tells our UI that it cannot override Anisotropic filtering for this application

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PRIMARY COMPRESSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls the use of memory compression for primaries.

ENABLE ALL           (= 0x00000000)  // Compression will be used for any primary.
DISABLE SINGLE GPU   (= 0x00000001)  // Disable compression for primaries in single GPU.
DISABLE SLI          (= 0x00000002)  // Disable compression for primaries for SLI.
DISABLE SFR WITH CE  (= 0x00000004)  // Disable compression for primaries when SFR is in use and CE is used for present.
DISABLE DX12         (= 0x00000008)  // Disable for DX12.
DISABLE DX11 SFR     (= 0x00000010)  // Disable for DX11 if SFR is used.
DISABLE DX12 SFR     (= 0x00000020)  // Disable for DX12 if SFR is used.
DISABLE ALL          (= 0x0000003f)  // Disable compression for primaries in all modes.
ALLOW PRIMARY GPU    (= 0x00010000)  // Allow the allocation in the Primary GPU to use compression at all times
ALLOW PRE TURING     (= 0x00020000)  // Allow primary compression on pre-Turing chips, moslty for testing purposes

Default values for this setting:
DEFAULT:    DISABLE DX12 SFR

------------------------------------------------------------
PRI SETTINGS
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Pass PRI registers to set. String should contain multiple key-value-mask triplets in hexadecimal notation, separated by a semi-colon. Please use format 'HexPRIOffset1 HexValue1 HexMask1; HexPRIOffset1 HexValue2 HexMask2;...'. RM will assert if illegal offsets are used or if the PRIs are not in the allowList.  Very little validation is performed here on the actual values, so anything incorrect may lead to TDR's/Failures. Available Kepler+ and only on Develop/Debug drivers


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
PROFILEFOG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x64321281)
ON, 1, TRUE, ENABLED     (= 0x44283701)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PROMOTE WRITE ONLY DYNAMIC IB TO VIDMEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables/Disables performance strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PROVIDE QUAD TEX STATE TO COP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Pass texture / sampler state info to COP that describes Quad Communication for TEX instructions

OFF, 0, FALSE, DISABLED  (= 0x68331468)
ON, 1, TRUE, ENABLED     (= 0x69843965)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PSVERSIONCAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

cap pixel shader version to this value (expressed in D3D-style, i.e. version 1.4 == 0xffff0104)

MIN  (= 0xffff0000)
MAX  (= 0xffffffff)

Default values for this setting:
DEFAULT:    MAX

------------------------------------------------------------
PS ADDITIONAL MIP LOD BIAS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A LOD bias added onto the sampler state's MipLODBias value (value here is scaled by 256, so to add 2.0f, set this key to 512)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS ALPHABETA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Set the behavior for Alpha/Beta performance strategy (static or dynamic)

STATIC          (= 0x00000000)  // The driver always uses Alpha fraction set via PS ALPHABETA FRACTION regkey
DYNAMIC SHADER  (= 0x00000001)  // The driver adjusts a shader unique Alpha fraction via AlphaBeta clocks
DYNAMIC VBIB    (= 0x00000002)  // The driver adjusts a vb/ib ID unique Alpha fraction via AlphaBeta clocks

Default values for this setting:
DEFAULT:    STATIC

------------------------------------------------------------
PS ALPHABETA FRACTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Fixed Alpha fraction to use when PS ALPHABETA is in static mode

MIN  (= 0x00000000)
MAX  (= 0x000000ff)

Default values for this setting:
DEFAULT:    0x0000003F

------------------------------------------------------------
PS ALPHABETA STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS AMPERE SURF TILE MAP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enable/disable Dirty Tile Map opts

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS AMPERE SURF TILE MAP ENABLE HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify an OS RT hash for targeted debug


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS AMPERE SURF TILE MAP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags used to control TileMapKernel/consumer shader behavior and code-generation. Please note SUQUERY PER THREAD SUM and TILE PER THREAD SUM are mutually exclusive.

CONSUMER OPTIMIZE FOR TLD4                  (= 0x00000001)  // Codegen optimized for TLD4 vectorization
CONSUMER COMPARE HEADER POOL INDICES        (= 0x00000002)  // Compare header pool indices instead of all header dwords
USE CODEGEN HINTS                           (= 0x00000004)  // Use slot-specific codegen hints. Tilemap kernel verifies if these hold true dynamically. Consumer codegen is specialized for these settings.
TMKERNEL ENABLE TILE PER THREAD SUM         (= 0x00000008)  // Enable summarization on a tile per thread basis
TMKERNEL POST SUMMARIZE SEPARATELY          (= 0x00000010)  // Run post summarization in a dedicated pass
ENABLE VA RANGE TRACKING                    (= 0x00000020)  // Enable VA Range Tracking in TMKERNEL and consumer shader
PREFER PLC FOR ALL PAGES                    (= 0x00000040)  // Ask KMD to disable PLC WAR by opting into PLC for all pages
DISABLE CONSUMER CODEGEN                    (= 0x00001000)  // Debug knob to disable consumer shader transforms.
OPTIMIZE FOR ALLCLEAN TILES                 (= 0x00002000)  // Tilemap kernel and consumer changes to optimize for fully clean SRVs. Each lookup has 3 paths: allClean, clean after STM lookup, or dirty.
CONSUMER ALLCLEAN OR DIRTY                  (= 0x00004000)  // Codegen option to make each lookup have only 2 paths: allClean or dirty (effective only when OPTIMIZE FOR ALLCLEAN TILES is set).
TMKERNEL ENABLE SHMEMOPT FOR LINEAR FILTER  (= 0x00008000)  // Apply shared mem opt while constructing tilemap of a linear filtered texture
CONSUMER CODE SPECIALIZE FOR ZEROS          (= 0x00010000)  // Enable code specialization if clean value is zero and used in a multiply or similar op
CONSUMER CHECK TILEMAP READINESS            (= 0x00020000)  // Check tilemap readiness with an explicit global load in the consumer. If not set, readiness guaranteed implicitly through QMD semaphore synchronization.
TMKERNEL ENABLE SUQUERY PER THREAD SUM      (= 0x00040000)  // enable suquery parallelization summarization aka each query tile is issued per thread instead of tile(which may consist several query tiles) per thread 
TMKERNEL LOOP OVER TEXSLOTS                 (= 0x00080000)  // loop over texslots with fewer CTAs per grid (for all chosen kernels)

Default values for this setting:
DEFAULT:    0x0000003F
	CONSUMER OPTIMIZE FOR TLD4              
	CONSUMER COMPARE HEADER POOL INDICES    
	USE CODEGEN HINTS                       
	TMKERNEL ENABLE TILE PER THREAD SUM     
	TMKERNEL POST SUMMARIZE SEPARATELY      
	ENABLE VA RANGE TRACKING                

------------------------------------------------------------
PS AMPERE SURF TILE MAP HELPER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Various helper flags to control develop/debug functionality.

GATHER GENERAL STATS  (= 0x00000001)  // Collect miscellaneous non-GPU stats
GATHER PROFILE DATA   (= 0x00000002)  // Profile tilemap data in both construction kernel and consumer shader
DISABLE SLOT0         (= 0x00000010)  // Disable slot 0 of static specification for debugging purposes.
DISABLE SLOT1         (= 0x00000020)  // Disable slot 1 of static specification for debugging purposes.
DISABLE SLOT2         (= 0x00000040)  // Disable slot 2 of static specification for debugging purposes.
DISABLE SLOT3         (= 0x00000080)  // Disable slot 3 of static specification for debugging purposes.
DISABLE SLOT4         (= 0x00000100)  // Disable slot 4 of static specification for debugging purposes.
DISABLE SLOT5         (= 0x00000200)  // Disable slot 5 of static specification for debugging purposes.
DISABLE SLOT6         (= 0x00000400)  // Disable slot 6 of static specification for debugging purposes.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS AMPERE SURF TILE MAP PROFILE FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Filename containing profile information for SurfTileMap perfstrat.


------------------------------------------------------------
PS ANSEL DEBUGGING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x18f3902c)
ON, 1, TRUE, ENABLED     (= 0x18f3902d)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS APPSHADEROPT BIOSHOCK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000013)
ON, 1, TRUE, ENABLED     (= 0x95ef21de)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS APPSHADEROPT CANIGNOREINF
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override canIgnoreInf compiler option

OFF, 0, FALSE, DISABLED  (= 0x97395a35)  // (DEFAULT) don't ignore Inf's
ON, 1, TRUE, ENABLED     (= 0xde325a38)  // ignore Inf's

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS APPSHADEROPT CANIGNORENAN
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override canIgnoreNaN compiler option

OFF, 0, FALSE, DISABLED  (= 0x97395a35)  // (DEFAULT) don't ignore NaN's -> NaN*0=NaN
ON, 1, TRUE, ENABLED     (= 0xde325a38)  // ignore NaN's -> x*0=0

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS APPSHADEROPT CANIGNORESIGNEDZERO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override CanIgnoreSignedZero compiler option

OFF, 0, FALSE, DISABLED  (= 0x97395a35)  // (DEFAULT) don't ignore SignedZero's
ON, 1, TRUE, ENABLED     (= 0xde325a38)  // ignore SignedZero's

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS APPSHADEROPT CONVERT OR2ADD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

converts OR inst into ADD (so LD*/ST* vectorization can kick in)

OFF, 0, FALSE, DISABLED  (= 0x90f95a35)
ON, 1, TRUE, ENABLED     (= 0xf3f28a38)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS APPSHADEROPT PROMOTE1DTEXTO2DTEX
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable / Disable promote 1D Textures to 2D Textures. Workaround for Devil May Cry 4

OFF, 0, FALSE, DISABLED  (= 0x97395a35)  // (DEFAULT) Don't promote 1D to 2D texture
ON, 1, TRUE, ENABLED     (= 0xde325a38)  // Promote 1D to 2D texture

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS APPSHADEROPT REFACTOR HDAO SAMPLE COMPUTATION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

compute common sample offset computation just once

OFF, 0, FALSE, DISABLED  (= 0x90f95a35)
ON, 1, TRUE, ENABLED     (= 0xf3f28a38)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS APP SPECIFIC HACKS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows you to specifically disable app specific hacks, turning this off will disable app id'ing heuristically. Id by exe name is unaffected.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS APP SPECIFIC HACKS CRYSIS3 FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Allows toggling of individual Crysis3 app specific hacks.

DISABLE ALL        (= 0x00000004)  // Disables activation of the perfstrat
DISABLE BOKEH DOF  (= 0x00000001)  // Disable shader replacement for QUAD BOKEH DOF draw call
DISABLE SSDO       (= 0x00000002)  // Disable shader replacement for SSDO draw call

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS APP SPECIFIC HACKS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Allows you to control the behaviour of app specific hacks perfstrategy.

VERBOSE SPEW  (= 0x00000001)  // if set, verbose spew is enabled
DEFAULT       (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
PS APP SPECIFIC HACKS FROSTBITE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Allows toggling of individual Frostbite-specific hacks. Assumptions are made about this regkey in AppSpecificHackFrostbite::create - use DISABLE keys only!

DISABLE ALL                           (= 0x10000000)  // Disables activation of the perfstrat
DISABLE MULTIPASS                     (= 0x00000001)  // Disable simple/complex multi-pass pixel shader opt
DISABLE MAX REG TARGET                (= 0x00000002)  // Disable maxregtarget overrides
DISABLE USER CLIP PLANE WAR           (= 0x00000004)  // Disable user-clip-plane WAR
DISABLE LIGHT TILE EARLY EXIT         (= 0x00000008)  // Disable compute light tile shader early exit opt
FORCE STENCIL GENERATE ON EVERY DRAW  (= 0x00000010)  // Force the stencil buffer used by simple/complex pixel shaders to be re-generated for every draw (not just when 'dirty')
DISABLE MSAA SHADOW OPT               (= 0x00000020)  // Disable shadow optimization for simple pixels in BF4
DISABLE SPRITE DOF SPLAT              (= 0x00000040)  // Disable SpriteDofSplat optimization for BF4
DISABLE SSSCONV                       (= 0x00000080)  // Disable SSSConv optimization for BF4
DISABLE HBAO BLUR                     (= 0x00000100)  // Disable HBAO Blur replacement optimization for SWBF
DISABLE LIGHT TILE CLEAR              (= 0x00000200)  // Disable LightTile clear optimization for SWBF

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS APP SPECIFIC HACK AMDHDAO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows enable/disable of appSpecificHackAMDHDAO perfstrat.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Perfstrat disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Perfstrat enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS APP SPECIFIC HACK COD BO3
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows enable/disable of appSpecificHackCallOfDutyBlackOps3 perfstrat.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Perfstrat disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Perfstrat enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS APP SPECIFIC HACK METRO LAST LIGHT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows enable/disable of appSpecificHackMetroLastLight perfstrat.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Perfstrat disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Perfstrat enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS APP SPECIFIC HACK RE5
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows enable/disable of appSpecificHackRE5 (Resident Evil 5) perfstrat.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Perfstrat disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Perfstrat enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0xa2b53761)
ON, 1, TRUE, ENABLED     (= 0x79292610)

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

IGNORE LOAD BALANCING                           (= 0x00000001)  // Ignore load-balancer, apply always
IGNORE QUOTAS                                   (= 0x00000002)  // Ignore quotas
IGNORE GARBAGE COLLECT THRESHOLD                (= 0x00000004)  // Ignore fill status and garbage collect every frame
DISABLE GARBAGE COLLECTION                      (= 0x00000008)  // Disables garbage collection
COMPILE IMMEDIATELY                             (= 0x00000100)  // Stall in the driver thread until the compile result arrives
LIMIT SHADER CREATION TO ONE THREAD             (= 0x00000200)  // Limit number of spawned threads to one (rather than the number of cores) for async creations
LIMIT OPTIMIZED SHADER RECOMPILE TO ONE THREAD  (= 0x00000400)  // Limit number of spawned threads to one (rather than the number of cores) for optimized shader recompiles
DISABLE MULTI APP THREAD HEURISTIC              (= 0x00000800)  // Disable heuristic for detecting multiple app threads compiling shaders
DISABLE OPTIMIZED SHADER RECOMPILE              (= 0x00001000)  // Recompile multiple optimized versions of shaders
DISABLE SHADER CREATION                         (= 0x00002000)  // Compile multiple shaders in parallel at creation
FORCE NV THREADS                                (= 0x00010000)  // Forces the perfstrat to use NvGenericThreadUtils as its thread pool.
DISABLE BACKGROUND PROCESSING CAPS              (= 0x00020000)  // Sets the caps bit for background processing support to false, D3D12DDICAPS TYPE D3D12 OPTIONS::BackgroundProcessingSupported.

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER FLAGS DX12
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE DEFAULT PSO ASYNC COMPILE   (= 0x00000004)  // Disable asynchronous creation of default PipelineStateObjects
DISABLE OPTIONAL PSO ASYNC COMPILE  (= 0x00000008)  // Disable asynchronous creation of optional PipelineStateObjects
DISABLE DEFAULT SO ASYNC COMPILE    (= 0x00000010)  // Disable asynchronous creation of default StateObjects

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER MAX CONCURRENT COMPILES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of requested compiles outstanding at any point in time (DX10 only)


Default values for this setting:
DEFAULT:    0x7FFFFFFF

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER MAX DEFAULT OUTSTANDING MEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Amount of DXASM bytes outstanding at any point in time for default shader compilation (DX10 only)


Default values for this setting:
DEFAULT:    0x00800000

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER MAX OPTIONAL OUTSTANDING MEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Amount of DXASM bytes outstanding at any point in time for optional shader compilation (DX10 only)


Default values for this setting:
DEFAULT:    0x00100000

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER MAX OPTIONAL THREADS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max optional shader compilation threads allowed


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER PENDING FRAME LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Frames a pending compilation must be unreferenced for garbage collection to pick it up


Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER PER FRAME BACKGROUND LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of microseconds per frame to spend setting up background async shaders


Default values for this setting:
DEFAULT:    0x00001000

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER TRACK STACK USAGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0xa2b53761)
ON, 1, TRUE, ENABLED     (= 0x79292610)

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER UNUSED FRAME LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Frames shader must be unreferenced for garbage collection to pick it up. && with UNUSED TIME LIMIT


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
PS ASYNC SHADER SCHEDULER UNUSED TIME LIMIT
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Time (sec) shader must be unreferenced for garbage collection to pick it up. && with UNUSED FRAME LIMIT


Default values for this setting:
DEFAULT:    5.000000

------------------------------------------------------------
PS AUTOMIPMAP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x47476671)
ON, 1, TRUE, ENABLED     (= 0x76475021)

------------------------------------------------------------
PS AUTOMIPMAP TMAA
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x47476671)
ON, 1, TRUE, ENABLED     (= 0x76475021)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS AUTOVRS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

AutoVRS - App allowlisted status

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS AUTOVRS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Defines whether to allow AutoVRS Perfstrat only for VR games or not

OFF, 0, FALSE           (= 0x00000000)
DISABLE STEREO          (= 0x00000001)  // Disables stereo & renders Mono
DISABLE CUBEMAP SS      (= 0x00000002)  // Disables supersampling of cubemaps
INVERTED WINDOW RENDER  (= 0x00000004)  // Inverted Window rendering

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS AUTOVRS FOVEA ELLIPSE AXESRATIO
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the ratio of width to height


Default values for this setting:
DEFAULT:    1.000000

------------------------------------------------------------
PS AUTOVRS FOVEA SIZE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the percentage of rendertarget area to be covered (Value in percentage)


Default values for this setting:
DEFAULT:    50.000000

------------------------------------------------------------
PS AUTOVRS GAZE USAGE ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Defines whether to use gaze data for SRRV

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
PS AUTOVRS HOTKEYS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

AutoVRS - Hotkey Enable/Disable

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS AUTOVRS INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

AutoVRS - Indicator Enable/Disable

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS AUTOVRS OPTIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

AutoVRS - Configuration Options

DISABLED           (= 0x00000000)  // Off
FORCED ON          (= 0x00000001)  // Enable Fixed Foveated Supersampling
GPU ADAPTIVE ON    (= 0x00000002)  // Enable GPU Adaptive VRS - Supersampling
FORCED FULLSCREEN  (= 0x00000003)  // Enable Fullscreen Supersampling

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
PS AUTOVRS OVERRIDE LOADBALANCE TARGETS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Define whether to use HMD's refresh rate or custom values supplied via TARGET keys

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS AUTOVRS SHADING MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

AutoVRS - Shading Mode

SR NONE            (= 0x00000000)  // No AutoVRS
SR CONSTANT 1x1    (= 0x00000001)  // Fullscreen shading rate 1x1
SR CONSTANT 1x2    (= 0x00000002)  // Fullscreen shading rate 1x2
SR CONSTANT 2x1    (= 0x00000003)  // Fullscreen shading rate 2x1
SR CONSTANT 2x2    (= 0x00000004)  // Fullscreen shading rate 2x2
SR CONSTANT 2x4    (= 0x00000005)  // Fullscreen shading rate 2x4
SR CONSTANT 4x2    (= 0x00000006)  // Fullscreen shading rate 4x2
SR CONSTANT 4x4    (= 0x00000007)  // Fullscreen shading rate 4x4
SR CONSTANT 2xSS   (= 0x00000008)  // Fullscreen shading rate 2xSS
SR CONSTANT 4xSS   (= 0x00000009)  // Fullscreen shading rate 4xSS
SR CONSTANT 8xSS   (= 0x0000000a)  // Fullscreen shading rate 8xSS
SR CONSTANT 16xSS  (= 0x0000000b)  // Fullscreen shading rate 16xSS

Default values for this setting:
DEFAULT:    SR NONE

------------------------------------------------------------
PS AUTOVRS TARGET GPUPERCENT
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the target GPU render time as percentage of available per-frame time - Load balancing


Default values for this setting:
DEFAULT:    0.750000

------------------------------------------------------------
PS AUTOVRS VR CHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Defines whether to allow AutoVRS Perfstrat only for VR games or not

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
PS BAD BEHAVIOR DETECTOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

controls GPU-based detection of poor DX12 behavior

OFF, 0, FALSE, DISABLED  (= 0xa2b53761)
ON, 1, TRUE, ENABLED     (= 0x79292610)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS BASIC STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x91861384)
ON, 1, TRUE, ENABLED     (= 0x32788543)

------------------------------------------------------------
PS BASIC STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

STATS      (= 0x00000001)
MEMSPEEDS  (= 0x00000002)

------------------------------------------------------------
PS BINKVIDEO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

This key is the global enable for Bink video WARs

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS BLENDOPT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enable/disable ps blendopt

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS BLENDOPT FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Manage blend/alpha optimizations settings

DISABLE FLOAT PIXEL KILLS                       (= 0x00000001)  // float pixel kills (suppression of destination writes when SrcCoeff == 0.0)
DISABLE ZERO TIMES ANYTHING IS ZERO             (= 0x00000002)  // Zero times anything is zero (suppression of destination reads when DstCoeff == 0.0)
DISABLE BLENDOPT IN SHADER                      (= 0x00000004)  // kill pixels with color/alpha not affecting final blended image in shader
DISABLE ALPHATEST IN SHADER                     (= 0x00000008)  // kill pixels with an alpha that will fail the alpha test (DX9 only)
DISABLE ROUNDING IN BLENDOPT                    (= 0x00000010)  // Disables the addition/subtraction of a delta value when comparing alpha/color for kill
DISABLE EARLY OUT ALPHA TEST                    (= 0x00000020)  // Disable early-out on alpha sources
DISABLE HW ALPHA TEST WITH ALPHATEST IN SHADER  (= 0x00000040)  // Disable HW alpha test when using in-shader alpha test
DISABLE HW BLENDOPT                             (= 0x00000080)  // Disable blendopts in HW (unconditionally) (DX10 only)
DISABLE DEPTH STENCIL WRITE CHECK FOR BLENDOPT  (= 0x00000100)  // Apply blendopt even if depth/stencil writes are enabled
DISABLE API MANDATED EARLYZ FOR BLENDOPT        (= 0x00000200)  // Don't set API-mandated EarlyZ when blendopt is applied
DISABLE RENDERTARGET FORMAT CHECK FOR BLENDOPT  (= 0x00000800)  // Disable pseudo-64 rendertarget format check for blendopt
SWALLOW ROP                                     (= 0x01000000)  // set the PROP DEBUG1 SWALLOW ROP PRI
DISABLE PROP DEBUG1 PRI WRITE                   (= 0x02000000)  // Avoid writing to the NV PGRAPH PRI GPCS PROP DEBUG1 register . Effectively leaves BLENDOPT and SWALLOW ROP to default values. GA100 needs this for HW bug http://nvbugs/2702359 

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS BLENDOPT FP16 ROUNDING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Epsilon to use on FP16 bendopt targets for compare-to-zero. NOTE: this is FP32 in  hex  form! (e.g, set 0x3F800000 for 1.0f)


------------------------------------------------------------
PS BLENDOPT MAX ALPHA TEST DEPENDENCY CHAIN
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

(DX9) Maximum length of the dependency chain computing the final alpha result when applying alpha test opt (given as a percentage, 0-100)

MIN  (= 0x00000000)
MAX  (= 0x00000064)

Default values for this setting:
DEFAULT:    0x00000019

------------------------------------------------------------
PS BLENDOPT MAX CHAIN EARLY OUT ALPHA TEST
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold for maximum number of instructions in the dependency chain between alpha write and texture source


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
PS BLENDOPT MAX INST COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold for maximum number of (nvInst) instructions in a blend-optimized shader


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
PS BLENDOPT MAX RT COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of rendertargets that blendopt will be simultaneously applied to


------------------------------------------------------------
PS BLENDOPT MIN INST COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold for minimum number of instructions in an alphatest-optimized shader


Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
PS BM DEFER DESTROY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

WDDM1.0+ DX9/DX10

OFF, 0, FALSE, DISABLED  (= 0x02656393)
ON, 1, TRUE, ENABLED     (= 0x02166322)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS BM DEFER DESTROY ASYNC FREE BATCH SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS BM DEFER DESTROY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

WDDM1.0+ DX9/DX10

DISABLE GLOBAL RENAMING           (= 0x00000001)
ALLOW GLOBAL RENAMING PITCH ONLY  (= 0x00000002)
DISABLE ASYNC FREES               (= 0x00000004)
DISABLE ALLOC RECYCLING           (= 0x00000010)
DISABLE PENDING ALLOC RECYCLING   (= 0x00000020)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS BM DEFER DESTROY MAX DEFERRED
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Vista DX9/DX10


------------------------------------------------------------
PS BM DEFER DESTROY MAX RENAMED
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Vista DX9/DX10


------------------------------------------------------------
PS BM DEFER DESTROY MAX RENAMED NONVID
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Vista DX9/DX10


------------------------------------------------------------
PS BM FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Vista/XP DX9/DX10

DISABLE SUBALLOCATION           (= 0x00000001)  // DX9/DX10 (Vista only, for XP use NOSUBALLOC)
ALLOW SUBALLOCATION PITCH ONLY  (= 0x00000002)  // DX9/DX10 (Vista only)
DISABLE LOCK CACHING            (= 0x00000004)  // DX9/DX10 (Vista only)
DISABLE RENAMING                (= 0x00000008)  // DX9/DX10 (Vista/XP)
FORCE FLUSH ON LOCK             (= 0x00000010)  // DX9      (Vista only)
ALLOW LARGE SUBALLOCATION       (= 0x00000020)  // DX9/DX10 Allow larger suballocation thresholds than MS wants
DISABLE OFFER SMALL BLOCKS      (= 0x00000040)  // DX9/DX10 Disable offering of suballocated Blocks
DISABLE INTERNAL OFFER RECLAIM  (= 0x00000080)  // DX9      Disable internal Offer/Reclaim
DISABLE ALL OFFER RECLAIM       (= 0x00000100)  // DX9      Disable all Offer/Reclaim

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS BUFFER PLACEMENT CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

PREFER CPU VISIBLE    (= 0x00000001)
PREFER CPU INVISIBLE  (= 0x00000002)
FORCE CPU VISIBLE     (= 0x00000004)
FORCE CPU INVISIBLE   (= 0x00000008)
PREFER VID            (= 0x00001000)
PREFER HOST           (= 0x00002000)
PREFER CACHABLE       (= 0x00004000)
PREFERS VIDMEM SLOW   (= 0x00008000)
FORCE VID             (= 0x00100000)
FORCE HOST            (= 0x00200000)
FORCE CACHABLE        (= 0x00400000)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS BUFFER PLACEMENT TARGET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

USAGE IMMUTABLE            (= 0x00000001)
USAGE DEFAULT              (= 0x00000002)
USAGE DYNAMIC              (= 0x00000004)
CPU READ                   (= 0x00001000)
NO CPU READ                (= 0x00002000)
VERTEX BUFFER              (= 0x00100000)
INDEX BUFFER               (= 0x00200000)
CONSTANT BUFFER            (= 0x00400000)
SHADERRESOURCE BUF 1D      (= 0x00800000)
ALL VERTEX BUFFER          (= 0x00103007)
ALL INDEX BUFFER           (= 0x00203007)
ALL CONSTANT BUFFER        (= 0x00403007)
ALL SHADERRESOURCE BUF 1D  (= 0x00803007)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS CAN VECTORIZE TRACKER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS CATALOG ID
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This should be the ID for the object you want to control as set by PS CATALOG OBJECT and PS CATALOG MODE.


------------------------------------------------------------
PS CATALOG MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

DONOTHING, DO-NOTHING, NOTHING, 0           (= 0x00000000)  // Disables the object ID code. (This is the default)
NORENDER, NO RENDER, NO-RENDER, NO          (= 0x00000001)  // Do not render the object specified by PS CATALOG OBJECT and PS CATALOG ID, but render everything else.
BLINK                                       (= 0x00000002)  // Switch between rendering and non-rendering of the object so that it blinks.
ONLYRENDER, ONLY RENDER, ONLY-RENDER, ONLY  (= 0x00000003)  // Only draw the specified object, and nothing else.
BREAK, BREAKPOINT, BP                       (= 0x00000004)  // Breakpoint (int 3) when the specified object is rendered.

------------------------------------------------------------
PS CATALOG OBJECT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

VERTEXBUFFER, VERTEX BUFFER, VERTEX-BUFFER, VB  (= 0x00000000)  // Object is a vertex buffer. Use PS CATALOG ID to specify the specific ID.
VERTEXSHADER, VERTEX SHADER, VERTEX-SHADER, VS  (= 0x00000001)  // Object is a vertex shader. Use PS CATALOG ID to specify the specific ID.
PIXELSHADER, PIXEL SHADER, PIXEL-SHADER, PS     (= 0x00000002)  // Object is a pixel shader. Use PS CATALOG ID to specify the specific ID.
TEXTURE, TEX                                    (= 0x00000003)  // Object is a texture. Use PS CATALOG ID to specify the specific ID.
TRILINEAR, TRILIN                               (= 0x00000004)  // Object uses trilinear filtering. Use PS CATALOG ID to specify the specific ID.
INDEXBUFFER, INDEX BUFFER, INDEX-BUFFER, IB     (= 0x00000005)  // Object is an index buffer. Use PS CATALOG ID to specify the specific ID.
PS TEXFILTER                                    (= 0x00000006)  // Object has had its aniso adjusted by PS TEXFILTER. Use PS CATALOG ID to specify the specific ID.

------------------------------------------------------------
PS CATALOG STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

VBINFO   (= 0x00000001)  // Print a list of VBs, their size, stride, associated pixel shaders, vertex shaders, textures and texture formats.
VBSIZES  (= 0x00000002)  // Just print a list of the VBs and their sizes.
VBTABLE  (= 0x00000004)  // Similar to VBSizes but mainly for DEBUG. Used with the App identification code.
TEXINFO  (= 0x00000010)  // ??
VSINFO   (= 0x00000100)  // ??
IBINFO   (= 0x00001000)  // ??

------------------------------------------------------------
PS CBC COMPRESSION HEURISTICS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to control cbc compression heuristic

ALLOW TARGETED SMALL SURF COMPRESSION  (= 0x00000001)  // compress small surfaces(currently on GA10x+)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS CBC MISS THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum size in MB(for e.g. 32*1024*1024 aka 0x2000000) of resource for which CBC needs to be enabled, by default driver will pick a size based on CBC coverage size of an Asic


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS CBC MISS THRESHOLD MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Which resource to pick for application of our CBC Miss Threshold

APPLY TO ALL TEX UAV       (= 0x00000001)  // Apply cbc miss threshold to all Textures and UAV's
APPLY TO ALL RENDERTARGET  (= 0x00000002)  // Apply cbc miss threshold to all renderTargets
APPLY TO ALL DEPTH         (= 0x00000004)  // Apply cbc miss threshold to all depth buffers

Default values for this setting:
DEFAULT:    APPLY TO ALL TEX UAV

------------------------------------------------------------
PS CE BLIT STAGED UPLOAD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Use async CE for staged upload blits

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS CHUNKER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Turnes the Chunker perf strat on or off.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
PS CHUNKER BLEND BUCKET MAX VERTICES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of vertices that can be chunked when using CHUNK ALL BLENDING DRAW CALLS


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS CHUNKER FORCE ROP READ EVICTS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Forces ROP reads to be evicted with a specific priroty.

CHUNKER EVICT FIRST   (= 0x00000000)
CHUNKER EVICT NORMAL  (= 0x00000001)
CHUNKER EVICT LAST    (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000000
	CHUNKER EVICT FIRST                     

------------------------------------------------------------
PS CHUNKER FORCE ROP WRITE EVICTS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Forces ROP writes to be evicted with a specific priroty.

CHUNKER EVICT FIRST   (= 0x00000000)
CHUNKER EVICT NORMAL  (= 0x00000001)
CHUNKER EVICT LAST    (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000000
	CHUNKER EVICT FIRST                     

------------------------------------------------------------
PS CHUNKER INV FRACTION OF SCREEN SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the inverse fraction of the screen size threshold for CHUNK FULLSCREEN DRAW CALLS.


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
PS CHUNKER PIXEL APP HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies the app hash to be chunked


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS CHUNKER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the size of the screen chunks for chunker. Chunks are NxN where N is the regkey value.


Default values for this setting:
DEFAULT:    0x00000080

------------------------------------------------------------
PS CHUNKER USE SEMAPHORE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

force a semaphore acquire between each chunked draw

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS CLEAR SKIP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS CLEAR SKIP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE SKIP COLOR            (= 0x00000001)
DISABLE SKIP DEPTH            (= 0x00000002)
DISABLE SKIP STENCIL          (= 0x00000004)
DISABLE SKIP UNORDEREDACCESS  (= 0x00000008)
DISABLE SKIP MASK             (= 0x0000000f)
DISABLE RECT TRACKING         (= 0x00000100)
DUMP LOG TO FILE              (= 0x80000000)  // dump all perfstrat decisions to a file
DUMP LOG TO DEBUGGER          (= 0x40000000)  // dump all perfstrat decisions to the debugger

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS COMPRESSION FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This is the filename containing the compression settings


------------------------------------------------------------
PS COMPRESSION FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is the bitfield of flags altering PS COMPRESSION behaviour

REALLOCATE       (= 0x00000001)  // Enable reallocation
FAVOR COLOR      (= 0x00000002)  // During reallocation, favor color over Z
IGNORE CONTENTS  (= 0x00000004)  // Ignore the fact that a buffer to reallocate may have contents

------------------------------------------------------------
PS COMPRESSION FROMFILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is the flag that ignores PS COMPRESSION and reads compression settings from a file

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // don't read from file
ON, 1, TRUE, ENABLED     (= 0x00000001)  // read from file

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS COMPUTE CTA THROTTLING BARRIER COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Acceptable Values are within {compileShaderBarrierCount, maxAllowedbyHw}. Any invalid value would be rejected. Default of 0 means it won't be read


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS COMPUTE CTA THROTTLING MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Throttling mode for shader. Do the Barrier Count and Share Memory key apply to all shader's or specific ones, User needs to explicitly choose apply to all or specific shaders

APP DEFAULT                (= 0x00000000)  // App default
APPLY TO ALL SHADERS       (= 0x00000001)  // Apply Compute CTA Throttling to all compute shaders
APPLY TO SPECIFIC SHADERS  (= 0x00000002)  // Apply Compute CTA Throttling to only shaders selected as per PS COMPUTE SHADER HASH

Default values for this setting:
DEFAULT:    APP DEFAULT

------------------------------------------------------------
PS COMPUTE CTA THROTTLING SHARED MEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Acceptable Values are within {compileShaderSharedMem, maxAllowedbyHw}. Any invalid value would be rejected. Default of 0 means it won't be read


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS COMPUTE REGISTER BLOAT COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Artificially increase register usage in compute shaders for throttling purposes (new register count = baseline register count + bloat count). 0 will have no effect.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS COMPUTE REGISTER BLOAT FACTOR
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Artificially increase register usage in compute shaders for throttling purposes (new register count = baseline register count * bloat factor). 1.0f will have no effect.


Default values for this setting:
DEFAULT:    1.000000

------------------------------------------------------------
PS COMPUTE SHADER DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Master on / off switch for Compute shader (DX11) dumps (nvwgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x32545116)
ON, 1, TRUE, ENABLED     (= 0x43241846)

------------------------------------------------------------
PS COMPUTE SHADER DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Settings for Compute shader (DX11) dumps (nvwgf2um.dll)

DUMP APP CREATED SHADERS             (= 0x00000001)
DUMP HAND TUNED SHADERS              (= 0x00000002)
DUMP DSR SHADERS                     (= 0x00000004)
DUMP DRIVER CALC SHADERS             (= 0x02000000)
DUMP ZERO USAGE SHADERS              (= 0x00000008)
DUMP NVINST                          (= 0x00000020)
DUMP NVVM                            (= 0x00000020)
DUMP SAMPLER STATE                   (= 0x00000040)
DUMP TEXTURE STATE                   (= 0x00000080)
DUMP ANNOTATED NVINST                (= 0x00000120)  // same as DUMP NVINST but injects D3DIL comments
DUMP ANNOTATED SASS                  (= 0x00000200)
DUMP ANNOTATED DXBC                  (= 0x00000400)
DUMP GENERATE SOURCE CODE            (= 0x00000800)
DUMP CONST HISTOGRAMS                (= 0x00001000)
DUMP RENDERTARGET STATE              (= 0x00002000)
DUMP DEPTHTARGET STATE               (= 0x00004000)
DUMP SHADER MEASURE TIME             (= 0x00010000)
DUMP SHADER MEASURE SPEED            (= 0x00020000)
DUMP SHADER MEASURE STALLS           (= 0x00040000)
DUMP SHADER MEASURE PCSAMPLER        (= 0x00080000)
DUMP SHADER SORT COLLECTIONS         (= 0x00100000)
DUMP SHADER USE PCSAMPLER FOR USAGE  (= 0x00200000)  // Use the PCSAMPLER hit counts instead of the normal usage.
DUMP SHADER COMPILE TIME             (= 0x00400000)

------------------------------------------------------------
PS COMPUTE SHADER HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

d3d10Hash of the shader as read by driver. Compute Throttling will only work when these hashes belong to a compute shader.


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS CONSTANT BUFFER REMAPPER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS CONSTANT BUFFER REMAPPER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE CONST BANK PRIORITY REMAPPING  (= 0x00000001)  // Disable constant buffer remapping based on sorted priority (occurs even when some slots must be emulated)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS CONST FOLDING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0xa2b53761)
ON, 1, TRUE, ENABLED     (= 0x79292610)

------------------------------------------------------------
PS CONST FOLDING CONSTANT TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

which constant types (bool/fp/int) are enabled for const-folding (dx9/debug)

DISABLE FLOAT CONST DETECTION  (= 0x00000001)  // Disable support for floating-point constants
DISABLE BOOL CONST DETECTION   (= 0x00000002)  // Disable support for boolean constants
DISABLE INT CONST DETECTION    (= 0x00000004)  // Disable support for integer constants

------------------------------------------------------------
PS CONST FOLDING FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE INVARIANT CONST DETECTION  (= 0x00000001)  // debug: Disable profiling logic which detects invariant consts
DISABLE INVARIANT CONST FOLDING    (= 0x00000002)  // debug: Run profiling logic to detect invariant consts, but don't fold them in
DISABLE GLOBAL CB FOLDING          (= 0x00000004)  // debug: Disable folding on the global CB (DX10+ only, both compute and pixel)
DISABLE NVINST UNROLLING           (= 0x08000000)  // debug: Disable unrolling of 3dmv loops (DX10-only)

------------------------------------------------------------
PS CONST FOLDING GPU
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

controls new-style GPU-based const folding (dx12 only)

OFF, 0, FALSE, DISABLED  (= 0xa2b53761)
ON, 1, TRUE, ENABLED     (= 0x79292610)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS CONST FOLDING GPU ANALYZE EVERY NTH FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Check the histogram results every N frames, usually numPhases * minHistogramHitCount


------------------------------------------------------------
PS CONST FOLDING GPU COMPUTE SHADERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLED                        (= 0x00000000)  // Disable CFGPU always
ENABLED FOR SHADER HASHES       (= 0x00000001)  // Enable CFGPU for specific shader hashes only
ENABLED ALWAYS                  (= 0x00000002)  // Enable CFGPU always
ENABLED ALWAYS WITH DRIVER SCG  (= 0x00000004)  // Enable CFGPU if we have driver SCG
ENABLED MASK                    (= 0x00000007)
USE LOADBALANCE SCORE           (= 0x80000000)  // Use the load balancer score

Default values for this setting:
DEFAULT:    0x00000002
	ENABLED ALWAYS                          

------------------------------------------------------------
PS CONST FOLDING GPU FILTER WEIGHT
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

filter the use count by weighting the previous frame's value by this factor


Default values for this setting:
DEFAULT:    0.900000

------------------------------------------------------------
PS CONST FOLDING GPU FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DEBUG NULL OPTIMIZED SHADER     (= 0x00000001)  // do nothing in the optimized case (see if it's actually being picked)
DEBUG SKIP ASID                 (= 0x00000002)  // early-exit from applyShaderInstanceDependencies
DEBUG DISABLE SELECTION         (= 0x00000020)  // always fail the optimized shader selection
DEBUG DISABLE HISTOGRAM         (= 0x00000040)  // always mark histogram entries as invalid
DEBUG ALLOW IN REPLAY MODE      (= 0x00000100)  // allow CFGPU to operate in replay mode (not really supported)
DEBUG SKIP TIER3 SAFETY CHECKS  (= 0x00000200)  // assume all resources bound for all shaders
ENABLE HISTOGRAM SLOT NEW PASS  (= 0x00100000)  // trigger a new pass when we run out of histogram slots
ENABLE SELECTION SLOT NEW PASS  (= 0x00200000)  // trigger a new pass when we run out of selection slots
DISABLE LOADBALANCE ON HAZARD   (= 0x00400000)  // disable loadbalanced shader types when we hit a perfstrat SCG hazard
ENABLE LOW LATENCY              (= 0x80000000)  // reduce the frame/phase thresholds to the minimum possible (speed up amodel/emulation runs)

Default values for this setting:
DEFAULT:    0x00400000
	DISABLE LOADBALANCE ON HAZARD           

------------------------------------------------------------
PS CONST FOLDING GPU MAX CONST COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of consts to profile per shader


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS CONST FOLDING GPU MAX SORTED INVALID RANGES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of sorted invalid ranges (Volta+ by default)


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
PS CONST FOLDING GPU MAX UNSORTED INVALID RANGES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of unsorted invalid ranges (pre-Volta by default)


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
PS CONST FOLDING GPU MESH SHADERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLED                        (= 0x00000000)  // Disable CFGPU always
ENABLED FOR SHADER HASHES       (= 0x00000001)  // Enable CFGPU for specific shader hashes only
ENABLED ALWAYS                  (= 0x00000002)  // Enable CFGPU always
ENABLED ALWAYS WITH DRIVER SCG  (= 0x00000004)  // Enable CFGPU if we have driver SCG
ENABLED MASK                    (= 0x00000007)
USE LOADBALANCE SCORE           (= 0x80000000)  // Use the load balancer score

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DISABLED                                

------------------------------------------------------------
PS CONST FOLDING GPU MESH TASK SHADERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLED                        (= 0x00000000)  // Disable CFGPU always
ENABLED FOR SHADER HASHES       (= 0x00000001)  // Enable CFGPU for specific shader hashes only
ENABLED ALWAYS                  (= 0x00000002)  // Enable CFGPU always
ENABLED ALWAYS WITH DRIVER SCG  (= 0x00000004)  // Enable CFGPU if we have driver SCG
ENABLED MASK                    (= 0x00000007)
USE LOADBALANCE SCORE           (= 0x80000000)  // Use the load balancer score

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DISABLED                                

------------------------------------------------------------
PS CONST FOLDING GPU MIN HISTOGRAM HIT COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum number of histogram hits for invariant constants


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
PS CONST FOLDING GPU MIN HISTOGRAM HIT COUNT RT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum number of histogram hits for invariant constants for DXR shaders


------------------------------------------------------------
PS CONST FOLDING GPU NUM HISTOGRAM PHASES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Only run histograms in the assigned phase, to reduce the cost to 1/NUM HISTOGRAM PHASES


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
PS CONST FOLDING GPU PIXEL SHADERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLED                        (= 0x00000000)  // Disable CFGPU always
ENABLED FOR SHADER HASHES       (= 0x00000001)  // Enable CFGPU for specific shader hashes only
ENABLED ALWAYS                  (= 0x00000002)  // Enable CFGPU always
ENABLED ALWAYS WITH DRIVER SCG  (= 0x00000004)  // Enable CFGPU if we have driver SCG
ENABLED MASK                    (= 0x00000007)
USE LOADBALANCE SCORE           (= 0x80000000)  // Use the load balancer score

Default values for this setting:
DEFAULT:    0x80000005
	ENABLED FOR SHADER HASHES               
	ENABLED ALWAYS WITH DRIVER SCG          
	USE LOADBALANCE SCORE                   

------------------------------------------------------------
PS CONST FOLDING GPU RT SHADERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLED                        (= 0x00000000)  // Disable CFGPU always
ENABLED FOR SHADER HASHES       (= 0x00000001)  // Enable CFGPU for specific shader hashes only
ENABLED ALWAYS                  (= 0x00000002)  // Enable CFGPU always
ENABLED ALWAYS WITH DRIVER SCG  (= 0x00000004)  // Enable CFGPU if we have driver SCG
ENABLED MASK                    (= 0x00000007)
USE LOADBALANCE SCORE           (= 0x80000000)  // Use the load balancer score

Default values for this setting:
DEFAULT:    0x00000002
	ENABLED ALWAYS                          

------------------------------------------------------------
PS CONST FOLDING GPU RT SHADERS QUOTA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of RT instances to compile per app shader


------------------------------------------------------------
PS CONST FOLDING GPU SHADER HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If non-zero, only shaders with a DX asm hash matching this value will be optimized.


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS CONST FOLDING GPU SHADER HASHES
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies a space-delimited list of hashes for use by NvConstFoldingGPU


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
PS CONST FOLDING GPU USE LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

max times per frame we'll apply folding on a given shader


Default values for this setting:
DEFAULT:    0x00000400

------------------------------------------------------------
PS CONST FOLDING GPU VERTEX SHADERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLED                        (= 0x00000000)  // Disable CFGPU always
ENABLED FOR SHADER HASHES       (= 0x00000001)  // Enable CFGPU for specific shader hashes only
ENABLED ALWAYS                  (= 0x00000002)  // Enable CFGPU always
ENABLED ALWAYS WITH DRIVER SCG  (= 0x00000004)  // Enable CFGPU if we have driver SCG
ENABLED MASK                    (= 0x00000007)
USE LOADBALANCE SCORE           (= 0x80000000)  // Use the load balancer score

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DISABLED                                

------------------------------------------------------------
PS CONST FOLDING GPU VOLATILITY AGING FACTOR
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

how much to multiply the volatility factor by with each new update


Default values for this setting:
DEFAULT:    0.990000

------------------------------------------------------------
PS CONST FOLDING GPU VOLATILITY THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

if our volatility factor exceeds this threshold, stop tracking the const


Default values for this setting:
DEFAULT:    0.750000

------------------------------------------------------------
PS CONST FOLDING GPU WARMUP FRAMES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

number of frames to wait before optimizing shaders


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS CONST FOLDING SHADER TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

which shader types are disabled for const-folding? (dx10+)

DISABLE VERTEX SHADER    (= 0x00000001)  // disable support for vertex shader type
DISABLE HULL SHADER      (= 0x00000002)  // disable support for hull shader type
DISABLE DOMAIN SHADER    (= 0x00000004)  // disable support for domain shader type
DISABLE GEOMETRY SHADER  (= 0x00000008)  // disable support for geometry shader type
DISABLE PIXEL SHADER     (= 0x00000010)  // disable support for pixel shader type
DISABLE COMPUTE SHADER   (= 0x00000020)  // disable support for compute shader type

------------------------------------------------------------
PS CONST FOLDING SHADER TYPE FLAGS
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

which 'sort' of folding, if any, to perform (per shader type) (dx10+)

VERTEX SPECIALIZE ALL              (= 0x0000000000000001)  // specialize all consts
VERTEX SPECIALIZE LOOP COUNTERS    (= 0x0000000000000002)  // specialize loop counters
VERTEX SPECIALIZE IF BRANCHES      (= 0x0000000000000004)  // specialize if branches
VERTEX SPECIALIZE ONLY             (= 0x0000000000000008)  // fold  only  specialized consts
VERTEX CONTROL FLOW ONLY           (= 0x0000000000000010)  // fold  only  control flow consts
HULL SPECIALIZE ALL                (= 0x0000000000000100)  // specialize all consts
HULL SPECIALIZE LOOP COUNTERS      (= 0x0000000000000200)  // specialize loop counters
HULL SPECIALIZE IF BRANCHES        (= 0x0000000000000400)  // specialize if branches
HULL SPECIALIZE ONLY               (= 0x0000000000000800)  // fold  only  specialized consts
HULL CONTROL FLOW ONLY             (= 0x0000000000001000)  // fold  only  control flow consts
DOMAIN SPECIALIZE ALL              (= 0x0000000000010000)  // specialize all consts
DOMAIN SPECIALIZE LOOP COUNTERS    (= 0x0000000000020000)  // specialize loop counters
DOMAIN SPECIALIZE IF BRANCHES      (= 0x0000000000040000)  // specialize if branches
DOMAIN SPECIALIZE ONLY             (= 0x0000000000080000)  // fold  only  specialized consts
DOMAIN CONTROL FLOW ONLY           (= 0x0000000000100000)  // fold  only  control flow consts
GEOMETRY SPECIALIZE ALL            (= 0x0000000001000000)  // specialize all consts
GEOMETRY SPECIALIZE LOOP COUNTERS  (= 0x0000000002000000)  // specialize loop counters
GEOMETRY SPECIALIZE IF BRANCHES    (= 0x0000000004000000)  // specialize if branches
GEOMETRY SPECIALIZE ONLY           (= 0x0000000008000000)  // fold  only  specialized consts
GEOMETRY CONTROL FLOW ONLY         (= 0x0000000010000000)  // fold  only  control flow consts
PIXEL SPECIALIZE ALL               (= 0x0000000100000000)  // specialize all consts
PIXEL SPECIALIZE LOOP COUNTERS     (= 0x0000000200000000)  // specialize loop counters
PIXEL SPECIALIZE IF BRANCHES       (= 0x0000000400000000)  // specialize if branches
PIXEL SPECIALIZE ONLY              (= 0x0000000800000000)  // fold  only  specialized consts
PIXEL CONTROL FLOW ONLY            (= 0x0000001000000000)  // fold  only  control flow consts
COMPUTE SPECIALIZE ALL             (= 0x0000010000000000)  // specialize all consts
COMPUTE SPECIALIZE LOOP COUNTERS   (= 0x0000020000000000)  // specialize loop counters
COMPUTE SPECIALIZE IF BRANCHES     (= 0x0000040000000000)  // specialize if branches
COMPUTE SPECIALIZE ONLY            (= 0x0000080000000000)  // fold  only  specialized consts
COMPUTE CONTROL FLOW ONLY          (= 0x0000100000000000)  // fold  only  control flow consts

------------------------------------------------------------
PS COPARGS DUMP VER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

COPArgs dump version. Currently parseasm doesn't parse all of the parameters the driver sends to COP. We are fixing this, but in the meantime, this key controls the format of what the driver outputs in shader dumps for COPARgs.

VER 0, 0     (= 0x00000000)  // Old version of COPArgs with ATTRIBINDEXABLEBLOCKID, RESULTINDEXABLEBLOCKID
VER 1, 1     (= 0x00000001)  // This is the current version parsed by parseasm.
VER 2, 2     (= 0x00000002)  // This version has additional sampler and texture properties, and isn't currently handled by parseasm.
VER 3, 3     (= 0x00000003)
VER COMPAT   (= 0xffffffff)  // This option is temporary - this settings specifies the use the old driver based code for dumping COPArgs, rather than common code.
VER UNKNOWN  (= 0xffffffff)  // This value is for use by the parser as it tries to figure out what version of the dump it is dealing with.

Default values for this setting:
DEFAULT:    VER 2

------------------------------------------------------------
PS COPY TRACKER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x71b537f1)
ON, 1, TRUE, ENABLED     (= 0x12242f10)

------------------------------------------------------------
PS COPY TRACKER END FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS COPY TRACKER FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

output directory+filename, must exist


------------------------------------------------------------
PS COPY TRACKER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DBGPRINT DECISIONS                   (= 0x00000001)  // [debug] print decisions to the debugger
LOG DECISIONS                        (= 0x00000002)  // [debug] log the decision making process to a file
DIRTY DST                            (= 0x00000004)  // [debug] dirty the copy dest to expose obvious bugs
TOGGLE ONOFF                         (= 0x00000008)  // [debug] toggle on/off every two frames
ANNOTATE                             (= 0x00000010)  // [debug] generate cyclestats events
DONT OPTIMIZE DRAW                   (= 0x00100000)  // don't optimize draw calls
DONT OPTIMIZE BLIT                   (= 0x00200000)  // don't optimize blits
DONT OPTIMIZE COLORFILL              (= 0x00400000)  // don't optimize colorfills
DISABLE LOAD BALANCED DRAW ANALYSIS  (= 0x01000000)  // analyze draw calls even when cpu bound
DISABLE LOAD BALANCED BLIT ANALYSIS  (= 0x02000000)  // analyze blit calls even when cpu bound
DONT PROMOTE DEPTH DRAWS TO TWOD     (= 0x04000000)  // don't promote depth copy draw calls to TWOD

------------------------------------------------------------
PS COPY TRACKER START FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS CPU CLEAR
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x02656393)
ON, 1, TRUE, ENABLED     (= 0x02166322)

------------------------------------------------------------
PS CPU CLEAR 2
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x02656393)
ON, 1, TRUE, ENABLED     (= 0x02166322)

------------------------------------------------------------
PS CPU CLEAR 2 ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ALLOW R32F CLEARS               (= 0x00000001)
ALLOW FORCE SYNCHRONIZED CLEAR  (= 0x04000000)
ALLOW NULL CPU CLEAR            (= 0x08000000)
ALLOW CAPS OVERRIDE             (= 0x20000000)
ALLOW CLASS OVERRIDE            (= 0x40000000)
ALLOW CHIP ID OVERRIDE          (= 0x80000000)

------------------------------------------------------------
PS CPU CLEAR ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ALLOW COLOR CLEARS      (= 0x00000001)
ALLOW STENCIL CLEARS    (= 0x00000002)
ALLOW Z CLEARS          (= 0x00000004)
ALLOW PARTIAL Z CLEARS  (= 0x00000008)

------------------------------------------------------------
PS CTA THROTTLE TARGET
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the CTA/SM throttling target.


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
PS CTA THROTTLING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable CTA throttling

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS CYCLESTATS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This key is the global enable for both CycleStatsCPU and CycleStatsGPU

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS CYCLESTATS BUCKET FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

OUTER MODE MASK          (= 0x0000000f)
OUTER MODE API CALL      (= 0x00000000)
OUTER MODE SAME STATE    (= 0x00000001)
OUTER MODE SEGMENT       (= 0x00000002)
OUTER MODE CMDBUF        (= 0x00000003)
OUTER MODE FRAME         (= 0x00000004)
OUTER MODE START END     (= 0x00000005)
INNER MODE MASK          (= 0x000f0000)
INNER MODE API CALL      (= 0x00000000)
INNER MODE SAME STATE    (= 0x00010000)
INNER MODE SEGMENT       (= 0x00020000)
INNER MODE CMDBUF        (= 0x00030000)
INNER MODE FRAME         (= 0x00040000)
INNER MODE START END     (= 0x00050000)
INNER PM MODE MASK       (= 0x00f00000)
INNER PM MODE NONE       (= 0x00000000)
INNER PM MODE PMTRIG     (= 0x00100000)
INNER PM MODE PMTRIGEND  (= 0x00200000)
INNER WFI MODE MASK      (= 0x0f000000)
INNER WFI MODE NONE      (= 0x00000000)
INNER WFI MODE GPUIDLE   (= 0x01000000)
INNER WFI MODE ALWAYS    (= 0x02000000)
SEPARATE REPLAYER STATE  (= 0x10000000)

------------------------------------------------------------
PS CYCLESTATS CAPTURE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

CAPTURE BUCKET COUNT          (= 0x00000001)
CAPTURE PER FRAME DATA        (= 0x00000002)
CAPTURE MERGED STATE          (= 0x00000004)
GENERATE BOOKMARKS            (= 0x00000100)
GENERATE ENCODED PMTRIGGERID  (= 0x00000200)
HIDE GPUIDLE BUCKETS          (= 0x00001000)
HIDE REPLAYER BUCKETS         (= 0x00002000)
USE PTIMER TIMEBASE           (= 0x00008000)
TIMEBASE CYCLES MASK          (= 0x00ff0000)
TIMEBASE CYCLES DISABLED      (= 0x00000000)
TIMEBASE CYCLES 1K            (= 0x00010000)
TIMEBASE CYCLES 2K            (= 0x00020000)
TIMEBASE CYCLES 4K            (= 0x00030000)
TIMEBASE CYCLES 8K            (= 0x00040000)
TIMEBASE CYCLES 16K           (= 0x00050000)
TIMEBASE CYCLES 32K           (= 0x00060000)
TIMEBASE CYCLES 64K           (= 0x00070000)
USE LARGE CAPTURE BUFFER      (= 0x01000000)
PROCESS SNAPSHOTS AT END      (= 0x02000000)
AUTOEXIT AT END FRAME         (= 0x10000000)

------------------------------------------------------------
PS CYCLESTATS COMMAND QUEUE TO LOG
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Capture results for a specific command queue, numbered in zero-based creation order. DX12 only.


------------------------------------------------------------
PS CYCLESTATS CPU FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

HOTSPOTS                   (= 0x00000001)  // Randomly sample IP to determine the functions being executed often.
PAGEFAULTS                 (= 0x00000002)  // Track page faults.
RELMSECTHRESHOLD           (= 0x00000004)  // CPU THRESHOLD is relative to previous frame instead of absolute. (To be removed in the future.)
STATIC STATS               (= 0x00000008)  // Report instructions retired and CPI for each CPU.
SUM 10 FRAMES              (= 0x00001000)  // Sum data over 10 frames.
SUM 100 FRAMES             (= 0x00002000)  // Sum data over 100 frames.
SUM 1000 FRAMES            (= 0x00004000)  // Sum data over 1000 frames.
DONOTDUMP2FILE             (= 0x00010000)  // Don't dump log to a file.
DUMP2DEBUGGER              (= 0x00020000)  // Dump log to debug output.
SUM INDIVIDUAL CPUS        (= 0x00040000)  // Sum hot spot data for all CPUs and report that.
ADVANCE ON CLIENT PRESENT  (= 0x00100000)  // use client thread/app's present() to trigger a new frame
USE LARGE BUFFER           (= 0x00200000)  // use a 64MB capture buffer (for multi second frames), default is 4MB
SHOW ALL HITS              (= 0x00400000)  // list all hits / disable other bucket
IGNORESYMBOLS              (= 0x01000000)  // Don't load symbols for modules. Only report module level data.
DONOTPROFILEUSERMODE       (= 0x02000000)  // Only profile kernel mode modules.
SHOWHITCOUNT               (= 0x04000000)  // Show raw hit counts in addition to percentages.
DUMPOVERHEAD               (= 0x08000000)  // Report CPU overhead of cyclestats.
STACKWALK                  (= 0x10000000)  // Enable stack walk.

------------------------------------------------------------
PS CYCLESTATS CPU INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The CPU will sample EIP every time the number of events specified by PS CYCLESTATS CPU SAMPLEMODE hits this number.


------------------------------------------------------------
PS CYCLESTATS CPU SAMPLEMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Doesn't do much right now. Defaults to load/store micro-ops


------------------------------------------------------------
PS CYCLESTATS CPU STACKWALK EPILOGSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies size of epilog to ignore from specified function


------------------------------------------------------------
PS CYCLESTATS CPU STACKWALK FUNCTION
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies name of function to stack-walk before attribution (K8 only for now)


------------------------------------------------------------
PS CYCLESTATS CPU STACKWALK MODULE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies module of function to stack-walk before attribution (K8 only for now)


------------------------------------------------------------
PS CYCLESTATS CPU STACKWALK NUMSTEPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies number of stack-walk steps before attribution (K8 only for now)


------------------------------------------------------------
PS CYCLESTATS CPU STACKWALK PROLOGSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies size of prolog to ignore from specified function


------------------------------------------------------------
PS CYCLESTATS CPU THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If the MSECONDTHRESHOLD bit is not set in PS CYCLESTATS CPU FLAGS then frame stats are dumped starting at the value of this key * 100. If MSECONDTHRESHOLD is set, then this key is a millisecond threshold value for the frame time. Any frame time which EXCEEDS this value will have its stats dumped.


------------------------------------------------------------
PS CYCLESTATS DEVICE TO LOG
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Capture results for a specific device, numbered in zero-based creation order. Only supported on DX drivers.


------------------------------------------------------------
PS CYCLESTATS DIRECTORY
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This registry key is an override to the default directory for dumping the cyclestat (CPU and GPU) statistics.


------------------------------------------------------------
PS CYCLESTATS DX12 MULTIDEVICE HACK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Bug 200442345 : Workaround for N+1 frame rendering problem when capturing cyclestats data with END FRAME=N

DISABLED, OFF, 0, FALSE  (= 0x00000000)
ENABLED, ON, 1, TRUE     (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
PS CYCLESTATS DX12 TAGS HACK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable the DX12 tags hack.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS CYCLESTATS END FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS CYCLESTATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

TAGS            (= 0x00000001)
RT              (= 0x00000002)
PSHADER         (= 0x00000004)
VSHADER         (= 0x00000008)
FOG             (= 0x00000010)
COLORWRITE      (= 0x00000020)
DEPTHTEST       (= 0x00000040)
ALPHATEST       (= 0x00000080)
STENCILENABLE   (= 0x00000100)
CLIPPLANE       (= 0x00000200)
VB TYPE         (= 0x00000400)
TEXTURE         (= 0x00000800)
LIGHTING        (= 0x00001000)
BLEND           (= 0x00002000)
GSHADER         (= 0x00004000)
STREAMOUT       (= 0x00008000)
RES HANDLE      (= 0x00010000)
CULL            (= 0x00020000)
PERFSTRAT       (= 0x00040000)
IB TYPE         (= 0x00080000)
PRIM TYPE       (= 0x00100000)
MINIMIZE RT     (= 0x00200000)
API STATE       (= 0x00400000)
POLYGON         (= 0x00800000)
QUERIES         (= 0x04000000)
APPSTATE        (= 0x08000000)
TESS            (= 0x10000000)
COMPUTE         (= 0x20000000)
DRIVERSTATE     (= 0x40000000)
BUCKET COUNT    (= 0x02000000)
PER FRAME DATA  (= 0x80000000)

------------------------------------------------------------
PS CYCLESTATS FLAGS2
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

RT                 (= 0x00000001)
EARLYZ             (= 0x00000002)
ZCULL              (= 0x00000004)
IDX                (= 0x00000008)
VSHADER            (= 0x00000010)
GSHADER            (= 0x00000020)
PSHADER            (= 0x00000040)
TEXHEADER          (= 0x00000100)
TEXSAMPLER         (= 0x00000200)
ALPHA TEST         (= 0x00001000)
DEPTH TEST         (= 0x00002000)
STENCIL TEST       (= 0x00004000)
POLYGON OFFSET     (= 0x00010000)
CULL               (= 0x00020000)
POINTSPRITE        (= 0x00040000)
BLEND              (= 0x00080000)
USERCLIP           (= 0x00100000)
STREAMOUT          (= 0x00200000)
PEEK AT DRV MASKS  (= 0x04000000)
PTE TRAVERSAL      (= 0x08000000)
NO TILEDREGION     (= 0x10000000)
NO ZCULL DETAILS   (= 0x20000000)
NO PTE COUNTS      (= 0x40000000)

------------------------------------------------------------
PS CYCLESTATS GPU TO LOG
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Capture results for a specific gpu, numbered in zero-based creation order. Only supported on DX drivers.


------------------------------------------------------------
PS CYCLESTATS HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set custom key for cyclestats 'hotkey' event [also need to set HOTKEYS regkey] (default is ctrl+F6)


Default values for this setting:
DEFAULT:    0x00000075

------------------------------------------------------------
PS CYCLESTATS LAUNCH FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DO NOT DEFER INIT        (= 0x00000001)
DONT IGNORE DWM          (= 0x00000002)
DO NOT INIT              (= 0x00000004)
IGNORE COMPUTE ONLY      (= 0x00000008)
IGNORE NON COMPUTE ONLY  (= 0x00000010)
DONT IGNORE METRO APPS   (= 0x00000020)

------------------------------------------------------------
PS CYCLESTATS MAX APP REGIME DEPTH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum depth of the app's regime description stack (e.g., 1 -> 'SCENE', 2 -> 'SCENE/PASS', 3 -> 'SCENE/PASS/BATCH'


------------------------------------------------------------
PS CYCLESTATS MERGE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

TAGS           (= 0x00000001)
RT             (= 0x00000002)
PSHADER        (= 0x00000004)
VSHADER        (= 0x00000008)
FOG            (= 0x00000010)
COLORWRITE     (= 0x00000020)
DEPTHTEST      (= 0x00000040)
ALPHATEST      (= 0x00000080)
STENCILENABLE  (= 0x00000100)
CLIPPLANE      (= 0x00000200)
VB TYPE        (= 0x00000400)
TEXTURE        (= 0x00000800)
LIGHTING       (= 0x00001000)
BLEND          (= 0x00002000)
GSHADER        (= 0x00004000)
STREAMOUT      (= 0x00008000)
RES HANDLE     (= 0x00010000)
CULL           (= 0x00020000)
PERFSTRAT      (= 0x00040000)
IB TYPE        (= 0x00080000)
PRIM TYPE      (= 0x00100000)
DISPATCH TYPE  (= 0x00200000)
API ARGS       (= 0x00400000)
POLYGON        (= 0x00800000)
QUERIES        (= 0x04000000)
APPSTATE       (= 0x08000000)
TESS           (= 0x10000000)
COMPUTE        (= 0x20000000)
DRIVERSTATE    (= 0x40000000)

------------------------------------------------------------
PS CYCLESTATS PM CONFIG
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS CYCLESTATS PROCESS TO LOG
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Capture results for a specific process, given as 'process.exe'. Only supported on DX drivers.


------------------------------------------------------------
PS CYCLESTATS PROFILER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ENABLE                       (= 0x00000001)
FORCE SINGLE INSTANCE        (= 0x00000100)
AUTOEXIT AFTER N LOOPS MASK  (= 0xff000000)

------------------------------------------------------------
PS CYCLESTATS START FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS CYCLESTATS XFLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

READ PM USING CPU      (= 0x00000001)
IDENTIFY BUCKETS       (= 0x00000002)
NO STALL CHECK         (= 0x00000004)
SKIP DEAD FRAMES       (= 0x00000008)
REPORT TRANSITIONS     (= 0x00000010)
VPM ENABLE EOT         (= 0x00000020)
NO TIMESTAMPS          (= 0x00000040)
MERGE SEGMENTS         (= 0x00000080)
SORT BY MASK           (= 0x00000300)
SORT BY NAME           (= 0x00000000)
SORT BY APPEARANCE     (= 0x00000100)
SORT BY TIME           (= 0x00000200)
DUMP BEFORE CLEAR      (= 0x00001000)
DUMP BEFORE TRANS      (= 0x00002000)
DUMP BEFORE FLIP       (= 0x00004000)
DUMP SELECTION         (= 0x00008000)
HTML REPORT            (= 0x00020000)
REPORT PMTRIGGERCT     (= 0x00040000)
TAG OWN PB METHODS     (= 0x00080000)
WAIT UNTIL KB TRIGGER  (= 0x00100000)
ANNOTATE               (= 0x00200000)
FORCE DONOTWAIT        (= 0x00400000)
VPM SIGNAL START END   (= 0x00800000)
MINIMIZE WFI PMTRIG    (= 0x01000000)
MERGE 3DSTATEBUCKETS   (= 0x02000000)
NO TRANSITION RESET    (= 0x04000000)
RESET PMTRIGGERCT      (= 0x08000000)
REPORT RENDBATCHCT     (= 0x10000000)
FULL FRAME MODE        (= 0x20000000)
MERGE SCG              (= 0x40000000)
START WITH PM PAUSED   (= 0x80000000)

------------------------------------------------------------
PS D3D DEBUG HOOKS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

Enable hooking of d3d functions to enable app regime data in cyclestats.

OFF                       (= 0x00000000)  // No hooks are made
OS EXIT HOOKS ON          (= 0x00000001)  // Enable for TerminateProcess, ExitProcess, CrtExit
PERF MARKERS ON FOR DX9   (= 0x00000002)  // Enable for D3DPERF BeginEvent
PERF MARKERS ON FOR DX11  (= 0x00000004)  // Enable for D3DPerformance BeginEvent/ID3DUserDefinedAnnotation::BeginEvent
PERF MARKERS ON FOR DX12  (= 0x00000008)  // Enable for ID3D12GraphicsCommandList::BeginEvent
PERF MARKERS ON           (= 0x0000000e)  // Enable for all listed perf markers
CLASS NAME TRACKING ON    (= 0x00000010)  // Enable to track names for ID3D11DeviceChild classes
TIMESTAMP CHECK ON        (= 0x00000020)  // Enable to spew timestamp query information built from the D3D12 API
ECL MERGING               (= 0x00000040)  // Enable hooks necessary for merging ECL calls
MISC DEBUG ON             (= 0x00000030)  // Enable non-perf and non-OS hooks
ON                        (= 0x0000007f)  // Enable for everything

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS DEBUG FILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x55695605)
ON, 1, TRUE, ENABLED     (= 0x49659773)

------------------------------------------------------------
PS DEBUG FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS DEBUG IO BUFSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of bytes of perfstrategy fprintf output to buffer before writing to disk


Default values for this setting:
DEFAULT:    0x00010000

------------------------------------------------------------
PS DEBUG PRINT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x88884133)
ON, 1, TRUE, ENABLED     (= 0x65357577)

------------------------------------------------------------
PS DEBUG PRINT BUFSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the size of a temporary output buffer used in perf strategies. Set this to >8K if you are a maniac and create huge registry keys!


------------------------------------------------------------
PS DEBUG PRINT FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

DUMP STATE INITIAL  (= 0x00000001)
DUMP STATE FINAL    (= 0x00000002)

------------------------------------------------------------
PS DEFER SET TEX
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x77b537f1)
ON, 1, TRUE, ENABLED     (= 0x12242210)

------------------------------------------------------------
PS DEFER SET TEX FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DONT DEFER HS DS GS SET STATE  (= 0x00000001)  // don't defer/optimize tess+geometry set state calls

------------------------------------------------------------
PS DEPTH OPT IN SHADER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disable depth opt in shader optimiziation

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS DISPATCH HELPER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE CORE DISPATCH FOR DX11               (= 0x00000001)  // Disable core dispatch QMD allocations on pre-DX12 devices
DISABLE CORE DISPATCH FOR DX11 AUTO SCG      (= 0x00000002)  // Disable core dispatch QMD allocations on pre-DX12 devices with Auto SCG
DISABLE CORE DISPATCH FOR DX11 AUTO SCG SLI  (= 0x00000004)  // Disable core dispatch QMD allocations on pre-DX12 devices with Auto SCG and SLI
DEBUG TRACK COUNTER VALUES                   (= 0x20000000)  // Use NOP methods to track counter values
DEBUG TRACK CORE DISPATCH QMDS               (= 0x40000000)  // Use the second QMD semaphore to track completion of core QMDs
DEBUG TRACK DISPATCH HELPER QMDS             (= 0x80000000)  // Use the second QMD semaphore to track completion of dispatch helper QMDs

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DISPATCH HELPER QMD TIMESTAMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE COMPUTE QUEUE TIMESTAMPS  (= 0x00000001)  // Disable compute queue timestamp tracking
DISABLE DIRECT QUEUE TIMESTAMPS   (= 0x00000002)  // Disable direct queue timestamp tracking

Default values for this setting:
DEFAULT:    0x00000002
	DISABLE DIRECT QUEUE TIMESTAMPS         

------------------------------------------------------------
PS DIVERGENT LDC
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS DIVERGENT LDC FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Flags for divergent LDC

DISABLE SUBALLOC SUPPORT  (= 0x00000001)  // Disable suballoc optimizations
DISABLE VERTEX SHADERS    (= 0x00000002)  // Disable optimization for vertex shaders
DISABLE PIXEL SHADERS     (= 0x00000004)  // Disable optimization for pixel shaders

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DIVERGENT LDC FORCE ENABLE SLOTS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Force the optimization on for these CB indexes


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DIVERGENT LDC MIN COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Min number of LDC instructions required


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DOMAIN SHADER DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Master on / off switch for domain shader (DX11 Tessellation) dumps (nvwgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x38672673)
ON, 1, TRUE, ENABLED     (= 0x62481129)

------------------------------------------------------------
PS DOMAIN SHADER DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Settings for domain shader (DX11 Tessellation) dumps (nvwgf2um.dll)

DUMP APP CREATED SHADERS             (= 0x00000001)
DUMP HAND TUNED SHADERS              (= 0x00000002)
DUMP DSR SHADERS                     (= 0x00000004)
DUMP DRIVER CALC SHADERS             (= 0x02000000)
DUMP ZERO USAGE SHADERS              (= 0x00000008)
DUMP NVINST                          (= 0x00000020)
DUMP NVVM                            (= 0x00000020)
DUMP SAMPLER STATE                   (= 0x00000040)
DUMP TEXTURE STATE                   (= 0x00000080)
DUMP ANNOTATED NVINST                (= 0x00000120)  // same as DUMP NVINST but injects D3DIL comments
DUMP ANNOTATED SASS                  (= 0x00000200)
DUMP ANNOTATED DXBC                  (= 0x00000400)
DUMP GENERATE SOURCE CODE            (= 0x00000800)
DUMP CONST HISTOGRAMS                (= 0x00001000)
DUMP RENDERTARGET STATE              (= 0x00002000)
DUMP DEPTHTARGET STATE               (= 0x00004000)
DUMP SHADER MEASURE TIME             (= 0x00010000)
DUMP SHADER MEASURE SPEED            (= 0x00020000)
DUMP SHADER MEASURE STALLS           (= 0x00040000)
DUMP SHADER MEASURE PCSAMPLER        (= 0x00080000)
DUMP SHADER SORT COLLECTIONS         (= 0x00100000)
DUMP SHADER USE PCSAMPLER FOR USAGE  (= 0x00200000)  // Use the PCSAMPLER hit counts instead of the normal usage.
DUMP SHADER COMPILE TIME             (= 0x00400000)

------------------------------------------------------------
PS DROP EMPTY COMMAND LIST FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Optimization control flags to determine when command list may be skipped

DEVICE INFER HAS WORK  (= 0x00000001)  // Turns this strategy off
NO BARRIER HAZARD      (= 0x00000002)  // Resource barriers don't contribute to being a hazard in a command list sequence (unsafe)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DUMPREGISTERS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Dumps all registers value specified in PS DUMPREGISTERS INPUT FILE

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS DUMPREGISTERS INPUT FILE
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS DX10 CHUNKER MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls state bucket detection behavior

CHUNK ALWAYS                         (= 0x00000000)  // Chunk every state bucket
CHUNK KNOWN APPS                     (= 0x00000001)  // Chunk only known state buckets from specific apps for experimentation purposes
CHUNK KNOWN FULLSCREEN DRAW CALLS    (= 0x00000002)  // Chunk only known full-screen draw calls
CHUNK REDUCTION TRACKED DRAW CALLS   (= 0x00000004)  // Chunk using reduction tracker
CHUNK FULLSCREEN DRAW CALLS          (= 0x00000008)  // Chunk all fullscreen draw calls tracker
CHUNK HEURISTIC MASK                 (= 0x000000ff)
CHUNK DURING PIPELINE STATS QUERIES  (= 0x00000100)  // Enable chunking during pipelin-stats queries (WARNING: Exposes chunker to D3D API)
CHUNK ON TILED CACHE ARCH            (= 0x00000200)  // Enable SW chunking on tiled cache architecture
CHUNK ALL BLENDING DRAW CALLS        (= 0x00000400)  // Chunk all buckets with blending enabled

Default values for this setting:
DEFAULT:    0x00000108
	CHUNK FULLSCREEN DRAW CALLS             
	CHUNK DURING PIPELINE STATS QUERIES     

------------------------------------------------------------
PS DX10 NULL
------------------------------------------------------------
This key is of type DWORD
This key is defined for NULL HW ENABLED
You may only assign it to one of the names listed below.

OFF       (= 0x00000000)  // disable
DRIVER    (= 0x00000001)  // enables null driver
HARDWARE  (= 0x00000002)  // enables null hardware
HOTKEY    (= 0x00000010)  // enable switching null hardware on/off by hotkey (ctrl+F8)

------------------------------------------------------------
PS DX10 SHADER DUMP DEBUG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Additional (debug) settings for DX10 shader dumps (nvwgf2um.dll)

DUMP HEX SPH                     (= 0x00000001)  // Dump hex version of Shader Program Header
DELETE EMPTY DUMP FILES          (= 0x00000002)  // If a psdbgXXX/statsXXX.txt file has no shaders associated with it, delete it (cruft reduction).
DUMP HEX UCODE                   (= 0x00000004)  // Dump hex dump of the ucode rather than disassembly
DUMP DX RUNTIME HASH IN SUMMARY  (= 0x00000008)  // Dump the DX runtime hash in the shader summary instead of the token hash
DUMP JSON OUTPUT                 (= 0x00000010)  // Dump a JSON-formatted file (shaderinfoXXX.json) alongside the normal shader dump

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DX10 SHADER DUMP ON CREATION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable dumping of shaders during initialization. (You also have to set a bit for each shader in the DUMP FLAGS)

OFF, 0, FALSE, DISABLED  (= 0x07084358)
ON, 1, TRUE, ENABLED     (= 0x64308112)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS DX10 SHADER DUMP ON CREATION FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Filename or pattern for dumping shaders during creation


------------------------------------------------------------
PS DX10 SHADER DUMP SHADER COLLECTION HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Only dump shaders where the SHADER COLLECTION HASH matches this value


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS DX10 SHADER DUMP SHADER HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Only dump shaders where the SHADER HASH matches this value


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS DX10 SHADER DUMP UCODE HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Only dump shaders where the UCODE HASH matches this value


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS DX10 SURFACE PLACEMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS DX10 SURFACE PLACEMENT ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

TX FORCE HOSTMEM                 (= 0x00000100)
TX FORCE VIDMEM                  (= 0x00000200)
TX FORCE MASK                    (= 0x00000300)
TX PREFERS HOSTMEM               (= 0x00000400)
TX PREFERS VIDMEM ALL            (= 0x00000800)
TX PREFERS MASK                  (= 0x00000c00)
RT FORCE HOSTMEM                 (= 0x00001000)
RT FORCE VIDMEM                  (= 0x00002000)
RT FORCE MASK                    (= 0x00003000)
RT PREFERS HOSTMEM               (= 0x00004000)
RT PREFERS VIDMEM ALL            (= 0x00008000)
RT PREFERS MASK                  (= 0x0000c000)
Z FORCE HOSTMEM                  (= 0x00010000)
Z FORCE VIDMEM                   (= 0x00020000)
Z FORCE MASK                     (= 0x00030000)
Z PREFERS HOSTMEM                (= 0x00040000)
Z PREFERS VIDMEM ALL             (= 0x00080000)
Z PREFERS MASK                   (= 0x000c0000)
Z PREFERS BOTH                   (= 0x000c0000)
RESOLVE TARGET HIGH PRIORITY     (= 0x00100000)
DISABLE CPU VISIBLE VIDMEM       (= 0x01000000)
TX PREFERS VIDMEM SLOW           (= 0x40000000)
RT PREFERS VIDMEM SLOW           (= 0x80000000)
Z PREFERS VIDMEM SLOW            (= 0x02000000)
DISABLE ADJUST PRIORITY BY SIZE  (= 0x00200000)

Default values for this setting:
DEFAULT:    0x00100000
	RESOLVE TARGET HIGH PRIORITY            

------------------------------------------------------------
PS DX10 SURFACE PLACEMENT BACKINGSTORE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

On 64-bit apps we can allow video memory preferred allocations to use HEAP CACHED instead of HEAP HOST as their backing store to speed up windows paging.

DISALLOW ALL             (= 0x00000001)  // Never allow HEAP CACHED backingstore
DISALLOW RENDER TARGETS  (= 0x00000002)  // Do not allow Render Targets in HEAP CACHED
DISALLOW DEPTH STENCILS  (= 0x00000004)  // Do not allow Depth Stencils in HEAP CACHED
DISALLOW UAVS            (= 0x00000008)  // Do not allow Unordered Access Views in HEAP CACHED

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DX10 SURFACE PLACEMENT BACKINGSTORE MIN SIZE
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Min size in bytes to consider using HEAP CACHED for video allocation's backing store.


Default values for this setting:
DEFAULT:    0x0000000000008000

------------------------------------------------------------
PS DX10 SURFACE PLACEMENT HIGHEST PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Normally, resources are capped at high priority.  This regkey allows selective use of maximum priority, equivalent to D3DDDI ALLOCATIONPRIORITY MAXIMUM for these buffers.

PRIORITY HIGH                  (= 0x187f7082)  // Allocations capped at high priority (default)
PRIORITY MAXIMUM               (= 0x83b7bc1a)  // Allocations capped at maximum priority
PRIORITY MAXIMUM IF MIXED BUS  (= 0xfc17f610)  // Allocations capped at maximum priority on mixed-bus GPUs (192-bit 2 GB, etc.)

Default values for this setting:
DEFAULT:    PRIORITY HIGH

------------------------------------------------------------
PS DX10 SURFACE PLACEMENT STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS DX12 ASM SHADER REPLACEMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable DX12-specific shader replacement

OFF, 0, FALSE, DISABLED  (= 0xbb832af7)
ON, 1, TRUE, ENABLED     (= 0x81c02e66)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS DX12 FORCE RESOURCE TYPE ACCESSIBILITY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Overrides automatic determination of resource type accessibility

ALL SRV ACCESSIBLE   (= 0x00000001)  // Assume root signature infers all SRV resources are always accessible in GPU memory.
ALL CBV ACCESSIBLE   (= 0x00000010)  // Assume root signature infers all CBV resources are always accessible in GPU memory.
ALL UAV ACCESSIBLE   (= 0x00000100)  // Assume root signature infers all UAV resources are always accessible in GPU memory.
NO SRV ACCESSIBLE    (= 0x00000002)  // Assume root signature infers no SRV resources are always accessible in GPU memory.
NO CBV ACCESSIBLE    (= 0x00000020)  // Assume root signature infers no CBV resources are always accessible in GPU memory.
NO UAV ACCESSIBLE    (= 0x00000200)  // Assume root signature infers no UAV resources are always accessible in GPU memory.
ALL RESOURCES BOUND  (= 0x00000111)  // Assume all resources types are accessible in GPU memory at execution, same meaning as the shader supplying the allResourcesBound hint.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DX12 HEAP PRIORITIES OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Toggles overriding DXAPI's heap allocation priority values, ENABLE overrides with driver values. RS2+

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS DX12 RESOURCE BARRIER OVERRIDES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Override certain barriers. For experimental use only.

OFF, 0, FALSE                             (= 0x00000000)  // Default. No override.
RT TO SRV OVERRIDE                        (= 0x00000001)  // Override transition barriers of RT->NON PS SRV|SRV and make them RT->SRV. Leads to more PSBs. May corrupt images.
DEFER COPY BARRIERS UNTIL DRAW            (= 0x00000002)  // Defer copy dst related (to/from) transition barriers until first draw. Only happens at the beginning of CLs
DEFER COPY BARRIERS UNTIL DRAW ALWAYS ON  (= 0x00000006)  // Same as above, but keep this active through the entire CL, don't turn off at first draw

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT BAR1 DUMP UPLOAD HEAPS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Tracks and dumps each upload (and similar custom) heap creation.  Dev/debug only

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT BAR1 HEURISTICS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

If PS DX12 SURFACE PLACEMENT BAR1 PROMOTION=ON, the selected heuristic will be applied to BAR1 promotion (if enough BAR1 space is available).

FIRST COME FIRST SERVE  (= 0x00000000)  // Target every upload heap
GREATER THAN            (= 0x00000001)  // Target upload heaps greater than PS DX12 SURFACE PLACEMENT BAR1 SIZE
LESS THAN               (= 0x00000002)  // Target upload heaps less than PS DX12 SURFACE PLACEMENT BAR1 SIZE
INCLUDE SIZE LIST       (= 0x00000003)  // Target upload heaps with sizes found in PS DX12 SURFACE PLACEMENT BAR1 HEURISTIC LIST (each entry is a size in bytes). Example: PS DX12 SURFACE PLACEMENT BAR1 HEURISTIC LIST=0x400;0x5000;0x70000;0xF000;
EXCLUDE SIZE LIST       (= 0x00000004)  // Target upload heaps without sizes found in PS DX12 SURFACE PLACEMENT BAR1 HEURISTIC LIST (each entry is a size in bytes). Example: PS DX12 SURFACE PLACEMENT BAR1 HEURISTIC LIST=0x400;0x5000;0x70000;0xF000;
TARGET HEAP ORDER       (= 0x00000005)  // Target upload heaps by creation order found in PS DX12 SURFACE PLACEMENT BAR1 HEURISTIC LIST. Example: PS DX12 SURFACE PLACEMENT BAR1 HEURISTIC LIST=1;2;4;5; -> promote the 1st, 2nd, 4th, and 5th upload heap created

Default values for this setting:
DEFAULT:    FIRST COME FIRST SERVE

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT BAR1 HEURISTIC LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If PS DX12 SURFACE PLACEMENT BAR1 PROMOTION=ON, this string is used with various heuristics (please see PS DX12 SURFACE PLACEMENT BAR1 HEURISTICS for how this string is interpreted with each heuristic).


Default values for this setting:
???T:    

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT BAR1 LOCK CACHING LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If PS DX12 SURFACE PLACEMENT BAR1 PROMOTION=ON, use this string is used to specify resource sizes for lock caching. Example: PS DX12 SURFACE PLACEMENT BAR1 LOCK CACHING LIST=0x400;0x5000;0x70000;0xF000


Default values for this setting:
???T:    

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT BAR1 MISC FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Misc flags when PS DX12 SURFACE PLACEMENT BAR1 PROMOTION=ON

ENABLE LOCK CACHING         (= 0x00000001)  // Enable lock caching
IGNORE SYSTEM CAPABILITIES  (= 0x00000002)  // Ignore whether this system is BAR1 compatible (force on)
ALLOW GRID                  (= 0x00000004)  // Allow BAR1 placement of upload heaps on GRID adapters (e.g. GFN)
ALLOW VGX                   (= 0x00000008)  // Allow BAR1 placement of upload heaps on VGX environments (e.g. Xen/VMWare)
DISALLOW SLI                (= 0x00000010)  // Disallow BAR1 placement of upload heaps on SLI environments
IGNORE SIZE CLAMPING        (= 0x00000020)  // Ignore whether NvSurfacePlacement clamps PS DX12 SURFACE PLACEMENT BAR1 SIZE LIMIT to the BAR1 size reported by the GPU
IGNORE NVAPI HINTS          (= 0x00000040)  // Ignore Hints provided by NvAPI (useful for debugging)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT BAR1 PROMOTE INTERNAL FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

When PS DX12 SURFACE PLACEMENT BAR1 PROMOTION=ON, use these flags to promote internal driver resources to BAR1

PUSHBUFFERS  (= 0x00000001)  // Promote HOST allocs used by the pusher

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT BAR1 PROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables BAR1 promotion for D3D12 (upload heaps only)

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT BAR1 SIZE
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If PS DX12 SURFACE PLACEMENT BAR1 PROMOTION=ON, this value is used with GREATER THAN and LESS THAN heuristics (see PS DX12 SURFACE PLACEMENT BAR1 HEURISTICS). Value is in bytes


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT BAR1 SIZE LIMIT
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If PS DX12 SURFACE PLACEMENT BAR1 PROMOTION=ON, this value is used to limit the total size of resources promoted to BAR1. Value is in bytes


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT FLAGS
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to control global priorities of DX12 Resource heap types + other DX12 specific functionality

INVALID HEAP PRIORITY LOW            (= 0x0000000000000001)  // Priority = NV BLOCK PRIORITY LOW
INVALID HEAP PRIORITY NORMAL         (= 0x0000000000000002)  // Priority = NV BLOCK PRIORITY NORMAL
INVALID HEAP PRIORITY HIGH           (= 0x0000000000000004)  // Priority = NV BLOCK PRIORITY HIGH
INVALID HEAP PRIORITY MAXIMUM        (= 0x0000000000000008)  // Priority = NV BLOCK PRIORITY MAXIMUM
BUFFER HEAP PRIORITY LOW             (= 0x0000000000000010)
BUFFER HEAP PRIORITY NORMAL          (= 0x0000000000000020)
BUFFER HEAP PRIORITY HIGH            (= 0x0000000000000040)
BUFFER HEAP PRIORITY MAXIMUM         (= 0x0000000000000080)
STATIC TEX HEAP PRIORITY LOW         (= 0x0000000000000100)
STATIC TEX HEAP PRIORITY NORMAL      (= 0x0000000000000200)
STATIC TEX HEAP PRIORITY HIGH        (= 0x0000000000000400)
STATIC TEX HEAP PRIORITY MAXIMUM     (= 0x0000000000000800)
RTV HEAP PRIORITY LOW                (= 0x0000000000001000)
RTV HEAP PRIORITY NORMAL             (= 0x0000000000002000)
RTV HEAP PRIORITY HIGH               (= 0x0000000000004000)
RTV HEAP PRIORITY MAXIMUM            (= 0x0000000000008000)
TIER2 HEAP PRIORITY LOW              (= 0x0000000000010000)  // Tier 2 heaps may be used for any type of resource
TIER2 HEAP PRIORITY NORMAL           (= 0x0000000000020000)
TIER2 HEAP PRIORITY HIGH             (= 0x0000000000040000)
TIER2 HEAP PRIORITY MAXIMUM          (= 0x0000000000080000)
INVALID HEAP BONUS PRIORITY MASK     (= 0x0000000000F00000)  // Value times 0x1000 is added to the priority of this heap type. Bonus is added to surface placement's decision unless you also override with above values.
BUFFER HEAP BONUS PRIORITY MASK      (= 0x000000000F000000)
STATIC TEX HEAP BONUS PRIORITY MASK  (= 0x00000000F0000000)
RTV HEAP BONUS PRIORITY MASK         (= 0x0000000F00000000)
TIER2 HEAP BONUS PRIORITY MASK       (= 0x000000F000000000)
MODIFIED PRIORITIES MASK             (= 0x000000FFFFFFFFFF)
ASSUME UAVS IN BUFFER HEAPS          (= 0x0000010000000000)  // Flag buffer heaps as containing UAVs
ASSUME UAVS NOT IN BUFFER HEAPS      (= 0x0000020000000000)  // Flag buffer heaps as NOT containing UAVs. This is useful for overriding an appid turning this on and you override it back to off.

Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS DX12 SURFACE PLACEMENT LOCK CACHING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables Lock Caching for D3D12

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS DX9 CHUNKER MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls state bucket detection behavior

CHUNK ALWAYS                        (= 0x00000000)  // Chunk every state bucket
CHUNK KNOWN APPS                    (= 0x00000001)  // Chunk only known state buckets from specific apps for experimentation purposes
CHUNK KNOWN FULLSCREEN DRAW CALLS   (= 0x00000002)  // Chunk only known full-screen draw calls
CHUNK REDUCTION TRACKED DRAW CALLS  (= 0x00000004)  // Chunk using reduction tracker
CHUNK FULLSCREEN DRAW CALLS         (= 0x00000008)  // Chunk all fullscreen draw calls tracker
CHUNK HEURISTIC MASK                (= 0x000000ff)
CHUNK ON TILED CACHE ARCH           (= 0x00000200)  // Enable SW chunking on tiled cache architecture
CHUNK ALL BLENDING DRAW CALLS       (= 0x00000400)  // Chunk all buckets with blending enabled

Default values for this setting:
DEFAULT:    0x00000002
	CHUNK KNOWN FULLSCREEN DRAW CALLS       

------------------------------------------------------------
PS DX ASM SHADER REPLACEMENT FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Filename containing binary token streams for DX-asm-level replacement shaders


------------------------------------------------------------
PS DX ASM SHADER REPLACEMENT FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Shader replacement flags for dxasm in DX10 (wgf2um.dll)

DISABLE DRIVER SHADERS  (= 0x00000001)  // Disable replacement with custom shaders built into driver

------------------------------------------------------------
PS DX ASM SHADER REPLACEMENT NVAPI HLSL EXT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

force UAV slot (bits 7:0) and register space (bits 31:8) to use for NVAPI HLSL backdoor

SLOT MASK    (= 0x000000ff)
SPACE MASK   (= 0xffffff00)
SPACE SHIFT  (= 0x00000008)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS DYNAMIC CTA REFORMING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable/Disable dynamic CTA reforming perf strategy

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS ECL MERGE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

DISABLE MERGING      (= 0x00000001)  // Don't perform any ECL merging, just allow dependency tracking
LOG MULTIPLE FRAMES  (= 0x00000002)  // Pressing the hotkey is a start/stop switch for logging frames, instead of just logging one frame
BASIC LOGGING        (= 0x00000004)  // Log the ECL merging information into a file called NVECLDEPS.txt
EXTENDED LOGGING     (= 0x00000008)  // Log everything submitted
ETW LOGGING          (= 0x00000010)  // Log all file events to ETW as well
FRAME SUMMARIES      (= 0x00000020)  // For each frame, record the 0

------------------------------------------------------------
PS ECL MERGE HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set custom key for tracking ECL merging statistics 'hotkey' event [also need to set HOTKEYS regkey] (default is ctrl+F11)


Default values for this setting:
DEFAULT:    0x0000007A

------------------------------------------------------------
PS ECL MERGE LOG END FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ECL merging will end logging on this frame. Must be strictly greater than PS ECL MERGE START FRAME to log a frame.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS ECL MERGE LOG START FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ECL merging will begin logging on this frame.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS EVENTTRACEDX9
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

HOTKEY           (= 0x00000001)  // GPUVIEW Hotkey event - Ctrl-F8
MCEVENTS         (= 0x00000002)  // MultiChip events
ENTRYPOINTS      (= 0x00000004)  // Entry points
REFCOUNT WAIT    (= 0x00000010)  // begin/end of any wait on refcount
SUPERTRI         (= 0x00000020)  // begin/end of super tri processing
SHADER COMPILE   (= 0x00000040)  // begin/end of shader compilation
VTEX             (= 0x00000080)  // any vtex transfer blits
PSLOADBALANCE    (= 0x00000100)  // markers for PS LoadBalance
ASYNCDEVICEWAIT  (= 0x00000200)  // markers for AsyncDevice thread semaphores
VIDEO            (= 0x00001000)  // VIDEO trace format
QUERIES          (= 0x00002000)  // queries

------------------------------------------------------------
PS EVENTTRACEDX9 ENTRY POINTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ENTRY POINT LOCK          (= 0x00000001)  // Lock/Unlock functions
ENTRY POINT LOCK ASYNC    (= 0x00000002)  // LockAsync/UnlockAsync/Rename functions
ENTRY POINT QUERY         (= 0x00000004)  // Query related functions
ENTRY POINT FLUSH         (= 0x00000008)  // flush
ENTRY POINT BLIT          (= 0x00000010)  // all blits
ENTRY POINT PRESENT       (= 0x00000020)  // present
ENTRY POINT DEVICE        (= 0x00000040)  // misc device functions
ENTRY POINT RESOURCE      (= 0x00000080)  // all create/destroy calls (surfaces/shaders)
ENTRY POINT STATE         (= 0x00000100)  // all state changes
ENTRY POINT STATE LEGACY  (= 0x00000200)  // legacy ff state changes
ENTRY POINT DRAW          (= 0x00000400)  // draw / clear calls
ENTRY POINT DRAW2         (= 0x00000800)  // draw2 calls
ENTRY POINT VIDEO         (= 0x00001000)  // video related calls
ENTRY POINT ADAPTER       (= 0x00002000)  // adapter related functions

------------------------------------------------------------
PS FILE PATH
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The default output path for most perf strategies.  Perfstrat-specific settings (PS CYCLESTATS DIRECTORY, PS COPY TRACKER FILENAME, etc.) override this setting.


Default values for this setting:
DEFAULT:    c:

------------------------------------------------------------
PS FILTERING SHADER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

(DX10) Optimize shaders that perform their own texture filtering

OFF, 0, FALSE, DISABLED  (= 0x33986383)
ON, 1, TRUE, ENABLED     (= 0x36183041)

------------------------------------------------------------
PS FILTERING SHADER ADDRESS MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DX10 texture addressing mode for self-filtering shaders


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS FILTERING SHADER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

(DX10) Flags for self filtering shaders

FILTERINGSHADER                (= 0x00000001)  // Kill aniso on shader doing it's own filtering (DX10)
FILTERINGSHADER SIMPLE SEARCH  (= 0x00000002)  // Search for shader filtering with a simple count (DX10)
FILTERINGSHADER MIPOK          (= 0x00000004)  // Consider filtering shaders with mipmapped textures
FILTERINGSHADER ADDRESSMODE    (= 0x00000010)  // Set the texture addressing mode for a self-filtering shader

------------------------------------------------------------
PS FILTERING SHADER MAXANISO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DX10 anisotropic filtering limit for self-filtering shaders


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS FILTERING SHADER STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

DX10 Statistics for self-filtering shaders

OFF, 0, FALSE, DISABLED  (= 0x33726865)
ON, 1, TRUE, ENABLED     (= 0x81228679)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS FILTERING SHADER THRESH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DX10 Minimum tex instructions needed to declare shader as self-filtering


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
PS FORCEFOG
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x88724e2a)
ON, 1, TRUE, ENABLED     (= 0xb773cf10)

------------------------------------------------------------
PS FORCE DSR BLT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FORCE ALL          (= 0x00000001)
FORCE MSAA         (= 0x00000002)
FORCE SCREEN SIZE  (= 0x00000004)
FORCE FP FORMAT    (= 0x00000008)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS FORCE FULLSCREEN LATEZ
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables forcing fullscreen draws to latez mode

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS FORCE FULLSCREEN LATEZ FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ACCURATE FULLSCREEN CHECK  (= 0x00000001)  // run VS in SW for accurate IsFullscreen check
ANALYSIS ONLY              (= 0x00000002)  // run fullscreen analysis, but don't force LateZ

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS FORCE LOW LATENCY 3D NODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Force app to use low latency 3D node

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS FORMAT SUBSTITUTION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables performance strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS FORMAT SUBSTITUTION SKIPCHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Bitfields specifying which restrictions can be loosen.

SKIP SCREEN SIZE CHECK       (= 0x00000001)
SKIP TYPED FORMAT CHECK      (= 0x00000002)
SKIP TEXTURE2D CHECK         (= 0x00000004)
SKIP MIPMAPS CHECK           (= 0x00000008)
SKIP INITIAL DATA CHECK      (= 0x00000010)
SKIP LOCKABLE CHECK          (= 0x00000020)
SKIP SHARED RESOURCES CHECK  (= 0x00000040)
SKIP PRIMARIES CHECK         (= 0x00000080)
SKIP RENDERTARGET CHECK      (= 0x00000100)  // Skip spoofing rendertargets. Spoofing rendertargets is used on the DWM process to support 10 bits per component rendering
DEFAULT KEPLER               (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT KEPLER                          

------------------------------------------------------------
PS FORMAT SUBSTITUTION TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Bitfields specifying substitutions to be applied if rules (not) specified in PS FORMAT SUBSTITUTION SKIPCHECK are met. If SKIPCHECK is not set, default (all) rules will be used.

DEMOTE ABGR16F TO R11G11B10F  (= 0x00000001)  // Demotes FP16 to R11G11B10F. Default rule is to do all tests.
DEMOTE R32F TO R16F           (= 0x00000002)
DEMOTE R11G11B10F TO RGBA8    (= 0x00000004)  // Demotes R11G11B10F surfaces to RGBA8. Default rule for this demotion is to skip all tests.
DEMOTE SRGB TO RGB            (= 0x00000008)  // Demotes SRGB surfaces to RGB. Default rule for this demotion is to skip all test.
DEMOTE D32S8X24 TO D24S8      (= 0x00000010)  // Demotes D32 S8X24 (8BPP) to D24S8 (4BPP)
DEMOTE D32S8X24 TO D32        (= 0x00000020)  // Demotes D32 S8X24 (8BPP) to D32 (4BPP / no stencil)
DEMOTE RGBA32F TO RGBA16F     (= 0x00000040)
PROMOTE R5G6B5 TO RGBA8       (= 0x00000100)
PROMOTE RG8 TO RGBA8          (= 0x00000200)  // Promotes RG8 to RGBA8. Default rule is to do all tests.
PROMOTE R16F TO R32F          (= 0x00000400)
PROMOTE R16F TO RG16F         (= 0x00000800)
PROMOTE RGBX8 TO RGB10A2      (= 0x00001000)  // Promotes RGBX8 surfaces to RGB10A2. This is done on the DWM process when a 10 bits per component monitor is detected on Quadros
PROMOTE RGBA8 TO RGB10A2      (= 0x00002000)  // Promotes RGBA8 surfaces to RGB10A2. This is done on the DWM process when a 10 bits per component monitor is detected on Quadros
ALLOW FACTORED SIZES          (= 0x01000000)  // If size is MxN, also substitute (M/2)x(N/2), (M/4)x(M/4), etc.
DEFAULT KEPLER                (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT KEPLER                          

------------------------------------------------------------
PS FRAMERATE LIMITER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Framerate Limiter parameters, bit 31 to enable and LOWBYTE set to frames/sec

DISABLED                 (= 0x00000000)  // Disabled
FPS 20                   (= 0x00000014)  // Framerate set to 20 frames per sec
FPS 30                   (= 0x0000001e)  // Framerate set to 30 frames per sec
FPS 40                   (= 0x00000028)  // Framerate set to 40 frames per sec
FPSMASK                  (= 0x000003ff)  // Frames per sec mask
ALLOW DYNAMIC            (= 0x00001000)  // Allow limit to be set dynamically
YIELD PROCESSOR          (= 0x00002000)  // Use YieldProcessor() for accurate CPU wait, instead of Sleep(0)
NO ALIGN                 (= 0x00004000)  // Do not align with with display refresh
BB QM                    (= 0x00008000)  // BatteryBoost/QuietMode are enabled. Use separate FPS for AC/DC
LOWER FPS TO ALIGN       (= 0x00020000)  // Lower FPS to align with refresh for windowed or FS VSYNC ON case.
FORCE VSYNC OFF          (= 0x00040000)  // Force VSYNC OFF if this bit is set.
DISALLOWED               (= 0x00200000)  // Per app disable bit
USE CPU WAIT             (= 0x00400000)  // CPU wait instead of GPU wait (VGX requires CPU)
NO LAG OFFSET            (= 0x00800000)  // Do not apply offset to account for observed lag
BG CAP                   (= 0x01000000)  // Engage additional cap when running in background
ALLOW SLEEP WITH REFLEX  (= 0x02000000)  // Allow sleep with Reflex
ACCURATE                 (= 0x10000000)  // Accurate setting of fps but higer CPU usage
ALLOW WINDOWED           (= 0x20000000)  // Allow limiting of windowed applications
FORCEON                  (= 0x40000000)  // Force enable, ignore AC/DC status
ENABLED                  (= 0x80000000)  // Enabled
OPENGL REMOTE DESKTOP    (= 0xe000003c)  // Setting used for OpenGL Remote Desktop Sessions
LOW LATENCY DEFAULT      (= 0xb0c02000)  // Setting used for low latency
MASK                     (= 0xf3e6f3ff)  // Mask of all bits used

Default values for this setting:
DEFAULT:    0xB0C02000
	DISABLED                                
	LOW LATENCY DEFAULT                     

------------------------------------------------------------
PS FRAMERATE LIMITER 2 CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Framerate Limiter 2 controls

DELAY CE             (= 0x00000000)  // Always block CE
DELAY 3D             (= 0x00000001)  // Always block 3D
AVOID NOOP           (= 0x00000002)  // Avoid the noop buffer. Block CE when CE is used and 3D when 3D is used
DELAY CE PRESENT 3D  (= 0x00000008)  // For All, FRL delay buffer on CE And For discrete, Present on 3D
ALLOW ALL MAXWELL    (= 0x00000010)  // Do not restrict to Maxwell b, but allow on all maxwell chips
ALLOW ALL            (= 0x00000020)  // Allow on all chips
FORCE OFF            (= 0x00000040)  // Force off on all chips
ENABLE VCE           (= 0x00000080)  // Delay on Virtual CE node if DELAY CE is set for Mshybrid
DEFAULT FOR GM10X    (= 0x00000011)  // Default setting for GM10X

Default values for this setting:
DEFAULT:    0x00000088
	DELAY CE PRESENT 3D                     
	ENABLE VCE                              

------------------------------------------------------------
PS FRAMERATE LIMITER GPS CTRL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FRM parameters (deprecated)

DISABLED                  (= 0x00000000)  // Disabled
DECREASE FILTER MASK      (= 0x000001ff)  // *8 milliseconds
PAUSE TIME MASK           (= 0x0000fe00)  // *4 milliseconds
PAUSE TIME SHIFT          (= 0x00000009)
TARGET RENDER TIME MASK   (= 0x00ff0000)  // percentage
TARGET RENDER TIME SHIFT  (= 0x00000010)
PERF STEP SIZE MASK       (= 0x1f000000)  // percentage
PERF STEP SIZE SHIFT      (= 0x00000018)
INCREASE FILTER MASK      (= 0xe0000000)  // frames
INCREASE FILTER SHIFT     (= 0x0000001d)
OPTIMAL SETTING           (= 0x4a5a3219)  // Current optimal settings

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DISABLED                                
	DISABLED                                
	DISABLED                                
	DISABLED                                
	DISABLED                                

------------------------------------------------------------
PS FRAMERATE LOGGER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

FPS overlay and simple text logging

DISABLED   (= 0x00000000)  // Disabled
DISPLAY    (= 0x00000001)  // Display on screen
LOGTOFILE  (= 0x00000002)  // Log to file framerate.log
LOGTOETW   (= 0x00000004)  // Log to ETW
ALLOWDWM   (= 0x00000008)  // Permit DWM Monitoring

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
PS FRAMERATE MONITOR CTRL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FRM control parameters

DISABLED                  (= 0x00000000)  // Disabled
THRESHOLD PCT MASK        (= 0x000000ff)  // Trigger threshold in 0.01%
MOVING AVG X MASK         (= 0x00000f00)  // Number of frames to apply moving average over
MOVING AVG X SHIFT        (= 0x00000008)
VSYNC OFFSET MASK         (= 0x0000f000)  // offset to target in 0.25ms for VSYNC mode
VSYNC OFFSET SHIFT        (= 0x0000000c)
FRL OFFSET MASK           (= 0x000f0000)  // offset to target in 0.25ms for FRL mode
FRL OFFSET SHIFT          (= 0x00000010)
FPS USE FRL               (= 0x00000000)  // Enable FRM only when FRL is enabled (default)
LOW LATENCY LOG           (= 0x00100000)  // Enable data collection for low latency.
DISABLE MAP GPU TIMER     (= 0x00400000)  // Use GPU Timer registers to get GPU timestamps
ENABLE ON VSYNC           (= 0x00800000)  // Enable FRM when (adaptive) VSYNC is ON
FPS 30                    (= 0x1e000000)  // Enable FRM at 30 FPS regardless of FRL
FPS 60                    (= 0x3c000000)  // Enable FRM at 60 FPS regardless of FRL
FPS MASK                  (= 0xff000000)  // Enable FRM at target FPS
FPS SHIFT                 (= 0x00000018)
OPTIMAL SETTING           (= 0x00400364)  // Optimal settings (no VSYNC mode)
OPTIMAL SETTING V2        (= 0x00480364)  // Optimal settings (no VSYNC mode) V2
VSYNC OPTIMAL SETTING     (= 0x00c0f364)  // Optimal settings (with VSYNC mode)
VSYNC OPTIMAL SETTING V2  (= 0x00c8f364)  // Optimal settings (with VSYNC mode) V2

Default values for this setting:
DEFAULT:    0x00400364
	DISABLED                                
	DISABLED                                
	DISABLED                                
	DISABLE MAP GPU TIMER                   

------------------------------------------------------------
PS FRAMERATE MONITOR OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FRM override parameters

NONE                                (= 0x00000000)  // No override
DISABLE ALL                         (= 0x00000001)  // Disable FRM
IGNORE VSYNC                        (= 0x00000002)  // Ignore VSYNC is ON
DISABLE AND IGNORE REQUEST MAXPERF  (= 0x00000004)  // Disable FRM and ignore requesting max perf so that OPTP does not get disabled
IGNORE MULTI DEVICE                 (= 0x00000008)  // Bypass refcounting. DO NOT SET FOR GAMES THAT ACTIVELY USE MULTIPLE DEVICES!!!

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
PS FRAMERATE MONITOR REPORTING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable FRM reporting per present basis

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS FRAMERATE MONITOR VR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FRM control parameters for VR

DISABLED                       (= 0x00000000)  // Disabled
TARGET RENDER TIME MASK        (= 0x0000ffff)  // VR target render time in microseconds
TARGET COMPOSITION TIME MASK   (= 0xffff0000)  // VR target composition time in microseconds
TARGET COMPOSITION TIME SHIFT  (= 0x00000010)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DISABLED                                
	DISABLED                                

------------------------------------------------------------
PS FRL LOADING WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FRL workaround for long loading scene

DISABLED            (= 0x00000000)  // Disabled
SAFE FPS MASK       (= 0x000000ff)  // Safe FPS
FILTER ON MASK      (= 0x00003f00)  // Number of frames below threshold before turning WAR on
FILTER ON SHIFT     (= 0x00000008)
FILTER OFF MASK     (= 0x000fc000)  // Number of frames above threshold before turning WAR off
FILTER OFF SHIFT    (= 0x0000000e)
THRESHOLD US MASK   (= 0xfff00000)  // Render time threshold in microseconds
THRESHOLD US SHIFT  (= 0x00000014)
DEFAULT SETTING     (= 0xbb814a3c)  // Current default setting

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                
	DISABLED                                
	DISABLED                                
	DISABLED                                
	DISABLED                                

------------------------------------------------------------
PS GAMMATEXTURE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Gamma texture emulates the gamma ramp in the pixel shader with a texture lookup. It is only used on Tesla+.

OFF, 0, FALSE, DISABLED  (= 0x53212312)
ON, 1, TRUE, ENABLED     (= 0x56127897)

------------------------------------------------------------
PS GEOMETRY SHADER DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Master on / off switch for geometry shader dumps (nvwgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x12457256)
ON, 1, TRUE, ENABLED     (= 0x35830718)

------------------------------------------------------------
PS GEOMETRY SHADER DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Settings for geometry shader dumps (nvwgf2um.dll)

DUMP APP CREATED SHADERS             (= 0x00000001)
DUMP HAND TUNED SHADERS              (= 0x00000002)
DUMP DSR SHADERS                     (= 0x00000004)
DUMP CUBEMAP SHADERS                 (= 0x01000000)
DUMP DRIVER CALC SHADERS             (= 0x02000000)
DUMP ZERO USAGE SHADERS              (= 0x00000008)
DUMP NVINST                          (= 0x00000020)
DUMP NVVM                            (= 0x00000020)
DUMP SAMPLER STATE                   (= 0x00000040)
DUMP TEXTURE STATE                   (= 0x00000080)
DUMP ANNOTATED NVINST                (= 0x00000120)  // same as DUMP NVINST but injects D3DIL comments
DUMP ANNOTATED SASS                  (= 0x00000200)
DUMP ANNOTATED DXBC                  (= 0x00000400)
DUMP GENERATE SOURCE CODE            (= 0x00000800)
DUMP CONST HISTOGRAMS                (= 0x00001000)
DUMP RENDERTARGET STATE              (= 0x00002000)
DUMP DEPTHTARGET STATE               (= 0x00004000)
DUMP SHADER MEASURE TIME             (= 0x00010000)
DUMP SHADER MEASURE SPEED            (= 0x00020000)
DUMP SHADER MEASURE STALLS           (= 0x00040000)
DUMP SHADER MEASURE PCSAMPLER        (= 0x00080000)
DUMP SHADER SORT COLLECTIONS         (= 0x00100000)
DUMP SHADER USE PCSAMPLER FOR USAGE  (= 0x00200000)  // Use the PCSAMPLER hit counts instead of the normal usage.
DUMP SHADER COMPILE TIME             (= 0x00400000)

------------------------------------------------------------
PS GPUKERNEL DEBUG HELPER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE BREAK ON ASSERT   (= 0x00000001)  // Disable debug break on gpukAssert messages
ENABLE BREAK ON SNAPSHOT  (= 0x00000002)  // Enable debug break on gpukDebugSnapshot messages
LOG ASSERTS               (= 0x00000010)  // Write gpukAssert messages to a file in PS FILE PATH
LOG DEBUG SNAPSHOTS       (= 0x00000020)  // Write gpukDebugSnapshot messages to a file in PS FILE PATH
LOG PRINTS                (= 0x00000040)  // Write gpukPrint messages to a file in PS FILE PATH
LOG ALL                   (= 0x00000070)  // Write all GPUKernel messages to a file in PS FILE PATH

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS GSOUTPUTBLOAT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Artificially increase the GS MaxOutputVertexCount to deal with perf issue (see bug 407303).

OFF, 0, FALSE, DISABLED  (= 0xf033b861)  // Disabled (default), do not increase MaxOutputVertexCount
ON, 1, TRUE, ENABLED     (= 0xf033b862)  // Enabled, increase MaxOutputVertexCount as needed for optimal perf

------------------------------------------------------------
PS HOISTUSERCLIP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enables/disables user clip plane hoisting

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS HOISTUSERCLIP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

controls user clip plane hoisting

DISABLE USERCLIP HOISTING  (= 0x00000001)

------------------------------------------------------------
PS HULL SHADER DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Master on / off switch for hull shader (DX11 Tessellation) dumps (nvwgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x37226957)
ON, 1, TRUE, ENABLED     (= 0x54322201)

------------------------------------------------------------
PS HULL SHADER DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Settings for hull shader (DX11 Tessellation) dumps (nvwgf2um.dll)

DUMP APP CREATED SHADERS             (= 0x00000001)
DUMP HAND TUNED SHADERS              (= 0x00000002)
DUMP DSR SHADERS                     (= 0x00000004)
DUMP DRIVER CALC SHADERS             (= 0x02000000)
DUMP ZERO USAGE SHADERS              (= 0x00000008)
DUMP NVINST                          (= 0x00000020)
DUMP NVVM                            (= 0x00000020)
DUMP SAMPLER STATE                   (= 0x00000040)
DUMP TEXTURE STATE                   (= 0x00000080)
DUMP ANNOTATED NVINST                (= 0x00000120)  // same as DUMP NVINST but injects D3DIL comments
DUMP ANNOTATED SASS                  (= 0x00000200)
DUMP ANNOTATED DXBC                  (= 0x00000400)
DUMP GENERATE SOURCE CODE            (= 0x00000800)
DUMP CONST HISTOGRAMS                (= 0x00001000)
DUMP RENDERTARGET STATE              (= 0x00002000)
DUMP DEPTHTARGET STATE               (= 0x00004000)
DUMP SHADER MEASURE TIME             (= 0x00010000)
DUMP SHADER MEASURE SPEED            (= 0x00020000)
DUMP SHADER MEASURE STALLS           (= 0x00040000)
DUMP SHADER MEASURE PCSAMPLER        (= 0x00080000)
DUMP SHADER SORT COLLECTIONS         (= 0x00100000)
DUMP SHADER USE PCSAMPLER FOR USAGE  (= 0x00200000)  // Use the PCSAMPLER hit counts instead of the normal usage.
DUMP SHADER COMPILE TIME             (= 0x00400000)

------------------------------------------------------------
PS INDEX BUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

This is the global enable for the index buffer perf strategy.

OFF, 0, FALSE, DISABLED  (= 0x10681799)
ON, 1, TRUE, ENABLED     (= 0x90098363)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS INDEX BUFFER ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key allows individual control over the types of hw-assisited index buffer allowed.

ALLOW HARDWARE  (= 0x00000001)  // Hardware index buffers can be generally used for any primitive and partial index buffers. Disabled on certain NV4X BR02 parts.
ALLOW CALLRET   (= 0x00000002)  // Call/Return index buffers. Only kicks in for triangle primitives where the whole index buffer is invoked (a common case.)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS INDEX BUFFER STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

This is the global enable for the index buffer statistics dumping. There are no specific flag settings at this time.

DECIDE COUNTS  (= 0x00000001)  // Basic Stats like how many calls to ask for IndexBuffers we got. How many were rejected, how many below threshold etc..
DUMP INDICES   (= 0x00000002)  // Dumps indices in all index buffers for which Decide is called (basically all of them), the sizes, and strides to a file c:\IBList.txt.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS INDEX BUFFER THRESH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The value of this key is the minimum number of primitives for which HW or CALLRET index buffers will be used.


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
PS INPUT BUFFERS CB DUMP FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

filename for constant buffer dump output.


------------------------------------------------------------
PS INPUT BUFFERS DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Switch for dumping input buffers (nvwgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x12653542)
ON, 1, TRUE, ENABLED     (= 0x73748260)

------------------------------------------------------------
PS INPUT BUFFERS DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Settings for what buffers to dump (nvwgf2um.dll)

DUMP NONE                              (= 0x00000000)
DUMP VERTEX BUFFERS                    (= 0x00000001)
DUMP INDEX BUFFERS                     (= 0x00000002)
DUMP VERTEX SHADER CONSTANT BUFFERS    (= 0x00000004)
DUMP PIXEL SHADER CONSTANT BUFFERS     (= 0x00000008)
DUMP GEOMETRY SHADER CONSTANT BUFFERS  (= 0x00000010)
DUMP ASSOCIATED SHADER INFO            (= 0x00000020)

------------------------------------------------------------
PS INPUT BUFFERS IB DUMP FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

filename for index buffer dump output.


------------------------------------------------------------
PS INPUT BUFFERS VB DUMP FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

filename for vertex buffer dump output.


------------------------------------------------------------
PS KEPLER FORCECULL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable/Disable Kepler-only culling optimization

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS KEPLER ISSB
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enabled/disable inter shader staging buffers

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS KEPLER ISSB FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

controls inter shader staging buffer behavior

DISABLE VS OPTS                              (= 0x00000001)
DISABLE DS OPTS                              (= 0x00000010)
DISABLE GS OPTS                              (= 0x00000100)
DISABLE GS DONT FORWARD ATTRIBUTES VIA STLD  (= 0x00000200)
DONT BAILOUT IF SHADER IS SPILLING           (= 0x00001000)

------------------------------------------------------------
PS KEPLER LSU
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enable/disable LSU opts

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS KEPLER LSU FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

fine grained opt control

DONT PACK RGBA8 WRITES           (= 0x00000001)
DONT VECTORIZE SUST WRITES       (= 0x00000010)
DONT RESIZE CTA                  (= 0x00000100)
DONT SWIZZLE CTA                 (= 0x00001000)
DONT RESHAPE SHMEM               (= 0x00010000)
DONT COMPACT SHMEM               (= 0x00020000)
DONT OPTIMIZE SMALL BPP FORMATS  (= 0x00100000)

------------------------------------------------------------
PS KEPLER MRT SUBTILING PERF KNOB A DEFAULT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The default value for Subtiling Perf Knob A on Kepler when > 2 MRTs are bound


Default values for this setting:
DEFAULT:    0x607F6080

------------------------------------------------------------
PS KEPLER MRT SUBTILING PERF KNOB A ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable/Disable Kepler MRT subtiling perf knob a optimization

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS KEPLER PUR
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enabled/disable Partial UpdateSubresourceUP Remapping

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS KEPLER PUR FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

controls Partial UpdateSubresourceUP Remapping behavior

DISABLE BUFFER REMAPPING  (= 0x00000001)
DISABLE LOAD BALANCED     (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000002
	DISABLE LOAD BALANCED                   

------------------------------------------------------------
PS KEPLER SOO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enabled/disable stream out optimizer

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS KEPLER SOO FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

controls stream out optimizer behavior

DISABLE VS GS MERGING  (= 0x00000001)

------------------------------------------------------------
PS KEPLER SW CWD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enable/disable Software CWD opts

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS KEPLER SW CWD FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

fine grained opt control

DONT OPT COPY SHADERS   (= 0x00000001)
DONT OPT SHMEM SHADERS  (= 0x00000002)

------------------------------------------------------------
PS KEPLER TEX FOLDING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enabled/disable Tex to CB conversion

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS KEPLER TEX FOLDING FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

controls Tex to CB conversion behavior

DISABLE LD 1D FOLDING  (= 0x00000001)

------------------------------------------------------------
PS KEPLER VIEW REMAPPER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

enabled/disable 3D to 2DArray tex conversion

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS KEPLER VIEW REMAPPER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

controls how texture views are modifed

DISABLE 3D TO 2DARRAY DEMOTING  (= 0x00000001)

------------------------------------------------------------
PS KILL ON CONST
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disable kill on constant optimiziation

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS LENT HALO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable / Disable the vantage lenticular halo opt

OFF, 0, FALSE, DISABLED  (= 0x59671413)
ON, 1, TRUE, ENABLED     (= 0x44922080)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS LENT HALO BREAK TAPS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Break on the first occurrence lent halo shader with this number of taps


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS LENT HALO CHUNK SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

chunk size for kepler lent halo


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
PS LENT HALO FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control flags for LH opt

PACK COORDS             (= 0x00000001)
USE PACK CODE           (= 0x00000002)
DONT SCALE SYNCTEX      (= 0x00000004)
USE FCMP                (= 0x00000008)
NO ADDC CODE            (= 0x00000020)
AVOID WRAP              (= 0x00000100)
SOA COORDS              (= 0x00000200)  // Re-org the LH constant buffer into a structure of arrays
USE LDC                 (= 0x00000400)  // experimental maxwell code - use LDC for constant buffer lookup
SET PERFKNOBA           (= 0x00001000)  // Override perfknoba for the LH shaders
SET PS WARPS WATERMARK  (= 0x00002000)  // PS Warps Watermark
SET TC TIMEOUT          (= 0x00004000)  // Set PGRAPH GPCS TC TIMEOUT
SET CB EVICTION         (= 0x00008000)  // Set CB Eviction policy for GF119
COMPILE IMMEDIATE       (= 0x00010000)  // Compile LH shaders immediately - don't wait for the state profile'
TABLE LOOKUP KNOBS      (= 0x00020000)  // Table Lookup Perfknoba & ps warpwatermarks
OVERRIDE RED TRACK      (= 0x00040000)  // Override the reduction tracker
CHUNK                   (= 0x00080000)  // Use the chunker

------------------------------------------------------------
PS LENT HALO LOOKUP TABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

prefknobA, regfile, and maxquads per subtile table

OFF      (= 0x00000000)  // Don't set perfknobA, regfile, maxquads
DEFAULT  (= 0x00000001)  // Set perfknobA, regfile, maxquads based on chip ID
GK107    (= 0x00000002)  // Use GK107 settings
GK104    (= 0x00000003)  // Use GK104 settings
GK106    (= 0x00000004)  // Use GK106 settings

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
PS LENT HALO MAX TAPS WM
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum number of filter taps for lent halo optimization


Default values for this setting:
DEFAULT:    0x000001F4

------------------------------------------------------------
PS LENT HALO MIN TAPS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum number of filter taps for lent halo optimization


Default values for this setting:
DEFAULT:    0x00000005

------------------------------------------------------------
PS LENT HALO MIN TAPS WM
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum number of filter taps for lent halo optimization


Default values for this setting:
DEFAULT:    0x00000005

------------------------------------------------------------
PS LENT HALO PERFKNOBA
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Perf Knob A setting for lent Halo shaders


Default values for this setting:
DEFAULT:    0x16204080

------------------------------------------------------------
PS LENT HALO PS WARPS WATERMARK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

PS Warp Watermark setting for lent Halo shaders

DEFAULT KEPLER    (= 0x00400008)  // Kepler class default for this method
DEFAULT MAXWELL   (= 0x00400008)  // Maxwell class default for this method
DEFAULT PASCAL A  (= 0x00800008)  // PASCAL A class default for this method
DEFAULT PASCAL B  (= 0x00400008)  // PASCAL B class default for this method
DEFAULT VOLTA A   (= 0x00800008)  // VOLTA A class default for this method

------------------------------------------------------------
PS LENT HALO STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable / Disable stats for LH opt

OFF, 0, FALSE, DISABLED  (= 0x04843394)
ON, 1, TRUE, ENABLED     (= 0x54828262)

------------------------------------------------------------
PS LENT HALO TC TIMEOUT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

PGRAPH GPCS TC TIMEOUT for lent halo


Default values for this setting:
DEFAULT:    0x00000600

------------------------------------------------------------
PS LOADBALANCE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x88551123)
ON, 1, TRUE, ENABLED     (= 0x37521253)

------------------------------------------------------------
PS LOADBALANCE CALLCOUNT STEPPING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

by how many calls should we be incrementing/decrementing perfstrat usage on every frame


Default values for this setting:
DEFAULT:    0x00000064

------------------------------------------------------------
PS LOADBALANCE CPU BUSY THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

what fraction of the frame time the CPU stalled/idle time needs to drop below before we can decrease perf strats under redistributed load balancing


Default values for this setting:
DEFAULT:    0.200000

------------------------------------------------------------
PS LOADBALANCE CPU FREE THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

what fraction of the frame time the CPU needs to be stalled/idle before we can increase perf strats under redistributed load balancing


Default values for this setting:
DEFAULT:    0.400000

------------------------------------------------------------
PS LOADBALANCE DX12
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables command list timing for DX12 load balancing.

OFF, 0, FALSE, DISABLED  (= 0x88551123)
ON, 1, TRUE, ENABLED     (= 0x37521253)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS LOADBALANCE DX12 FORCE SCORE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Force a particular load balance score value.  Values outside [0.0, 1.0] are ignored.


Default values for this setting:
DEFAULT:    0.000000

------------------------------------------------------------
PS LOADBALANCE DX12 GPU ACTIVE MERGE THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Command list timing GPU active merge threshold, in microseconds


Default values for this setting:
DEFAULT:    0x00000032

------------------------------------------------------------
PS LOADBALANCE DX12 GPU IDLE THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Amount of allowed GPU idle time, based on DX12 command list timing


Default values for this setting:
DEFAULT:    0.100000

------------------------------------------------------------
PS LOADBALANCE DX12 ONE FRAME AHEAD MAX THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of frames ahead before we consider ourselves completely GPU limited.


Default values for this setting:
DEFAULT:    0.900000

------------------------------------------------------------
PS LOADBALANCE DX12 ONE FRAME AHEAD MIN THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of frames ahead before we start considering ourselves GPU limited.


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
PS LOADBALANCE FILTER HEURISTIC
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

which heuristic to use for filtering/smoothing the queued frame measurements

RUNNING AVERAGE     (= 0x00000001)
BOX FILTER UNIFORM  (= 0x00000002)
BOX FILTER LINEAR   (= 0x00000003)

Default values for this setting:
DEFAULT:    BOX FILTER UNIFORM

------------------------------------------------------------
PS LOADBALANCE FRAMETIME AVERAGING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

how many frames should we be averaging frame time over


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
PS LOADBALANCE GPU BUSY THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

what fraction of the frame time the GPU needs to be busy before we can allow perf strats


Default values for this setting:
DEFAULT:    0.800000

------------------------------------------------------------
PS LOADBALANCE HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables a hotkey (control-F10) for changing PS LOADBALANCE MODE dynamically.  PS LOADBALANCE MODE *must* be set to FORCE CPU LIMITED or FORCE CPU LIMITED.  Pressing control-F10 swaps between CPU and GPU limitedness.

OFF, 0, FALSE, DISABLED  (= 0xd86b7741)
ON, 1, TRUE, ENABLED     (= 0xbdd134c8)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS LOADBALANCE INTRA BUFFER SPACING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

insert a new timestamp every X bytes worth of pushbuffer


Default values for this setting:
DEFAULT:    0x00008000

------------------------------------------------------------
PS LOADBALANCE LAG REDUCTION HYSTERSIS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of frames to wait before disabling lag reduction again


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
PS LOADBALANCE LOW LATENCY SLEEP FACTOR
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

In FRL Low Latency mode, force gpu limited for a factor of a the FRL sleep time.  Useful because there are no queued frames.


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
PS LOADBALANCE MAX MEASUREMENTS PER FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS LOADBALANCE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

FORCE CPU LIMITED, FORCE ALWAYS OFF  (= 0x00000000)
FORCE GPU LIMITED, FORCE ALWAYS ON   (= 0x00000001)
FORCE LOADBALANCE, FORCE LB          (= 0x00000002)
FORCE ALTERNATE                      (= 0x00000003)
FORCE ALTERNATE EACH DECISION        (= 0x00000004)
FORCE HIGH FREQUENCY MODE            (= 0x00000005)  // high frequency (per decision) mode as opposed to traditional (per command buffer or so) mode
FORCE SCORE OSCILLATION              (= 0x00000006)

------------------------------------------------------------
PS LOADBALANCE ONE FRAME AHEAD THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

number of frames in flight above which is considered to be GPU-limited (added to N-1 for multi-GPU)


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
PS LOADBALANCE PERF STRAT TIMER FILTER HEURISTIC
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

which heuristic to use for filtering/smoothing the measured perf strat CPU overhead

RUNNING AVERAGE     (= 0x00000001)
BOX FILTER UNIFORM  (= 0x00000002)
BOX FILTER LINEAR   (= 0x00000003)

Default values for this setting:
DEFAULT:    BOX FILTER LINEAR

------------------------------------------------------------
PS LOADBALANCE PERF STRAT TIMER SAMPLES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

number of samples to filter over for perf strat overhead estimation


Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
PS LOADBALANCE QUEUED FRAME OFFSET
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

by how much we need to offset the queued frames required before we can unconditionally allow perf strats under redistributed load balancing


Default values for this setting:
DEFAULT:    1.000000

------------------------------------------------------------
PS LOADBALANCE QUEUED FRAME THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

how many queued frames are required before we can conditionally allow perf strats under redistributed load balancing


Default values for this setting:
DEFAULT:    0.200000

------------------------------------------------------------
PS LOADBALANCE QUEUED WORK CUTOFF
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

what is the minimum amount of GPU work that needs to be in flight before we attempt any perf strats, expressed in milliseconds


Default values for this setting:
DEFAULT:    1.000000

------------------------------------------------------------
PS LOADBALANCE STATS LOG SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable statistics logging for last N frames if non-zero


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS LOADBALANCE TIMEOUT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS LOADBALANCE USE INTRA BUFFER TIMING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

insert timestamps within command buffers, not only on boundaries (kickoffs)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS LOADBALANCE USE PERF STRAT TIMER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

use time spent by CPU to go through perf strats in load balancing decisions

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS LOAD TO CONST
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS LOAD TO CONST FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE PROFILES  (= 0x00000001)  // Use for all SB slots of all eligible shaders

------------------------------------------------------------
PS LOAD TO CONST SHADER HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Hash of shader to be optimized by LoadToConst


------------------------------------------------------------
PS LOAD TO CONST SHADER SLOT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

SB Slot to be remapped to CB


------------------------------------------------------------
PS LWBM STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is the bitfield of flags for the working set log(s).

TIMING DATA  (= 0x00000001)  // Dump timing information for KMI and other calls

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS MAXWELL MRT SUBTILING PERF KNOB A DEFAULT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The default value for Subtiling Perf Knob A on Maxwell when > 2 MRTs are bound


Default values for this setting:
DEFAULT:    0x20806080

------------------------------------------------------------
PS MAXWELL MRT SUBTILING PERF KNOB A ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable/Disable Maxwell MRT subtiling perf knob a optimization

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS MAXWELL PRI GPC0 SWDX TC TIMEOUT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This regkey is to set NV PGRAPH PRI GPC0 SWDX TC TIMEOUT


Default values for this setting:
DEFAULT:    0x00010000

------------------------------------------------------------
PS MAXWELL PRI GPCS SWDX CONFIG TILED CACHING
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

When present, sets the value of NV PGRAPH PRI GPCS SWDX CONFIG: TILED CACHING. Note PRI GPCS SWDX CONFIG TILED CACHING ENABLE=0.

OFF, 0, FALSE, DISABLED  (= 0x00000001)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000000)  // ON

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS MAXWELL SULD TO TLD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable the SULD to TLD modification for read-only UAVs.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS MAXWELL TILEDCACHE BUNDLE ADDR0
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This regkey is to set NV PGRAPH PRI GPCS SWDX TC BUNDLE ADDR(0)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS MAXWELL TILEDCACHE BUNDLE ADDR1
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This regkey is to set NV PGRAPH PRI GPCS SWDX TC BUNDLE ADDR(1)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS MAXWELL TILEDCACHE BUNDLE CTRL0
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This regkey is to set NV PGRAPH PRI GPCS SWDX TC BUNDLE CTRL(0)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS MAXWELL TILEDCACHE CBBIND THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Threshold for increasing buffer interleave CBTBL index count to 3 [7:0], 4 [15:8], and T$ off [31:16]

CB MIN THRESHOLD MASK   (= 0x000000ff)  // Mask for CBTBL min threshold
CB HIGH THRESHOLD MASK  (= 0x0000ff00)  // Mask for CBTBL high threshold
CB MAX THRESHOLD MASK   (= 0xffff0000)  // Mask for CBTBL max threshold (Maxwell multi-GPC only)

Default values for this setting:
DEFAULT:    0x10002110
	0x10002110

------------------------------------------------------------
PS MAXWELL TILEDCACHE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey enables various tiled cache binning optimizations.

DISABLE SKIP FLUSH REDUNDANT BINDS            (= 0x00000001)  // Do not skip tiled cache flush on redundant RT/DS binds
DISABLE OFF Z ONLY BIND                       (= 0x00000002)  // Do not disable tiled cache when only z/stencil is bound
FLUSH ON AA RESOLVE                           (= 0x00000004)  // Do not bin AA resolve together with AA rendering
FORCE CAN BIN ACROSS RT BINDS                 (= 0x00000008)  // Force binning behavior across RT binds on multi-GPC parts
DISABLE BINNING CLEARS                        (= 0x00000010)  // Disable tiled caching for clears.
FORCE WFI AFTER CLEARS                        (= 0x00000020)  // Force wait-for-idle after all clears.
DISABLE HEAVYWEIGHT BUNDLE BINNABLE OVERRIDE  (= 0x00000040)  // Disables forcing safe heavy-weight bundles to be binnable (all heavyweight bundles NON-binnable)
DISABLE PER SEGMENT GPFIFO                    (= 0x00000080)  // Disables hooking up a GPFIFO entry at segment boundaries
DISABLE WITH TESSELLATION SHD                 (= 0x00000100)  // Disables tiled caching with tessellation shaders
DISABLE WITH GEOMETRY SHD                     (= 0x00000200)  // Disables tiled caching with geometry shaders
DISABLE WITH PSI SHD                          (= 0x00000400)  // Disables tiled caching with pixel shader interlock enabled pixel shaders
DISABLE STEAM VR SMALL PRIM HWBUG WAR         (= 0x00010000)  // Disables the Steam VR perf test small prim WAR
FLIP TILE XY DIMENSIONS                       (= 0x00020000)  // Inverts tile X,Y size calculations for cases where X != Y
INCLUDE RT ARRAY SLICES IN BPP                (= 0x00040000)  // Include multiple render target array slices in bits per pixel/tile size calculation
BIN BLENDING ONLY                             (= 0x00080000)  // Bin blending buckets only.
USE MAX TILESIZE TO DISABLE BINNING           (= 0x00100000)  // Use tile size = 0x80008000 instead of explicitly turning T$ OFF

Default values for this setting:
DEFAULT:    0x00000584
	FLUSH ON AA RESOLVE                     
	DISABLE PER SEGMENT GPFIFO              
	DISABLE WITH TESSELLATION SHD           
	DISABLE WITH PSI SHD                    

------------------------------------------------------------
PS MEMORYSTATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

This key is the global enable for memory stats

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS MEMORYSTATS FRAME INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Frame interval after which stats needs to be dumped

MIN  (= 0x00000000)
MAX  (= 0x7fffffff)

------------------------------------------------------------
PS MEMORY OPT FRAME LAGGING THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This key set the GPU frame lagging count before re-creating the pushbuffer with performance optimized parameters


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
PS MEMORY OPT INITIAL FRAME COUNT LOW FOOTPRINT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the frame count after device creation where the device is forced to low memory footprint


Default values for this setting:
DEFAULT:    0x0000000F

------------------------------------------------------------
PS METHOD CHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Count methods of various sorts, requires a special driver build

OFF, 0, FALSE, DISABLED  (= 0x91523313)  // Don't count methods
ON, 1, TRUE, ENABLED     (= 0x73317235)  // Count methods - warning: SLOW!

------------------------------------------------------------
PS METHOD CHECK HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Hotkey used to start / stop collection.


Default values for this setting:
DEFAULT:    0x000000A0

------------------------------------------------------------
PS METHOD CHECK THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display frames with method counts > than this value


Default values for this setting:
DEFAULT:    0x00000014

------------------------------------------------------------
PS MINIMIZE SHADER ATTRIBUTES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Search for IMAP/OMAP dependencies between adjacent shaders in the pipeline and kill unused attributes

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS MINIMIZE SHADER ATTRIBUTES FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Disable specific features for the perf strat

DISABLE PIXEL              (= 0x00000001)  // Disables killing of PS outputs
DISABLE VTG                (= 0x00000002)  // Disables killing of VTG outputs and inputs
DISABLE NULL COLOR TARGET  (= 0x00000004)  // Disables killing of unbound/null color targets

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS MINIMIZE TEX
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables performance strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS MINIMIZE TEX FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE RGBA8 TO R8  (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS MISC INSOMNIA
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS MME64 PROFILER DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable MME64 profiler

DISABLE  (= 0x00000000)  // Disable MME64 profiler
ENABLE   (= 0x00000001)  // Enable MME64 profiler

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
PS MSAA DEPTH PASS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS MSAA DEPTH PASS ALTERNATE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Toggles the strategy on alternate frames

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS MSAA DEPTH PASS APP DETECT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Determines whether to do the app detect check

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS MSAA DEPTH PASS MAX INST COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Threshold for maximum number of instructions in a MSAA-Depth pass optimized shader

SM CLASSIC MAX INST COUNT DEFAULT  (= 0x00000010)
SM QUICK MAX INST COUNT DEFAULT    (= 0x00000010)

------------------------------------------------------------
PS MSAA DEPTH PASS SM CHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Determines whether to do the SM version check

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS MULTICHIP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x52aebf3d)
ON, 1, TRUE, ENABLED     (= 0xde8f1a66)

------------------------------------------------------------
PS MULTICHIP BREAKPOINT0
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

TEXTURE       (= 0x00000000)
TEXTURE PUSH  (= 0x00000001)
FRAMEBUFFER   (= 0x00000002)
VERTEXBUFFER  (= 0x00000003)
INDEXBUFFER   (= 0x00000004)
RENDERTARGET  (= 0x00000005)
VIEWPORT      (= 0x00000006)
ZBUFFER       (= 0x00000007)
TWODSURFACE   (= 0x00000008)
PUSHFORAFR    (= 0x00000009)
OTHER         (= 0x0000000a)

------------------------------------------------------------
PS MULTICHIP BREAKPOINT1
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

TEXTURE       (= 0x00000000)
TEXTURE PUSH  (= 0x00000001)
FRAMEBUFFER   (= 0x00000002)
VERTEXBUFFER  (= 0x00000003)
INDEXBUFFER   (= 0x00000004)
RENDERTARGET  (= 0x00000005)
VIEWPORT      (= 0x00000006)
ZBUFFER       (= 0x00000007)
TWODSURFACE   (= 0x00000008)
PUSHFORAFR    (= 0x00000009)
OTHER         (= 0x0000000a)

------------------------------------------------------------
PS MULTICHIP STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS MULTIPASS FFT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Allows you to specifically disable MultiPass FFT perf strategy 

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS MULTIPASS FFT FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DUMP STATS          (= 0x00000001)  // if set, will dump statistics for FFT
DUMP INFO           (= 0x00000002)  // if set, will dump general FFT info
DUMP LOOKASIDE CBS  (= 0x00000004)  // if set, will dump lookaside CBs
DUMP TRANSIENT CBS  (= 0x00000008)  // if set, will dump transient CBs
DEFAULT             (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
PS MULTIPASS FFT MAX COALESCED GRIDS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Allows you to specify the max number of grids that will be coalesced


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
PS OCCLUDE BEFORE FETCH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable Occclude Before Fetch

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS OCCLUDE BEFORE FETCH FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls Occlude Before Fetch

MRT ONLY                    (= 0x00000001)  // Enable only for MRT buckets
REMOVE GENERICS IN PS IMAP  (= 0x00000002)  // Replace references to generic attributes in PS with an immediate zero

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS ODEPTH TO COLOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables/Disables performance strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS PASCAL BINNED OCC QUERY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Decide when to copy the occlusion reports from video memory to system memory used by GetData.

DEFAULT                         (= 0x00000000)  // Flush deferred backend copies based on perfstrat heuristics.
NO DEFERRAL                     (= 0x00000001)  // Debug: Issue each backend copy at end report time.
SKIP WAIT ON CLEAR              (= 0x00000002)  // Debug: Skip waiting for clear on begin. (after query memory reused)
DISABLE OCCLUSION BINNING       (= 0x00000004)  // Fallback to kepler queries if app specifies D3D10 QUERY OCCLUSION.
DISABLE PREDICATE BINNING       (= 0x00000008)  // Fallback to kepler queries if app specifies D3D10 QUERY OCCLUSION PREDICATE.
DISABLE PREDICATE HINT BINNING  (= 0x00000010)  // Fallback to kepler queries if app specifies D3D10 QUERY MISC PREDICATEHINT.

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
PS PASCAL BINNED OCC QUERY SCRATCH METHODS COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max number of methods used to defer beckend query copies.


Default values for this setting:
DEFAULT:    0x00002000

------------------------------------------------------------
PS PATCH SHADOWMAP UNIQUENESS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disable ignoring shadowmap uniqueness on creation and patching it in post-compilation

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS PERFBOOST
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

This key is the global enable for the P-state boosting strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS PERFBOOST CPU BOUND FRAMES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of frames of CPU activity before GPU activity to cause P-state boost


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
PS PERFBOOST GPU BOUND FRAMES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of frames of GPU activity to cause P-state boost


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
PS PERFBOOST INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum time in seconds between P-state boosts


Default values for this setting:
DEFAULT:    0x00000005

------------------------------------------------------------
PS PERFBOOST TIME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of seconds to boost P-state to P0


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls piecemeal profiling (dx11 and dx12)

OFF, 0, FALSE, DISABLED  (= 0xa2b53761)
ON, 1, TRUE, ENABLED     (= 0x79292610)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER BATCH SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The number of points in the search space that we should profile at once

MIN  (= 0x00000001)
MAX  (= 0x00000020)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER CPUMEM BUF SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The number of words of system memory for storing counters.

MIN  (= 0x00000040)
MAX  (= 0x40000000)

Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER EPOCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The starting point in the search space that we should profile

MIN  (= 0x00000001)
MAX  (= 0x00000020)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER EXTRA ORI FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Piecemeal profiling extra flags to pass to ORI (wgf2um.dll)

CVR NO FTZ                 (= 0x00000004)  // Do not use FTZ on comparisons
CVR ALLOW CODE MOTION      (= 0x00000008)  // Allow the CVR pass to hoist/sink instructions
CVR PERFORM UNIFORM CHECK  (= 0x00000010)  // Force versioning check to be warp-uniform
CVR CREATE COMMON TAILS    (= 0x00000020)  // Reduce code bloat by forcing specialized region to exit early
CVR ENABLE CVR             (= 0x00000040)  // Do the CVR PGO
CVR ENABLE BB FREQ OPTIS   (= 0x00000080)  // Use BB frequencies to guide other ORI optimizations

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ENABLE FOR ALL    (= 0x00000000)  // enable for all, no filters as below
ENABLE FOR PS     (= 0x00000001)  // enable only for pixel shaders
ENABLE FOR CS     (= 0x00000002)  // enable only for compute shaders
TURING AND ABOVE  (= 0x00000004)  // enable for TU+
AMPERE AND ABOVE  (= 0x00000008)  // enable for GA+
DX11 ONLY         (= 0x00000010)  // enable for DX12 Only
DX12 ONLY         (= 0x00000020)  // enable for DX12 Only

Default values for this setting:
DEFAULT:    0x00000000
	ENABLE FOR ALL                          

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER FOCUS ON HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Whether we should focus on a particular shader with D3D10 hash


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER PROFILE KIND
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLED   (= 0x00000000)  // Profiling is disabled
ZEROPLOIT  (= 0x00000001)  // Enable Zeroploit instrumentation

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER SAMPLING FREQ
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The probability of sampling any given draw call.


Default values for this setting:
DEFAULT:    0.000000

------------------------------------------------------------
PS PGO PIECEMEAL PROFILER VIDMEM BUF SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The number of words of video memory for storing counters.

MIN  (= 0x00000040)
MAX  (= 0x40000000)

Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS PIXEL SHADER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x29962001)
ON, 1, TRUE, ENABLED     (= 0x85639845)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS PIXEL SHADER ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

ALLOW STATIC HAND TUNED TSS        (= 0x00000001)
ALLOW STATIC HAND TUNED REAL       (= 0x00000002)
ALLOW DYNAMIC HAND TUNED TSS       (= 0x00000004)
ALLOW DYNAMIC HAND TUNED REAL      (= 0x00000008)
WHITE TUNEDNESS STATIC HANDTUNED   (= 0x00000010)
WHITE TUNEDNESS DYNAMIC HANDTUNED  (= 0x00000020)
WHITE TUNEDNESS NON HANDTUNED      (= 0x00000040)
WHITE TYPE TSS                     (= 0x00000100)
WHITE TYPE PS1X                    (= 0x00000200)
WHITE TYPE PS20                    (= 0x00000400)
WHITE TYPE PS30                    (= 0x00000800)
ALLOW QIF OPT                      (= 0x00001000)

Default values for this setting:
DEFAULT:    0x00000003
	ALLOW STATIC HAND TUNED TSS             
	ALLOW STATIC HAND TUNED REAL            

------------------------------------------------------------
PS PIXEL SHADER BREAKHASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS PIXEL SHADER DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Master on / off switch for pixel shader dumps (nvwgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x12542653)
ON, 1, TRUE, ENABLED     (= 0x78260374)

------------------------------------------------------------
PS PIXEL SHADER DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Settings for pixel shader dumps (nvwgf2um.dll)

DUMP APP CREATED SHADERS             (= 0x00000001)
DUMP HAND TUNED SHADERS              (= 0x00000002)
DUMP DSR SHADERS                     (= 0x00000004)
DUMP CUBEMAP SHADERS                 (= 0x01000000)
DUMP DRIVER CALC SHADERS             (= 0x02000000)
DUMP ZERO USAGE SHADERS              (= 0x00000008)
DUMP NVINST                          (= 0x00000020)
DUMP NVVM                            (= 0x00000020)
DUMP SAMPLER STATE                   (= 0x00000040)
DUMP TEXTURE STATE                   (= 0x00000080)
DUMP ANNOTATED NVINST                (= 0x00000120)  // same as DUMP NVINST but injects D3DIL comments
DUMP ANNOTATED SASS                  (= 0x00000200)
DUMP ANNOTATED DXBC                  (= 0x00000400)
DUMP GENERATE SOURCE CODE            (= 0x00000800)
DUMP CONST HISTOGRAMS                (= 0x00001000)
DUMP RENDERTARGET STATE              (= 0x00002000)
DUMP DEPTHTARGET STATE               (= 0x00004000)
DUMP SHADER MEASURE TIME             (= 0x00010000)
DUMP SHADER MEASURE SPEED            (= 0x00020000)
DUMP SHADER MEASURE STALLS           (= 0x00040000)
DUMP SHADER MEASURE PCSAMPLER        (= 0x00080000)
DUMP SHADER SORT COLLECTIONS         (= 0x00100000)
DUMP SHADER USE PCSAMPLER FOR USAGE  (= 0x00200000)  // Use the PCSAMPLER hit counts instead of the normal usage.
DUMP SHADER COMPILE TIME             (= 0x00400000)

------------------------------------------------------------
PS PIXEL SHADER DUMP ON CREATION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable dumping of DX9 pixel shaders as they are created

OFF, 0, FALSE, DISABLED  (= 0x18989151)
ON, 1, TRUE, ENABLED     (= 0x18384404)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS PIXEL SHADER DUMP ON CREATION FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Filename for dumping of DX9 pixel shaders as they are created


------------------------------------------------------------
PS PIXEL SHADER SQDDELAY ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

SQDDELAY NONFAT   (= 0x00000001)
SQDDELAY SEMIFAT  (= 0x00000002)
SQDDELAY FAT      (= 0x00000004)

Default values for this setting:
DEFAULT:    0x00000007
	SQDDELAY NONFAT                         
	SQDDELAY SEMIFAT                        
	SQDDELAY FAT                            

------------------------------------------------------------
PS PIXEL SHADER SQDDELAY NONTEXTURE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000060

------------------------------------------------------------
PS PIXEL SHADER SQDDELAY SHORT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS PIXEL SHADER SQDDELAY TEXTURE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS PIXEL SHADER STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DUMP NON HAND TUNED TSS           (= 0x00000001)
DUMP HAND TUNED TSS               (= 0x00000002)
DUMP NON HAND TUNED REAL          (= 0x00000004)
DUMP HAND TUNED REAL              (= 0x00000008)
DUMP NVINST                       (= 0x00000100)
DUMP CONST HISTOGRAMS             (= 0x00001000)
DUMP SHADER MEASURE TIME          (= 0x00010000)
DUMP SHADER MEASURE SPEED         (= 0x00020000)
DUMP SHADER MEASURE STALLS        (= 0x00040000)
DUMP SHADER MEASURE PCSAMPLER     (= 0x00080000)
DUMP SHADER COMPILE TIME RUNTIME  (= 0x00100000)
DUMP SHADER COMPILE TIME          (= 0x00200000)
DUMP RAW COMBINERS                (= 0x01000000)
DUMP TEXTURE STAGE INFO           (= 0x02000000)
DUMP SHADER API BYTECODE          (= 0x04000000)
DUMP SHADER USAGE MAP             (= 0x08000000)
DUMP SURFACE AND STATE INFO       (= 0x10000000)
DUMP ZERO USAGE SHADERS           (= 0x20000000)
DUMP FLAGS                        (= 0x40000000)
DUMP DSR SHADERS                  (= 0x80000000)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS PIXEL SHADER STATS MAX SHADERS DUMPED
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of shaders that can be dumped for DX9 pixel shader dumps


Default values for this setting:
DEFAULT:    0x00000800

------------------------------------------------------------
PS PIXEL SHADER WHITENESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

WHITE TUNEDNESS STATIC HANDTUNED   (= 0x00000010)
WHITE TUNEDNESS DYNAMIC HANDTUNED  (= 0x00000020)
WHITE TUNEDNESS NON HANDTUNED      (= 0x00000040)
WHITE TYPE TSS                     (= 0x00000100)
WHITE TYPE PS1X                    (= 0x00000200)
WHITE TYPE PS20                    (= 0x00000400)
WHITE TYPE PS30                    (= 0x00000800)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS PREFER DSR BLT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

For chips with 'slow' TWOD, use heuristics to determine if 3D/DSR may be preferrable for copies/resolves

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS PREFER DSR BLT SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

For surfaces over these dimensions (given as logical-width x logical-height [default is 1024*1024]), prefer 3D/DSR for copies/resolves on chips with 'slow' TWOD


Default values for this setting:
DEFAULT:    0x00100000

------------------------------------------------------------
PS PRERESOLVE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x18f3902c)
ON, 1, TRUE, ENABLED     (= 0x18f3902d)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS PRIMARY SURFACE STALL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x79384338)
ON, 1, TRUE, ENABLED     (= 0x67081874)

------------------------------------------------------------
PS PRIMARY SURFACE STALL STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS PSHADER COMPILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x29543769)
ON, 1, TRUE, ENABLED     (= 0x79272925)

------------------------------------------------------------
PS PSHADER COMPILE ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ENABLE OPTIMIZER         (= 0x00000001)  // Allow the pixel shader optimizer
ENABLE BRANCH OPTIMIZER  (= 0x00000002)  // Allow branch optimizations
APP DETECT               (= 0x00000010)  // Alter the opt level for specific apps
LOAD BALANCE             (= 0x00000020)  // Attempt to load balance compilation

------------------------------------------------------------
PS PSO LIBRARY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags that are used by PSO Library codepath

ENABLE DEFAULT SHADER SERIALIZATION  (= 0x00000001)  // Enables serialization of the default shader code into the PSO library
DISABLE SERIALIZED CHECKS            (= 0x00000002)  // Disables all checks of the serialized data to confirm it is from the current driver
MAX VALUE                            (= 0xffffffff)  // All bits set

------------------------------------------------------------
PS PUSHBUFFER DUMP END FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Ending frame to write out pushbuffer dump, inclusive


------------------------------------------------------------
PS PUSHBUFFER DUMP FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

output directory+filename, must exist


------------------------------------------------------------
PS PUSHBUFFER DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

pushbuffer dumping flags

ENABLE                   (= 0x00000001)  // enable pushbuffer dumping
PER FRAME LOGFILE        (= 0x00000002)  // generates a new dump file for every frame
DO NOT DECODE METHODS    (= 0x00000004)  // do not decode methods into plain text
COUNT ONLY               (= 0x00000008)  // count methods/gpfifo entries only
FORCE COHERENT PB GP     (= 0x00000010)  // force pushbuffer/gpfifo entries to be allocated in coherent sysmem (avoids slow uncached reads)
FORCE NO SUBROUTINES     (= 0x00000020)  // force inlining of pre-compiled methods (otherwise they will be missing)
WFI ONLY                 (= 0x00000040)  // dump only wfi/context switch information, rather than the whole pushbuffer
ENTRY POINT ANNOTATIONS  (= 0x00000080)  // include API entrypoint annotations
APP REGIME ANNOTATIONS   (= 0x00000100)  // include app regime annotations
PERFSTRAT ANNOTATIONS    (= 0x00000200)  // include perfstrat annotations
HOTKEY                   (= 0x00001000)  // hotkey (ctrl+F3) starts/stops pushbuffer capture
FLUSH FILE               (= 0x00002000)  // synchronous file I/O and flush file after each write

------------------------------------------------------------
PS PUSHBUFFER DUMP START FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Starting frame to write out pushbuffer dump, inclusive


------------------------------------------------------------
PS PUSH VID
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x66081959)
ON, 1, TRUE, ENABLED     (= 0x10354174)

------------------------------------------------------------
PS R32F COMPRESSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x99388110)
ON, 1, TRUE, ENABLED     (= 0x25558967)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS REDUCE MEMORY FOOTPRINT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Controls PSReduceMemoryFootprint.  By default it detects fullscreen or PS LoadBalance.isGPUAlmostOneFrameAhead() for PS MEMORY OPT FRAME LAGGING THRESHOLD (8) frames and enters 'perf mode' which disables all controlled memory optimizations.

DEFAULT    (= 0x00000000)  // Normal behavior, enters perf mode when detected and remains there.
FORCE ON   (= 0x00000001)  // Forces reduced memory footprint mode permanently.
FORCE OFF  (= 0x00000002)  // Forces perf mode immediately and permanently.

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
PS REDUCTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables/Disables strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS REDUCTION BLITS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/disables reduction hacked blits

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS REDUCTION DISABLE KNOB
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Disables individual knobs

DISABLE WARPS PER SUBTILE  (= 0x00000001)  // Disables schmoo over warps per subtile (2,4,8)
DISABLE REDUCTION HACK     (= 0x00000002)  // Disables schmoo over reduction hack (off,on)
DISABLE WARP THROTTLE      (= 0x00000004)  // Disables schmoo over warp throttle (20,16,8.4)
DISABLE REG COUNT          (= 0x00000008)  // Disables schmoo over regcount (0, 63) - Dependent on warp throttle
DISABLE COMPUTE            (= 0x00000010)  // Disables schmoo over compute

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS REDUCTION DYNAMIC MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Chooses shader version based on shader performance

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Always uses optimized version
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Use version with better performance

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS REDUCTION FORCED
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Forces strategy on for all shaders

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Only apply reduction hack to buckets which pass the strategy criteria
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Apply reduction hack to every recompileable PS

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS REDUCTION HACK HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of appHashes to turn reduction hack on for. '0x' 'delimited' eg: '0xbadcf00d0xdeadbeef'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
PS REDUCTION HASH MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Only relevant for dynamic mode, modifies the object granularity at which we profile

SINGLE SHADER OBJECT  (= 0x00000000)  // Profile each single shader object (either pixel or compute)
ALL SHADER OBJECT     (= 0x00000001)  // Profile each unique shader bucket

Default values for this setting:
DEFAULT:    ALL SHADER OBJECT

------------------------------------------------------------
PS REDUCTION KNOBS LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing a list of per-shaderHash entries to control knobs related to reduction. ':' delimits each value, ';' delimits each entry. The entry format is 'ShaderHash:warpsPerSubtile:applyReductionHack:schedMaxRTarget;', with no space inbetween entries. All values must be 0x formatted hexadecimal e.g. 0x195f7f6c093b396b:0x8:0x1:0x0;0x2fa5375360b0cf54:0x8:0x1:0x0; (see NvShaderSpecificReduction12 for more details)


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
PS REDUCTION LOAD BALANCED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Reduction tracker load balancing.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS REDUCTION MAX BUCKETS PER FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Amortizes cost of profiling buckets over multiple frames by scheduling spills over this threshold to another frame


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
PS REDUCTION MIN DST SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum RT/DS width/height required to be considered


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS REDUCTION MIN SRC SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum SRV width/height required to be considered (must have at least one SRV valid per shader)


Default values for this setting:
DEFAULT:    0x00000080

------------------------------------------------------------
PS REDUCTION MIN TIMESTAMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum bucket time (ns) required, or else it will be ignored after first profile pass


Default values for this setting:
DEFAULT:    0x00002000

------------------------------------------------------------
PS REDUCTION PROFILING INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Frame interval between profile attempts (must be in dynamic mode)


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS REDUCTION REGISTER PER SUBTILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Modifies PerfknobA REGISTER FILE PER SUBTILE used by the non-dynamic reduction tracker


Default values for this setting:
DEFAULT:    0x00000080

------------------------------------------------------------
PS REDUCTION STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Dumps stats to debugger

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS REDUCTION STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags for stats dumped by the tracker

PER BUCKET STATE CHANGES  (= 0x00000001)  // Tracks strategy state over time
PER BUCKET PROFILING      (= 0x00000002)  // Tracks performance over time. ~5k frames to complete. Modify PROFILING INTERVAL to speed up.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS REDUCTION WARPS PER SUBTILE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Modifies PerfknobA QUADS PER SUBTILE used by the non-dynamic reduction tracker


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
PS REDUCTION WARP THROTTLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables the warp count schmoo

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS RESIZEL1DM
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS RESIZEL1DM FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

Configures L1/DM settings for DX10+ on Kepler+Volta+Ampere (ignored on Maxwell+Pascal)

DM 48KB                               (= 0x00000000)  // Sets L1=16KB, DM=48KB
DM 16KB STATIC                        (= 0x00000001)  // Sets L1=48KB, DM=16KB (in all applicable cases)
DM 16KB DYNAMIC                       (= 0x00000002)  // Sets L1=48KB, DM=16KB (when applicable, but only according to perf heuristics)
DM MASK                               (= 0x00000003)
DM COMPUTE DYNAMIC                    (= 0x00000010)  // Compute shared memory set automatically
DM COMPUTE 48KB                       (= 0x00000020)  // Compute shared memory set to 48K
DM COMPUTE 32KB                       (= 0x00000030)  // Compute shared memory set to 32K
DM COMPUTE 16KB                       (= 0x00000040)  // Compute shared memory set to 16K
DM COMPUTE MASK                       (= 0x00000070)
DM VOLTA COMPUTE DYNAMIC              (= 0x00000100)  // Compute shared memory set automatically (Volta Only!)
DM VOLTA COMPUTE 0KB                  (= 0x00000200)  // Compute shared memory set to 0K (Volta Only!)
DM VOLTA COMPUTE 8KB                  (= 0x00000300)  // Compute shared memory set to 8K (Volta Only!)
DM VOLTA COMPUTE 16KB                 (= 0x00000400)  // Compute shared memory set to 16K (Volta Only!)
DM VOLTA COMPUTE 32KB                 (= 0x00000500)  // Compute shared memory set to 32K (Volta Only!)
DM VOLTA COMPUTE 64KB                 (= 0x00000600)  // Compute shared memory set to 64K (Volta Only!)
DM VOLTA COMPUTE 96KB                 (= 0x00000700)  // Compute shared memory set to 96K (Volta Only!)
DM VOLTA COMPUTE MASK                 (= 0x00000700)
DM VOLTA COMPUTE ENABLE MAX           (= 0x00001000)  // Sets Max SHMEM to max supported config for compute shaders that don't do LDG (Volta+ Only!)
DM VOLTA COMPUTE ENABLE MIN           (= 0x00002000)  // Sets Min SHMEM to the bare minimum required to launch 1 CTA (Volta+ Only!)
DM VOLTA COMPUTE ENABLE MIN MAX MASK  (= 0x00003000)
DM TURING COMPUTE DYNAMIC             (= 0x00010000)  // Compute shared memory set automatically (Turing Only!)
DM TURING COMPUTE 32KB                (= 0x00020000)  // Compute shared memory set to 32K (Turing Only!)
DM TURING COMPUTE 48KB                (= 0x00030000)  // Compute shared memory set to 48K (Turing Only!)
DM TURING COMPUTE 64KB                (= 0x00040000)  // Compute shared memory set to 64K (Turing Only!)
DM TURING COMPUTE MASK                (= 0x00070000)
DM AMPERE COMPUTE DYNAMIC             (= 0x00100000)  // Compute shared memory set automatically (Ampere Only!)
DM AMPERE COMPUTE 0KB                 (= 0x00200000)  // Compute shared memory set to 0K (Ampere Only!)
DM AMPERE COMPUTE 8KB                 (= 0x00300000)  // Compute shared memory set to 8K (Ampere Only!)
DM AMPERE COMPUTE 16KB                (= 0x00400000)  // Compute shared memory set to 16K (Ampere Only!)
DM AMPERE COMPUTE 32KB                (= 0x00500000)  // Compute shared memory set to 32K (Ampere Only!)
DM AMPERE COMPUTE 64KB                (= 0x00600000)  // Compute shared memory set to 64K (Ampere Only!)
DM AMPERE COMPUTE 100KB               (= 0x00700000)  // Compute shared memory set to 100K (Ampere Only!)
DM AMPERE COMPUTE 132KB               (= 0x00800000)  // Compute shared memory set to 132K (AmpereA (GA100) Only!)
DM AMPERE COMPUTE 164KB               (= 0x00900000)  // Compute shared memory set to 164K (AmpereA (GA100) Only!)
DM AMPERE COMPUTE MASK                (= 0x00f00000)

Default values for this setting:
DEFAULT:    0x00110112
	DM 16KB DYNAMIC                         
	DM COMPUTE DYNAMIC                      
	DM VOLTA COMPUTE DYNAMIC                
	DM 48KB                                 
	DM TURING COMPUTE DYNAMIC               
	DM AMPERE COMPUTE DYNAMIC               

------------------------------------------------------------
PS RT SHADER DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Master on / off switch for Ray Trace shader dumps (nvwgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS RT SHADER DUMP DEBUG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Ray Trace shader dump debug

DUMP SHADERS ON CREATION   (= 0x00000001)
DUMP HEX UCODE             (= 0x00000004)  // Dump hex dump of the ucode rather than disassembly
DUMP ELF SECTIONS          (= 0x00000010)  // Dump the ELF file sections associated with the pipeline
DUMP ELF SECTION CONTENTS  (= 0x00000020)  // Dump the ELF file section contents but not ucode associated with a pipeline
DUMP ELF SECTION UCODE     (= 0x00000040)  // Dump the ELF file ucode associated with a pipeline

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS RT SHADER DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Ray Trace shader dump selection

DUMP RAYGEN SHADERS            (= 0x00000001)
DUMP MISS SHADERS              (= 0x00000002)
DUMP HITGROUP SHADERS          (= 0x00000004)
DUMP CALLABLE SHADERS          (= 0x00000008)
DUMP SHADER MEASURE PCSAMPLER  (= 0x00080000)

Default values for this setting:
DEFAULT:    0x0000000F
	DUMP RAYGEN SHADERS                     
	DUMP MISS SHADERS                       
	DUMP HITGROUP SHADERS                   
	DUMP CALLABLE SHADERS                   

------------------------------------------------------------
PS RT SHADER DUMP ON CREATION FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Filename or pattern for dumping RT shaders during creation


------------------------------------------------------------
PS SAMPLEPIXEL TWOPASS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Two-pass shader, run once at pixel frequency for simple pixels and once at sample frequency for non-simple pixels

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SANDBAG
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable/Disable driver sandbagging

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS SANDBAG WFI COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the number of WFIs used by the sandbagging perfstrat


Default values for this setting:
DEFAULT:    0x00000064

------------------------------------------------------------
PS SANDBAG WFI FREQUENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the frequency of WFIs used by the sandbagging perfstrat


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
PS SECTOR PROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

FORCE NO PROMOTION            (= 0x00000001)
FORCE 2H                      (= 0x00000002)
FORCE 2V                      (= 0x00000004)
FORCE 4                       (= 0x00000008)
FORCE MASK                    (= 0x0000000f)
PREFER 2H                     (= 0x00000010)
PREFER 2V                     (= 0x00000020)
PREFER 4                      (= 0x00000040)
PREFER SETTING MASK           (= 0x00000070)
PREFER FOR BC FORMATS         (= 0x00000100)
PREFER FOR BUFFERS            (= 0x00000200)
PREFER FOR MIPPED OR ARRAYED  (= 0x00000400)
PREFER FOR NON RENDERABLE     (= 0x00000800)
PREFER FOR NON COMPRESSED     (= 0x00001000)
PREFER FOR COMPRESSED         (= 0x00002000)
PREFER HEURISTIC MASK         (= 0x00003f00)

------------------------------------------------------------
PS SECTOR PROMOTION 8XAA OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SHADERDISKCACHE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables/Disables strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SHADERDISKCACHE DLL LOADLIBRARY SECURITY
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

When using PS SHADERDISKCACHE FLAGS::BACKEND GFN DLL, enables the secure load library path

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SHADERDISKCACHE DLL PATH
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The complete path to the DLL used when enabling flag BACKEND GFN DLL


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
PS SHADERDISKCACHE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags for shader cache

DISABLE DEFAULT COMPILES    (= 0x00000001)  // Disables default compiles to the cache
DISABLE OPTIONAL COMPILES   (= 0x00000002)  // Disables optional compiles to the cache
DISABLE DRIVER VERSIONING   (= 0x00000008)  // Disables versioning of cache using driver UUID
DUMP HISTOGRAM              (= 0x00000010)  // Dumps histogram of shader compiles over device create/destroy
DUMP TIMELINE               (= 0x00000020)  // Dumps timeline of shader compiles to csv
DISABLE GARBAGE COLLECTION  (= 0x00000040)  // Disables cache garbage collection
ENABLE ENCRYPTION           (= 0x00000080)  // Enables encryption on the data cache
DISABLE CRC                 (= 0x00000100)  // Disable CRC checks on the data cache
ENABLE STATS FILES          (= 0x00000200)  // Enables the use of .sta files for collecting statistics about the cache across multiple runs.
DISABLE STATS RESET         (= 0x00000400)  // Disables resetting cache statistics on every load
NO COMPRESSION              (= 0x00001000)  // Disable compression of TOCEntries
RLE COMPRESSION             (= 0x00002000)  // Use Run Length Encoding compression for TOCEntries
LZMA COMPRESSION            (= 0x00004000)  // Use Lempel-Ziv-Markov chain (7zip) compression for TOCEntries
BACKEND MEM MAP FILES       (= 0x00010000)  // Use a series of memory mapped files as the cache
BACKEND GFN DLL             (= 0x00020000)  // Use a DLL provided by GFN to interface with a networked cache
BACKEND SQLITE              (= 0x00040000)  // Use a SQLite file as the cache

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS SHADERDISKCACHE LZMA DICTSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Configures the shader disk cache's LZMA settings for dictionary size, value is a power of 2


Default values for this setting:
DEFAULT:    0x0000000D

------------------------------------------------------------
PS SHADERDISKCACHE LZMA LEVEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Configures the shader disk cache's LZMA settings for level


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS SHADERDISKCACHE MAX DATA FILES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max number of data files allowed in the cache.  Each data file can be up to BIN SIZE and TOC SIZE as defined in nvPSShaderDiskCache.cpp.


Default values for this setting:
DEFAULT:    0x00000040

------------------------------------------------------------
PS SHADERDISKCACHE MAX DEFAULT BIN SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max total cache size for default shader BINs (in MB) before garbage collection kicks in. Can be clamped by the driver.


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
PS SHADERDISKCACHE MAX OPTIONAL BIN SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max total cache size for optional shader BINs (in MB) before garbage collection kicks in. Can be clamped by the driver.


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS SHADERDISKCACHE MAX RTCORE BIN SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max total cache size for RTCore shader BINs (in MB) before garbage collection kicks in. Can be clamped by the driver.


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS SHADERDISKCACHE MAX SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the maximum size, in megabytes, of the shader disk cache before it starts to delete old files. This replaces the previous TOC/BIN SIZE keys.


Default values for this setting:
DEFAULT:    0x00001000

------------------------------------------------------------
PS SHADERDISKCACHE MAX TOC SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max total cache size for TOCs (in MB) before garbage collection kicks in. Can be clamped by the driver.


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS SHADERDISKCACHE PATH
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If specified, shader disk cache will be stored in this directory


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
PS SHADER CLEAR
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

transform shader-based clears into full and proper clears

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SHADER CLEAR FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE COLOR CLEAR          (= 0x00000001)  // disable transforming color clears
DISABLE DEPTH CLEAR          (= 0x00000002)  // disable transforming depth clears
DISABLE STENCIL CLEAR        (= 0x00000004)  // disable transforming stencil clears
DISABLE PARTIAL CLEAR        (= 0x00000004)  // disable transforming partial clears
DISABLE ARBITRARY VALUE      (= 0x00000008)  // disable clears to any value other than 0 or 1
DISABLE PER COMPONENT VALUE  (= 0x00000010)  // disable (color) clears where all components do not match

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS SHADER COMPILE FORCE SURFCLAMP FROM IGN TO TRAP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Set ForceSurfClampFromIGNToTRAP for DX1x (nvwgf2um.dll) 

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS SHADER COMPILE OPT LEVEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Opt level for all compiles [any shader types and whether stalling or non-stalling]

COP UNSPEC, 0   (= 0x00000000)  // uspecified - use default
COP MIN, 1      (= 0x00000001)  // lowest ocg optimization
COP LOW, 2      (= 0x00000002)  // lower than default
COP DEFAULT, 3  (= 0x00000003)  // default optimization (normal path)
COP HIGH, 4     (= 0x00000004)  // higher than default (likely for offline)
COP MAX, 5      (= 0x00000005)  // the most we will optimize (likely for offline)

Default values for this setting:
DEFAULT:    COP HIGH

------------------------------------------------------------
PS SHADER CONST EXPRESSIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

enable/disable generatedConstExpressions opts

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS SHADER CONST EXPRESSIONS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

fine grained opt control

DONT OPT NVINST CONST TLD                (= 0x00000001)
DONT OPT NVINST EMULATED CONSTANT LOADS  (= 0x00000002)
DISABLE OCG CONSTEXPR                    (= 0x00010000)
DISABLE NVINST CONSTEXPR                 (= 0x10000000)

------------------------------------------------------------
PS SHADER LOADBALANCE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Load-balancing between shader types

PS FORCE REG ALLOC POLICY  (= 0x00000001)  // Force the PS register allocation policy instead of using a heuristic
PS REG ALLOC POLICY THIN   (= 0x00000000)  // Use THIN allocation policy.
PS REG ALLOC POLICY THICK  (= 0x00000002)  // Use THICK allocation policy.

Default values for this setting:
DEFAULT:    0x00000000
	PS REG ALLOC POLICY THIN                

------------------------------------------------------------
PS SHADER MERGE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SHADER MERGE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Merges specific shader techniques (currently conversions) with an app created shader

DISABLE MERGE                 (= 0x00000000)
ENABLE SRGB CONVERSION        (= 0x00000001)
ENABLE B10G11R11F CONVERSION  (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE SRGB CONVERSION                  

------------------------------------------------------------
PS SHADER MERGE SRGB INST LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the nvinst instruction limit for srgb conversion. 0 defaults to SM-specific limits.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS SHADER PROFILING XML
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

File path to XML containing profiling configuration - overrides all other reg keys


------------------------------------------------------------
PS SHADER REPLACEMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable shader replacement for DX10 (wgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x49106433)
ON, 1, TRUE, ENABLED     (= 0x68974006)

------------------------------------------------------------
PS SHADER REPLACEMENT FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Path and filename for DX10 shader binary file.


------------------------------------------------------------
PS SHADER REPLACEMENT FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Shader replacement flags for DX10 (wgf2um.dll)

STATIC PIXEL SHADERS        (= 0x00000001)  // Allow replacement with static pixel shaders
STATIC VERTEX SHADERS       (= 0x00000002)  // Allow replacement with static vertex shaders
STATIC GEOMETRY SHADERS     (= 0x00000004)  // Allow replacement with static geometry shaders
DYNAMIC SHADERS             (= 0x00000008)  // Allow replacement with dynamic shaders (any type)
STATIC HULL SHADERS         (= 0x00000010)  // Allow replacement with static hull shaders
STATIC DOMAIN SHADERS       (= 0x00000020)  // Allow replacement with static domain shaders
STATIC COMPUTE SHADERS      (= 0x00000040)  // Allow replacement with static compute shaders
DYNAMIC SHADER COLLECTIONS  (= 0x00010000)  // Allow replacement of shader collections from a file
MATCH UCODE HASH            (= 0x00020000)  // Replace a shader with a particular ucode hash

------------------------------------------------------------
PS SHADER REPLACEMENT RESERVED VA
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

disabled by default, set to 0xDE00000000 or other non-NULL VA to enable


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS SHADER REPLACEMENT RESERVED VA SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

disabled by default, set to a multiple of 4KB to enable


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS SHADER SELECTION GPU
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

controls GPU-based shader selection perfstrats (like CFGPU. dx12 only)

OFF, 0, FALSE, DISABLED  (= 0xd3a0a7c9)
ON, 1, TRUE, ENABLED     (= 0xb27051ba)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SHADER SELECTION GPU FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DEBUG ALWAYS USE FALLBACK SHADER   (= 0x00000001)
DEBUG ALWAYS USE OPTIMIZED SHADER  (= 0x00000002)
DEBUG SKIP PATCH SHADER            (= 0x00000010)  // don't run the patch shader
DEBUG BREAK ON DISABLE             (= 0x00000020)  // debug breakpoint when SSGPU or clients disable themselves due to limits etc
ENABLE LOW LATENCY                 (= 0x00000100)  // reduce the frame/phase thresholds to the minimum possible (speed up amodel/emulation runs)
ENABLE SELECTION CONTEXT NEW PASS  (= 0x00000200)  // trigger a new pass when we run out of selection contexts
ENABLE PATCH CONTEXT NEW PASS      (= 0x00000400)  // trigger a new pass when we run out of patch contexts
DISABLE FOR DISPATCH INDIRECT      (= 0x04000000)  // disable opt for indirect compute shaders
GATHER OCCUPANCY STATS             (= 0x08000000)  // collect information about analysis shader occupancy
GATHER FALLBACK STATS              (= 0x10000000)  // count draw/dispatch calls that hit the optimized vs. fallback case
GATHER ANALYSIS SHADER TIMES       (= 0x20000000)  // measure the time spent on the analysis shaders
GATHER GENERAL STATS               (= 0x40000000)  // collect miscellaneous non-GPU stats
GATHER PROFILE DATA                (= 0x80000000)  // profile cycle counts of the analysis shaders

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS SHADER SELECTION GPU INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable the SSGPU indicator

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS SHADER SELECTION GPU LDA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls whether SSGPU is enabled for SLI

NONE, 0           (= 0x00000000)
ALL, 1            (= 0x00000001)
PASCAL AND NEWER  (= 0x00000002)
TURING AND NEWER  (= 0x00000003)
AMPERE AND NEWER  (= 0x00000004)

Default values for this setting:
DEFAULT:    AMPERE AND NEWER

------------------------------------------------------------
PS SHADER SELECTION GPU PATCH THREAD GROUP SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of threads to run in each patch shader thread group, must be a power of 2.


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS SHADER SELECTION GPU PROCESSING THREAD TIMEOUT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The interval (in milliseconds) between calls to the SSGPU background processing function (perTickUpdate)


Default values for this setting:
DEFAULT:    0x00000028

------------------------------------------------------------
PS SHADER SELECTION GPU SELECTION THREAD GROUP SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of threads to run in each selection shader thread group, must be a power of 2.


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS SHADER SPECIFIC REDUCTION12
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable/Disable shader-specific reduction DX12.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SHADER SRV2LDG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

controls gpu generated SRV2LDG

DISABLE LD RAW                       (= 0x00000001)  // Disables ld raw->LDG conversion
DISABLE LD STRUCTURED                (= 0x00000002)  // Disables ld structured->LDG conversion
DISABLE OUTOFBOUNDS CHECK            (= 0x00000010)  // Disable range checking
DISABLE SM OOR ADDR CHECK FASTPATH   (= 0x00000020)  // Disable range checking fastpath
DISABLE LD STRUCTURED FOR STRIDE 4   (= 0x00000100)  // Disables ld structured->LDG conversion for stride multiples 4
DISABLE LD STRUCTURED FOR STRIDE 8   (= 0x00000200)  // Disables ld structured->LDG conversion for stride multiples 8
DISABLE LD STRUCTURED FOR STRIDE 12  (= 0x00000400)  // Disables ld structured->LDG conversion for stride multiples 12
DISABLE LD STRUCTURED FOR STRIDE 16  (= 0x00000800)  // Disables ld structured->LDG conversion for stride multiples 16

Default values for this setting:
DEFAULT:    0x00000003
	DISABLE LD RAW                          
	DISABLE LD STRUCTURED                   

------------------------------------------------------------
PS SHADER TLD4
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

enable/disable generatedTLD4Descriptors opts

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS SHADER TLD4 FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

fine grained opt control

DONT OPT TLD  (= 0x00000001)

------------------------------------------------------------
PS SHADOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enabled optimizations like min/max, SSAO convexity check, bitpacking

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SHADOW FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls optimizations related to shadowing

DISABLE MINMAX            (= 0x00000001)  // Disable min/max reduction and lookup
DISABLE BITPACKING        (= 0x00000002)  // Disable the bit-packing optimization for the contact-hardening shaders
DISABLE BITPACKBRANCHING  (= 0x00000004)  // Disable the bit-packing branching optimization for the contact-hardening shaders
DISABLE DEPTHCONVERSION   (= 0x00000008)  // Disable conversion of projected depth to match shadow map precision
DISABLE CONVEXITY         (= 0x00000010)  // Disable convexity reduction for SSAO shaders

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS SHARE AA RT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x18f3902c)
ON, 1, TRUE, ENABLED     (= 0x18f3902d)

------------------------------------------------------------
PS SHARE AA RT FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DBGPRINT        (= 0x00000001)  // [debug] Print operational data to the debugger
DO NOT RESTORE  (= 0x00000002)  // Ignore restoration upscale requests
NO THRESHOLD    (= 0x00000004)  // Share all shareable surfaces, regardless of size

------------------------------------------------------------
PS SINGLE CLIP PLANE SHEAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This key controls the clip plane shear optimization in Half Life 2

OFF, DISABLED, FALSE, 0  (= 0x00000000)  // The optimization is turned off
NO CLIP PLANE CHANGES    (= 0x00000001)  // Disable the optimization for N frames when a frame is encountered for which there is a transition in the number of clipplanes used when rendering to a non-flip target.
ALLOW 0TO1 TRANSITION    (= 0x00000002)  // Similar to strict except that we permit a transition from 0 to 1 clip planes used within the frame. No other transitions allowed or the strategy is disabled for the next N frames.

------------------------------------------------------------
PS SKIP SURFACE STORE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables performance strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SKIP SURFACE STORE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

flags for the skip-surface-store perfstrat

FORCE SUST TO NOP  (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS SKIP WRITE BUFFER IMMEDIATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

skip WriteBufferImmediate

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Ignore app/runtime calls to WriteBufferImmediate

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS SOFTWAREVSHADER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Compile and run software vertex shaders

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SOFTWAREVSHADER ALLOW UNCACHED READS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Allow vertex data to be read from uncached memory

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SOFTWAREVSHADER SSE MATH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Use SSE math functions for software vertex shaders

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SPH FORCE GLOBAL STORE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Force a pixel shader's SPH bit DOES GLOBAL STORE flag to be on or off

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Force SPH bit  DOES GLOBAL STORE OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Force SPH bit  DOES GLOBAL STORE ON

------------------------------------------------------------
PS SPH FORCE GLOBAL STORE HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If non-zero, only pixel shaders with the D3D10 shader hash will have  DOES GLOBAL STORE forced on/off by PS SPH FORCE GLOBAL STORE. If zero, all pixel shaders will have  DOES GLOBAL STORE forced on/off by PS SPH FORCE GLOBAL STORE


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS SPOOF CLEAR
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS SPOOF CLEAR FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

R8 AS C32      (= 0x00000001)
A8 AS C32      (= 0x00000002)
R8G8 AS C32    (= 0x00000004)
R5G6B5 AS C32  (= 0x00000008)
R16 AS C32     (= 0x00000010)

Default values for this setting:
DEFAULT:    0x0000001F
	R8 AS C32                               
	A8 AS C32                               
	R8G8 AS C32                             
	R5G6B5 AS C32                           
	R16 AS C32                              

------------------------------------------------------------
PS SPOOF RGBA8 AS UINT32
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS SSV REVERSAL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable / Disable SSV Reversal hack for F.E.A.R.

OFF, 0, FALSE, DISABLED  (= 0x82842504)  // Disable SSV Reversal
ON, 1, TRUE, ENABLED     (= 0x48169919)  // (Default) Reverse SSV's for F.E.A.R.

------------------------------------------------------------
PS STATE OBJECT FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE                     (= 0x00000001)  // Disable specialization for all shaders
NULL SPECIALIZATION HANDLE  (= 0x00000002)  // Force the specialization handle (from rtcPipelineSpecializationGetHandle) to null
SKIP APPLY DEPENDENCIES     (= 0x00000004)  // Skip the shader modification step (applyDependencies)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS STATE OBJECT HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If non-zero, enable for only this hash.


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
PS STATS FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is the bitfield of flags for generic debug/develop driver stats logging.

ALL ALLOC                (= 0x00000001)  // Dump allocation/deallocation data relating to color targets
HW ALLOC                 (= 0x00000002)  // Dump allocation/deallocation data relating to hardware resources(primarily RTs/ZBs)
INSTANCE WORKING SET     (= 0x00000004)  // Dump the working set for various calls
COMPRESSION WORKING SET  (= 0x00000004)  // DEPRECATED (in favor of INSTANCE WORKING SET): Dump the compression working set for each draw call.
FRAME WORKING SET        (= 0x00000008)  // Dump the memory footprint bound for each frame.
WARNINGS PER FRAME       (= 0x00000010)  // Dump a log of per frame perf warning details.
WARNINGS GLOBAL          (= 0x00000020)  // Dump a summary log of perf warnings encountered.
WARNINGS PER DRAW        (= 0x00000040)  // Dump a summary log of perf warnings encountered per draw call.
QMD HEAP                 (= 0x00000100)  // Dump a log of QMD allocations in the DCHEAP
QMD HISTOGRAM            (= 0x00000200)  // Dump a log of QMD size histograms
BENCHMARK SYSTEM         (= 0x00001000)  // Dump a log containing system benchmark data.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS STATS WORKING SET FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is the bitfield of flags for the working set log(s).

INCLUDE DRAW            (= 0x00000001)  // Dump working set for all draw calls
INCLUDE CLEAR           (= 0x00000002)  // Dump working set for all clear calls
INCLUDE RESOLVE         (= 0x00000004)  // Dump working set for all resolve calls
INCLUDE COPY            (= 0x00000008)  // Dump working set for all copy calls
INCLUDE UPDATE          (= 0x00000010)  // Dump working set for all update calls
INCLUDE MAP             (= 0x00000020)  // Dump working set for all map calls
INCLUDE PRESENT         (= 0x00000040)  // Dump working set for all present calls
INCLUDE DISPATCH        (= 0x00000080)  // Dump working set for all dispatch calls
INCLUDE DEBUG STATE     (= 0x01000000)  // Dump driver debug state for all calls
INCLUDE NON RENDERABLE  (= 0x02000000)  // Include non-renderables (e.g. vertex buffers, non-rendertarget textures)

Default values for this setting:
DEFAULT:    0x00000001
	INCLUDE DRAW                            

------------------------------------------------------------
PS STUTTERSTATS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This key is the global enable for stutter stats

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS STUTTERSTATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is the bitfield of flags for stutter stats

BM TRACE                 (= 0x00000001)  // Trace block manager activity
DEFAULT SHADER TRACE     (= 0x00000002)  // Trace default shader compilation activity
OPTIONAL SHADER TRACE    (= 0x00000004)  // Trace optional shader compilation activity
STALL TRACE              (= 0x00000008)  // Trace gpu stall activity
KMD TRACE                (= 0x00000010)  // Trace KMD activity
OUTOFORDER TRACE         (= 0x00000020)  // Trace Out-of-Order calls from the AsyncDevice
UPDATESUBRESOURCE TRACE  (= 0x00000040)  // Trace UpdateSubresource activity
DUMP TO DEBUGGER         (= 0x01000000)  // Dump output to debugger instead of file (deprecated)
SPARSE STATS             (= 0x02000000)  // List only frames with activity in the stats file
ENABLE ON DWM            (= 0x04000000)  // Enable stutterstats collection on DWM/Explorer

------------------------------------------------------------
PS STUTTERSTATS HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set custom key for stutterstats 'hotkey' event [also need to set HOTKEYS regkey] (default is ctrl+F6)


Default values for this setting:
DEFAULT:    0x00000075

------------------------------------------------------------
PS STUTTERSTATS THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

threshold (in ms) above which an event is considered 'interesting' and will be (individually) logged


Default values for this setting:
DEFAULT:    0.000000

------------------------------------------------------------
PS SUPERSCHMOO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

This key is the global enable for super schmoo

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS SUPERSCHMOO CONFIG FILE
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies schmoo config file


------------------------------------------------------------
PS SUPERTRIVS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x19377544)
ON, 1, TRUE, ENABLED     (= 0x83460489)

------------------------------------------------------------
PS SUPERTRIVS ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ALLOW REJECT CULL NONE      (= 0x00000001)  // Don't process prims with cull mode NONE
ALLOW NO LOADBALANCE        (= 0x00000002)  // Always run - no loadbalancing
ALLOW BBOX ONLY CULL        (= 0x00000004)  // Allow doing BBox-only testing for overly large draws
ALLOW ASYNC ONLY            (= 0x00000008)  // Only do asynchronous processing
ALLOW USE ASM               (= 0x00000010)  // Use the assembler cull functions
ALLOW ONLY FRUSTUM          (= 0x00000020)  // Only do frustum cull, no backface
DISABLE SSE MATH FUNCTIONS  (= 0x00000080)  // Don't use SSE Sin/Cos

------------------------------------------------------------
PS SUPERTRIVS FRAMESAHEADSCALAR0
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS SUPERTRIVS FRAMESAHEADSCALAR1
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS SUPERTRIVS FRAMESAHEADSCALAR2
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS SUPERTRIVS MAXPRIM
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS SUPERTRIVS MINPRIM
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS SUPERTRIVS STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DUMP STATS       (= 0x00000001)
DUMP FLAGS       (= 0x40000000)
DUMP DIRECTIONS  (= 0x80000000)

------------------------------------------------------------
PS SUPERTRIVS THRESH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS SURFACESTATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x78463528)
ON, 1, TRUE, ENABLED     (= 0x92347647)

------------------------------------------------------------
PS SURFACESTATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DUMP VBS  (= 0x00000001)  // Dump vertex buffers
DUMP IBS  (= 0x00000002)  // Dump index buffers
DUMP RTS  (= 0x00000004)  // Dump render targets
DUMP ZBS  (= 0x00000008)  // Dump z buffers
DUMP TEX  (= 0x00000010)  // Dump Textures

------------------------------------------------------------
PS SURFACESTATS MAX
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of surfaces to track


------------------------------------------------------------
PS SURFACE PLACEMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x75032831)
ON, 1, TRUE, ENABLED     (= 0x91205621)

------------------------------------------------------------
PS SURFACE PLACEMENT ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

VB FORCE HOSTMEM              (= 0x00000001)
VB FORCE VIDMEM               (= 0x00000002)
VB FORCE CPUVISIBLE           (= 0x00000004)  // Forces both VBs and IBs!
VB FORCE LOCKABLE CPUVISIBLE  (= 0x00000008)  // Forces both VBs and IBs!
VB FORCE MASK                 (= 0x0000000f)
VB STATIC PREFERS HOSTMEM     (= 0x00000010)
VB STATIC PREFERS VIDMEM      (= 0x00000020)
VB STATIC PREFERS MASK        (= 0x00000030)
VB WRITEONLY PREFERS HOSTMEM  (= 0x00000040)
VB WRITEONLY PREFERS VIDMEM   (= 0x00000080)
VB WRITEONLY PREFERS MASK     (= 0x000000c0)
VB ALLOW MASK                 (= 0x000000ff)
IB FORCE HOSTMEM              (= 0x00000100)
IB FORCE VIDMEM               (= 0x00000200)
IB FORCE MASK                 (= 0x00000300)
IB PREFERS HOSTMEM            (= 0x00000400)
IB PREFERS VIDMEM             (= 0x00000800)
IB PREFERS MASK               (= 0x00000c00)
TX FORCE HOSTMEM              (= 0x00001000)
TX FORCE VIDMEM               (= 0x00002000)
TX FORCE MASK                 (= 0x00003000)
TX PREFERS HOSTMEM            (= 0x00004000)
TX PREFERS VIDMEM             (= 0x00008000)
TX PREFERS MASK               (= 0x0000c000)
RT FORCE HOSTMEM              (= 0x00010000)
RT FORCE VIDMEM               (= 0x00020000)
RT FORCE MASK                 (= 0x00030000)
RT PREFERS HOSTMEM            (= 0x00040000)
RT PREFERS VIDMEM             (= 0x00080000)
RT PREFERS MASK               (= 0x000c0000)
Z FORCE HOSTMEM               (= 0x00100000)
Z FORCE VIDMEM                (= 0x00200000)
Z FORCE MASK                  (= 0x00300000)
Z PREFERS HOSTMEM             (= 0x00400000)
Z PREFERS VIDMEM              (= 0x00800000)
Z PREFERS MASK                (= 0x00c00000)
Z PREFERS BOTH                (= 0x00c00000)
PB FORCE HOSTMEM              (= 0x01000000)
PB FORCE VIDMEM               (= 0x02000000)
PB FORCE MASK                 (= 0x03000000)
SP FORCE INCLUDE Z            (= 0x04000000)
SP FORCE ALL HEAPS            (= 0x08000000)
SP USE NONE                   (= 0x10000000)
SP USE 2V                     (= 0x20000000)
SP USE 2H                     (= 0x40000000)
SP USE 4                      (= 0x80000000)
SP MASK                       (= 0xfc000000)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS SURFACE PLACEMENT ATTRIB
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE FOS ON FLIP CHAIN   (= 0x00000001)
ENABLE ZCOMPRESSION ON RTT  (= 0x00000002)
ENABLE ZCULL ON RTT         (= 0x00000004)
PCIE X1                     (= 0x00000010)
SLOW MRT REPLAY WAR         (= 0x00010000)

------------------------------------------------------------
PS SURFACE PLACEMENT HIGHEST PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Normally, render targets and Z buffers use high priority.  This regkey allows selective use of maximum priority, equivalent to D3DDDI ALLOCATIONPRIORITY MAXIMUM for these buffers.

PRIORITY HIGH                  (= 0x187f7082)  // RTs/ZBs use high priority (default)
PRIORITY MAXIMUM               (= 0x83b7bc1a)  // RTs/ZBs use maximum priority
PRIORITY MAXIMUM IF MIXED BUS  (= 0xfc17f610)  // RTs/ZBs use maximum priority on mnixed-bus GPUs (192-bit 2 GB, etc.)

Default values for this setting:
DEFAULT:    PRIORITY HIGH

------------------------------------------------------------
PS SURFACE PLACEMENT PROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls promotion of dynamic buffers

DISABLE DYNAMIC VB PROMOTION  (= 0x00000001)  // Don't promote VBs that are locked even if drawn from extensively
DISABLE STATIC VB PROMOTION   (= 0x00000002)  // Don't promote VBs that are never even locked
DISABLE RW IB PROMOTION       (= 0x00000004)  // Don't attempt to promote IBs with read-write cpu access flags
DISABLE W IB PROMOTION        (= 0x00000008)  // Don't attempt to promote write-only IBs

Default values for this setting:
DEFAULT:    0x00000004
	DISABLE RW IB PROMOTION                 

------------------------------------------------------------
PS SURFACE PLACEMENT STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS SURFACE PLACEMENT STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

SURFPLACE DUMP VB STATS  (= 0x00000001)
SURFPLACE DUMP IB STATS  (= 0x00000002)
SURFPLACE DUMP TX STATS  (= 0x00000004)
SURFPLACE DUMP RT STATS  (= 0x00000008)
SURFPLACE DUMP Z STATS   (= 0x00000010)

------------------------------------------------------------
PS SYSTEMCHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x52aebf3d)
ON, 1, TRUE, ENABLED     (= 0xde8f1a66)

------------------------------------------------------------
PS SYSTEMCHECK FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

MEASURE COLOR BANDWIDTH         (= 0x00000001)
MEASURE DEPTH BANDWIDTH         (= 0x00000002)
MEASURE KICKOFF PERF            (= 0x00000010)
MEASURE BATCHED ALLOC PERF      (= 0x00000100)
MEASURE INTERLEAVED ALLOC PERF  (= 0x00000200)
MEASURE TEX LATENCY             (= 0x00001000)

------------------------------------------------------------
PS SYSVBOPT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

System memory VB optimization: copy sysmem VBs to staging buffer

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS TEXCOMPRESS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x44933872)
ON, 1, TRUE, ENABLED     (= 0x10098834)

------------------------------------------------------------
PS TEXCOMPRESS ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ALLOW DXT3TO1 ONPSHAD              (= 0x00000001)  // Permits DXT3->DXT1 conversion if pixel shader does not use alpha
FORCE DXT3TO1 ONPSHAD              (= 0x00000002)  // Forces  DXT3->DXT1 conversion regardless of whether pixel shader uses alpha
ALLOW DXT3TO1 ONBLT DEFAULT ALPHA  (= 0x00000004)  // Permits DXT3->DXT1 conversion if the DXT3 texture only has 0xFF as alpha value
ALLOW DXT3TO1 ONBLT ANYALPHA       (= 0x00000008)  // Permits DXT3->DXT1 conversion if the DXT3 texture only has one alpha value regardless of what the alpha value is. This option will add an instruction to the pixel shader if the alpha value if not 0xFF.
ALLOW DXT5TO1 ONPSHAD              (= 0x00000010)  // Permits DXT5->DXT1 conversion if pixel shader does not use alpha
FORCE DXT5TO1 ONPSHAD              (= 0x00000020)  // Forces  DXT5->DXT1 conversion regardless of whether pixel shader uses alpha
ALLOW DXT5TO1 ONBLT DEFAULT ALPHA  (= 0x00000040)  // Permits DXT5->DXT1 conversion if the DXT3 texture only has 0xFF as alpha value
ALLOW DXT5TO1 ONBLT ANYALPHA       (= 0x00000080)  // Permits DXT5->DXT1 conversion if the DXT5 texture only has one alpha value regardless of what the alpha value is. This option will add an instruction to the pixel shader if the alpha value if not 0xFF.
ALLOW ARGBTODXT5                   (= 0x00000100)  // Permits A8R8G8B8 to DXT5 conversion in some apps. Right now that would seem to be just 3dMark03 GT1.
ALLOW CUBEMAP DXTATO1              (= 0x00010000)  // BY default all the Allow&Force DXTA->DXT1 keys only apply to non-cube-maps. Setting this bit enables them to apply to cube-maps as well.

------------------------------------------------------------
PS TEXCOMPRESS STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS TEXFILTER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x96569555)
ON, 1, TRUE, ENABLED     (= 0x95104604)

------------------------------------------------------------
PS TEXFILTER 12X TRISLOPE
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS TEXFILTER 16X TRISLOPE
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS TEXFILTER 1X TRISLOPE
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS TEXFILTER 2X TRISLOPE
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS TEXFILTER 4X TRISLOPE
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS TEXFILTER 6X TRISLOPE
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS TEXFILTER 8X TRISLOPE
------------------------------------------------------------
This key is of type FLOAT
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
PS TEXFILTER ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ALLOW TRILINEAR SLOPE               (= 0x00000001)
ALLOW FORCE BILINEAR                (= 0x00000002)
ALLOW ANISO BIAS                    (= 0x00000004)
ALLOW TEXTURE ANALYSIS              (= 0x00000008)
ALLOW ANISO SAMPLE STEPPING2        (= 0x00000010)
ALLOW DISABLE ANISO SHADOWMAPS      (= 0x00000020)
ALLOW BILINEAR IN ANISO STAGE1      (= 0x00000040)
ALLOW BILINEAR IN ANISO STAGE0      (= 0x00000080)
ALLOW LIMIT ANISO FOR CUBEMAPS      (= 0x00000100)
ALLOW LIMIT BEST CHOICE TRILINEAR   (= 0x00008000)
ALLOW NO CPL OVERRIDE NONMIPMAPPED  (= 0x00200000)
ALLOW NO ANISO 1D TEXTURES          (= 0x00400000)
ALLOW LIMIT ANISO NONMIPMAPPED      (= 0x00800000)
ALLOW SET MAX KNOB3                 (= 0x40000000)

------------------------------------------------------------
PS TEXFILTER ANISO LOD QUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

LOW, 0   (= 0x00000000)
HIGH, 1  (= 0x00000001)

------------------------------------------------------------
PS TEXFILTER ANISO OPTS2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS TEXFILTER ANISO SPREAD COARSE FUNC
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

DX10 aniso spread coarse function

HALF  (= 0x00000000)
ONE   (= 0x00000001)
TWO   (= 0x00000002)
MAX   (= 0x00000003)

------------------------------------------------------------
PS TEXFILTER ANISO SPREAD COARSE MODIFIER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

DX10 aniso spread coarse modifier

NONE  (= 0x00000000)
ONE   (= 0x00000001)
TWO   (= 0x00000002)
SQRT  (= 0x00000003)

------------------------------------------------------------
PS TEXFILTER ANISO SPREAD FINE FUNC
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

DX10 aniso spread fine function

HALF  (= 0x00000000)
ONE   (= 0x00000001)
TWO   (= 0x00000002)
MAX   (= 0x00000003)

------------------------------------------------------------
PS TEXFILTER ANISO SPREAD FINE MODIFIER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

DX10 aniso spread fine modifier

NONE  (= 0x00000000)
ONE   (= 0x00000001)
TWO   (= 0x00000002)
SQRT  (= 0x00000003)

------------------------------------------------------------
PS TEXFILTER ANISO SPREAD SCALE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DX10 aniso spread scale

MIN  (= 0x00000000)
MAX  (= 0x0000001f)

------------------------------------------------------------
PS TEXFILTER BILINEAR IN ANISO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS TEXFILTER DISABLE TRILIN SLOPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS TEXFILTER ISO LOD QUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

LOW, 0   (= 0x00000000)
HIGH, 1  (= 0x00000001)

------------------------------------------------------------
PS TEXFILTER KEPLER FIXUP UNOPT LOD SPREAD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS TEXFILTER NO NEG LODBIAS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS TEXFILTER STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS TEXFILTER USE HIGH QUALITY LOD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS TEXTURE FORCE REP CPULOCK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

For non-rendertarget textures on G80, it is much faster to use REP CPULOCK instead of remappers.

USE DRIVER DEFAULT  (= 0x00000000)  // dont change driver strategy
FORCE ENABLE        (= 0x00000001)  // force use of remappers
FORCE DISABLE       (= 0x00000002)  // force fast cpulock
MIN                 (= 0x00000000)
MAX                 (= 0x00000002)

Default values for this setting:
DEFAULT:    USE DRIVER DEFAULT
DEFAULT GL:    FORCE DISABLE

------------------------------------------------------------
PS TEXTURE MIRROR
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x46923917)
ON, 1, TRUE, ENABLED     (= 0x23257121)

------------------------------------------------------------
PS TEXTURE MIRROR FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

TEX COPY FORCE NONE       (= 0x00000000)
TEX COPY FORCE VID        (= 0x00000001)
TEX COPY FORCE HOST       (= 0x00000002)
TEX COLORFILL FORCE NONE  (= 0x00000000)
TEX COLORFILL FORCE VID   (= 0x00000100)
TEX COLORFILL FORCE HOST  (= 0x00000200)

------------------------------------------------------------
PS TEXTURE PLACEMENT BANDWIDTH THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set a threshold in decideTX function when choosing between HEAP VID and HEAP HOST for texture placement based on bandwidth test. Value is expressed in percentage in favor of heap vid


------------------------------------------------------------
PS TEXTURE SAMPLER OPT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

(DX10) Optimize compiles based on texture / sampler settings

OFF, 0, FALSE, DISABLED  (= 0x02847626)
ON, 1, TRUE, ENABLED     (= 0x46814885)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS TIMESTAMPS AGGREGATOR FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

flags controlling the behaviour of TimeStampsAggregator object

ENABLE TIMING  (= 0x00000001)
ENABLE LOG     (= 0x00000002)  // log will be saved to PS FILE PATH path

------------------------------------------------------------
PS UCO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x18f3902c)
ON, 1, TRUE, ENABLED     (= 0x18f3902d)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS UCODE SHADER DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Master on / off switch for UCODE based shader dumps (nvwgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x32545116)
ON, 1, TRUE, ENABLED     (= 0x43241846)

------------------------------------------------------------
PS UCODE SHADER DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

find grained control knobs for UCODE based shader dumps (nvwgf2um.dll)

DUMP ZERO USAGE SHADERS                                 (= 0x00000008)
DUMP SHADER MEASURE PCSAMPLER                           (= 0x00080000)
DELAY UNTIL HOTKEY THEN CAPTURE SINGLE FRAME THEN EXIT  (= 0x10000000)  // hotkey mode: capture a single frame starting with SCROLL LOCK + auto-exit
DELAY UNTIL HOTKEY THEN CAPTURE UNTIL HOTKEY THEN EXIT  (= 0x20000000)  // hotkey mode: capture a multiple frames starting with SCROLL LOCK + wait for second press + auto-exit

------------------------------------------------------------
PS UCO FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

ENABLE LOW LATENCY  (= 0x00000001)  // Reduces warmup time to the minimum possible. Won't work for the 3DMark app, but useful for APIC.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS UNIFORM BRANCH HOIST HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of shader appHashes to enable Uniform Branch Hoist on for. ';' delimited eg: '0xbadcf00ddeadbeef;'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
PS UNIFORM TEX
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disables performance strategy

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS UNIFORM TEX FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE STAGED ANALYSIS          (= 0x00000001)
DISABLE DYNAMIC ANALYSIS         (= 0x00000002)
DISABLE BORDER ADDRESSING CHECK  (= 0x00000004)
RESTRICT TO ZERO                 (= 0x00000008)
DISABLE BC SUPPORT               (= 0x00000010)
DISABLE DRAW DISPATCH TABLE      (= 0x00000020)
DISABLE NULL TEXTURE SUPPORT     (= 0x00000040)
DISABLE LOAD BALANCING           (= 0x00000080)

Default values for this setting:
DEFAULT:    0x00000020
	DISABLE DRAW DISPATCH TABLE             

------------------------------------------------------------
PS UNIFORM TEX MAX DIM
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
PS UNIFORM TEX SHADER TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DISABLE VS SUPPORT  (= 0x00000001)
DISABLE GS SUPPORT  (= 0x00000002)
DISABLE PS SUPPORT  (= 0x00000004)
DISABLE HS SUPPORT  (= 0x00000008)
DISABLE DS SUPPORT  (= 0x00000010)
DISABLE CS SUPPORT  (= 0x00000020)

------------------------------------------------------------
PS UNIQUENESSSTATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Pixel shader uniqueness stats enable

OFF, 0, FALSE, DISABLED  (= 0x32720261)
ON, 1, TRUE, ENABLED     (= 0x47613549)

------------------------------------------------------------
PS UNIQUENESSSTATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Pixel shader uniqueness stats flags

PRINT INITIAL COMPILE      (= 0x00000001)
PRINT ASYNC COMPILES       (= 0x00000002)
PRINT DUPLICATE COMPILES   (= 0x00000004)
PRINT ADDITIONAL COMPILES  (= 0x00000008)
WRITE LOG FILE             (= 0x80000000)
WRITE XLS FILE             (= 0x40000000)

------------------------------------------------------------
PS USE DSR DEPTH COPY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable/Disable DSR depth copies. Disabled uses TWOD for depth copies

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS VAF TO TEXTURE FETCH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable/Disable vertex attribute to texture fetch perf strategy

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS VAF TO TEXTURE FETCH FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls specifically what shaders VAF to TEX applies to.

DISABLE APP DETECTION            (= 0x00000001)  // Don't use app identification to enable the perf strategy
DISABLE MIXED ATTRIBUTE FORMATS  (= 0x00000002)  // Disable loading mixed attribute formats through texture
DISABLE ARCH SPECIFIC CHECK      (= 0x00000004)  // Enable attribute to tex conversion on all architectures

Default values for this setting:
DEFAULT:    0x00000002
	DISABLE MIXED ATTRIBUTE FORMATS         

------------------------------------------------------------
PS VBRENAME STALL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x55335336)
ON, 1, TRUE, ENABLED     (= 0x42173516)

------------------------------------------------------------
PS VBRENAME STALL STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS VERTEX SHADER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

DX9 Vertex shader strategy

OFF, 0, FALSE, DISABLED  (= 0x48845629)
ON, 1, TRUE, ENABLED     (= 0x15832834)

------------------------------------------------------------
PS VERTEX SHADER ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DX9 Vertex shader strategy replacement shader replacement / control flags

ALLOW STATIC HAND TUNED   (= 0x00000001)  // Permits hand tuned static shaders to be used
ALLOW DYNAMIC HAND TUNED  (= 0x00000002)  // Permits dynamic hand tuned shaders to be used

------------------------------------------------------------
PS VERTEX SHADER DUMP
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Master on / off switch for vertex shader dumps (nvwgf2um.dll)

OFF, 0, FALSE, DISABLED  (= 0x28470024)
ON, 1, TRUE, ENABLED     (= 0x29267504)

------------------------------------------------------------
PS VERTEX SHADER DUMP FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Settings for vertex shader dumps (nvwgf2um.dll)

DUMP APP CREATED SHADERS             (= 0x00000001)
DUMP HAND TUNED SHADERS              (= 0x00000002)
DUMP DSR SHADERS                     (= 0x00000004)
DUMP CUBEMAP SHADERS                 (= 0x01000000)
DUMP DRIVER CALC SHADERS             (= 0x02000000)
DUMP ZERO USAGE SHADERS              (= 0x00000008)
DUMP NVINST                          (= 0x00000020)
DUMP NVVM                            (= 0x00000020)
DUMP SAMPLER STATE                   (= 0x00000040)
DUMP TEXTURE STATE                   (= 0x00000080)
DUMP ANNOTATED NVINST                (= 0x00000120)  // same as DUMP NVINST but injects D3DIL comments
DUMP ANNOTATED SASS                  (= 0x00000200)
DUMP ANNOTATED DXBC                  (= 0x00000400)
DUMP GENERATE SOURCE CODE            (= 0x00000800)
DUMP CONST HISTOGRAMS                (= 0x00001000)
DUMP RENDERTARGET STATE              (= 0x00002000)
DUMP DEPTHTARGET STATE               (= 0x00004000)
DUMP SHADER MEASURE TIME             (= 0x00010000)
DUMP SHADER MEASURE SPEED            (= 0x00020000)
DUMP SHADER MEASURE STALLS           (= 0x00040000)
DUMP SHADER MEASURE PCSAMPLER        (= 0x00080000)
DUMP SHADER SORT COLLECTIONS         (= 0x00100000)
DUMP SHADER USE PCSAMPLER FOR USAGE  (= 0x00200000)  // Use the PCSAMPLER hit counts instead of the normal usage.
DUMP SHADER COMPILE TIME             (= 0x00400000)

------------------------------------------------------------
PS VERTEX SHADER STATS FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Filename for dumping of DX9 vertex shaders


------------------------------------------------------------
PS VERTEX SHADER STATS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DUMP NON HAND TUNED            (= 0x00000001)  // Dumps non hand tuned vertex shaders
DUMP HAND TUNED                (= 0x00000002)  // Dumps hand tuned vertex shaders
DUMP VSFP                      (= 0x00000004)  // Dumps the vertex shaders that are generated by vertex shader fixed pipe. Unlike the other dump types, the output shaders cannot be used as hand-tuned shaders due to the different input/output mapping. Therefore this dump is for informational purposes only. VSFP shaders are indicated in the dump by the labels BEGIN/END VSFP SHADER.
DUMP DECL                      (= 0x00000008)  // Dumps all the DECLS that were created.
DUMP SYSTEM                    (= 0x00000010)  // Dumps information for passthrough vertex shaders.
DUMP NVINST                    (= 0x00000020)  // Dumps nvInst & COP args for the shader
DUMP SOURCE TOKENS             (= 0x00000080)  // Dumps the D3D code token DWORDs.
DUMP ZERO USAGE SHADERS        (= 0x00000100)  // By default, vertex shaders that were created by the app but not used are not dumped by the flags above. If you set this key, zero usage shaders are dumped.
DUMP SHADERS AT CREATE         (= 0x00001000)  // Dumps the vertex shaders at the time of their creation, when a new GPU program is added. It overrides DUMP ZERO USAGE SHADERS, as at creation time, there is no information about their usage. It can be useful for applications that do not explicitly destroy the allocated shaders, and consequently would not dump their content at deletion.
DUMP SHADER MEASURE TIME       (= 0x00010000)  // Measure Vertex shader execution time
DUMP SHADER MEASURE SPEED      (= 0x00020000)
DUMP SHADER MEASURE STALLS     (= 0x00040000)
DUMP SHADER MEASURE PCSAMPLER  (= 0x00080000)

------------------------------------------------------------
PS VIDEO CCX
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Global VideoCCX enable/disable.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS VPRS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Toggles Variable Pixel Rate Shading

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
PS VPRS FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Variable Pixel Rate Shading flags

VPRS FLAGS NONE                        (= 0x00000000)  // No flags
VPRS FLAGS FORCE SHADING RATE SURFACE  (= 0x00000001)  // Force usage of Shading Rate Surface even for Constant Shading Rate
VPRS FLAGS ENABLE VPRS FOR SQUARE RT   (= 0x00000002)  // Force VPRS enabled even for square Render Targets. Default: VPRS is disabled for Square RT
VPRS FLAGS ENABLE VPRS FOR SMALL RT    (= 0x00000004)  // Force VPRS enabled even for small (< 512x512) Render Targets. Default: VPRS is disabled for Small RT

Default values for this setting:
DEFAULT:    0x00000006
	VPRS FLAGS ENABLE VPRS FOR SQUARE RT    
	VPRS FLAGS ENABLE VPRS FOR SMALL RT     

------------------------------------------------------------
PS VPRS LOADBALANCE GPU THRESHOLD PCT RADII
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold of available GPU headroom below which we won't change shading region radii (In perecentage)


Default values for this setting:
DEFAULT:    5.000000

------------------------------------------------------------
PS VPRS LOADBALANCE GPU THRESHOLD PCT SHADINGRATE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold of available GPU headroom below which we won't change shading rate (In perecentage)


Default values for this setting:
DEFAULT:    15.000000

------------------------------------------------------------
PS VPRS LOADBALANCE RADII STEPCOUNT
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the stepcount for radii transitioning


Default values for this setting:
DEFAULT:    0.050000

------------------------------------------------------------
PS VPRS LOADBALANCE TARGET FPS
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the target fps for Auto preset - Load balancing


Default values for this setting:
DEFAULT:    90.000000

------------------------------------------------------------
PS VPRS LOADBALANCE TARGET GPUMS
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the target GPU render time for Auto preset - Load balancing


Default values for this setting:
DEFAULT:    8.500000

------------------------------------------------------------
PS VPRS MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Variable Pixel Rate Shading mode

SR NONE            (= 0x00000000)  // No Variable Pixel Rate Shading
SR CONSTANT 1x1    (= 0x00000001)  // Constant VPRS with shading rate 1x1
SR CONSTANT 1x2    (= 0x00000002)  // Constant VPRS with shading rate 1x2
SR CONSTANT 2x1    (= 0x00000003)  // Constant VPRS with shading rate 2x1
SR CONSTANT 2x2    (= 0x00000004)  // Constant VPRS with shading rate 2x2
SR CONSTANT 2x4    (= 0x00000005)  // Constant VPRS with shading rate 2x4
SR CONSTANT 4x2    (= 0x00000006)  // Constant VPRS with shading rate 4x2
SR CONSTANT 4x4    (= 0x00000007)  // Constant VPRS with shading rate 4x4
SR CONSTANT 2xSS   (= 0x00000008)  // Constant VPRS with shading rate 2xSS
SR CONSTANT 4xSS   (= 0x00000009)  // Constant VPRS with shading rate 4xSS
SR CONSTANT 8xSS   (= 0x0000000a)  // Constant VPRS with shading rate 8xSS
SR CONSTANT 16xSS  (= 0x0000000b)  // Constant VPRS with shading rate 16xSS
SR FOVEATED        (= 0x0000000c)  // Foveated VPRS
SR NOISY           (= 0x0000000d)  // Random (Noisy) VPRS

Default values for this setting:
DEFAULT:    SR NONE

------------------------------------------------------------
PS VPRS SMALL RT THRESHOLD HEIGHT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold of RenderTarget height below which it will be considered as Small RT


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS VPRS SMALL RT THRESHOLD WIDTH
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold of RenderTarget width below which it will be considered as Small RT


Default values for this setting:
DEFAULT:    0x00000100

------------------------------------------------------------
PS VPR DEBUGGING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x18f3902c)
ON, 1, TRUE, ENABLED     (= 0x18f3902d)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS WARBUG305617
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Force LATEZ when aliased rendering to MSAA render target (WAR for HW bug 305617).

OFF, 0, FALSE, DISABLED  (= 0x08253890)  // Disabled, allow EARLYZ when aliased rendering to MSAA render target
ON, 1, TRUE, ENABLED     (= 0x56289103)  // Enabled (default), force LATEZ when aliased rendering to MSAA render target

------------------------------------------------------------
PS WARP PROFILER
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable/Disable warp profiling

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS WARP PROFILER DEFER CREATION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

True - Defer allocation creation at first draw call time (prevents double allocation)

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS WARP PROFILER DUMP FRAME NUM
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

How many frames the warp profiler takes to dump out data. Aimed for use with an APIC


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS WARP PROFILER FRAMES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

How many frames worth of data to keep track of. Keep in mind how much memory each frame takes up (dependent on # of segments), can be GBs!


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
PS WARP PROFILER NUM RESIZE FRAMES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

How many frames the warp profiler takes to attempt a resize. Used only with PS WARP PROFILER RESIZE MODE=MULTI FRAME


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS WARP PROFILER RESIZE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Sets the behavior of the buffer resizing mechanism

OFF           (= 0x00000000)  // No resizing will occur. Use this mode when manually setting the size via PS WARP PROFILER SEGMENTS
SINGLE FRAME  (= 0x00000001)  // The profiler will attempt to resize only once and stop. Use this mode for APIC-type scenarios
MULTI FRAME   (= 0x00000002)  // The profiler will attempt to resize every PS WARP PROFILER NUM RESIZE FRAMES. Use this mode for in-game/benchmark scenarios

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS WARP PROFILER SEGMENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

To determine how many segments per storage unit holds. Size used is calculated by (#ofWarpsPerSM * #ofSMs * PS WARP PROFILER SEGMENTS * 1024 * 16B) 


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
PS ZBC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

global ZBC enable/disable

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS ZBC COLOR VALUES
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A comma- or space-separated list of '(format,r,g,b,a)' strings specifying values to add to the ZBC table - e.g. '(4, 0x123, 0x456, 256, 100000), (4, 0 0xFFFF00FF 0 1)'.  The r,g,b,a values are 32-bit integers specifying the DS clear values.  Matching FB clear values will be computed by the driver.  For floating-point and normalized formats, these should be the raw bit encoding of a floating-point clear value - e.g., 0x3F800000 for 1.0.  To specify raw FB values for PLC compression, use 4 to specify RF32 GF32 BF32 AF32 format. (See NV9096 CTRL CMD SET ZBC COLOR CLEAR RM call for more details)


------------------------------------------------------------
PS ZBC DEPTH VALUES
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A comma- or space-separated list of strings specifying depth values to add to the ZBC table - e.g. '0x3f000000, 0x3e800000'. The values are 32-bit integers specifying the DS and FB clear values. F32 floating-point format is used for depth values, specified as the raw bit encoding of a floating-point clear value - e.g., 0x3F800000 for 1.0. (See NV9096 CTRL CMD SET ZBC DEPTH CLEAR RM call for more details)


------------------------------------------------------------
PS ZBC FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

fine-grained ZBC programming/management control

DISABLE COLOR CLEAR TRACKING         (= 0x00000001)  // do not program HW with any dynamic ZBC color values [the 'default zero' slot may still be used]
DISABLE DEPTH CLEAR TRACKING         (= 0x00000002)  // do not program HW with any dynamic ZBC depth values [the 'default zero' slot may still be used]
DISABLE STENCIL CLEAR TRACKING       (= 0x00000004)  // Pascal B, do not program HW with any dynamic ZBC stencil values [the 'default zero' slot may still be used]
DISABLE COLOR ZBC                    (= 0x00000010)  // completely disable ZBC for color targets [via PRI: NV PGRAPH PRI DS DEBUG ZBC EN]
DISABLE DEPTH ZBC                    (= 0x00000020)  // completely disable ZBC for depth targets [via PRI: NV PGRAPH PRI DS DEBUG ZBC EN]
DISABLE STENCIL ZBC                  (= 0x00000040)  // Pascal B, completely disable ZBC for stencil targets [via PRI: NV PGRAPH PRI GPCS SWDX DSS ROP DEBUG2 STENCIL ZBC EN]
DO NOT FREE ZBC CLEAR TABLE ENTRIES  (= 0x00010000)
DBG PRINT EVERY FRAME                (= 0x01000000)
REPORT SET ZBC FAILURES              (= 0x02000000)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS ZBC MAX ENTRIES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

maximum number of (dynamic) zbc entries that can be programmed by the UMD


Default values for this setting:
DEFAULT:    0x7FFFFFFF

------------------------------------------------------------
PS ZBC STENCIL VALUES
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A comma- or space-separated list of strings specifying stencil values to add to the ZBC table - e.g. '0xF1, 35, 0x15'. The values are 8-bit integers specifying the DS and FB clear values. (See NV9096 CTRL CMD SET ZBC STENCIL CLEAR RM call for more details)


------------------------------------------------------------
PS ZCULL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x91302489)
ON, 1, TRUE, ENABLED     (= 0x91256712)

------------------------------------------------------------
PS ZCULL DIRTY DRAW VALIDATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS ZCULL FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ZC NONE                                      (= 0x00000000)
ZC DISABLE VIEWPORTS                         (= 0x00000001)  // Disable per-viewport zcull regions.
ZC DX12 DISABLE SHADER HEURISTICS            (= 0x00000002)  // Don't use shader heuristics; instead, base setup on clear direction
ZC DISABLE ARRAYS AS SLICES                  (= 0x00000004)  // For Tex2DArray surfaces, don't allocate a VRegion per slice
ZC DX11 DISABLE UNCONDITIONAL BACKING STORE  (= 0x00000008)  // Only create a backing store when we try to load one the first time
ZC DISABLE ZF32 PRI RESET                    (= 0x00040000)

Default values for this setting:
DEFAULT:    0x00000000
	ZC NONE                                 

------------------------------------------------------------
PS ZCULL INFO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Dump zcull debugging information

DISABLED        (= 0x00000000)
TRACE           (= 0x00000001)
STATS           (= 0x00000002)
PER DRAW STATS  (= 0x00000004)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
PS ZCULL SCULL ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
PS ZCULL SHADER HEURISTICS LDA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls whether ZCULL's shader heuristics is enabled for explicit SLI

NONE, 0           (= 0x00000000)
ALL, 1            (= 0x00000001)
PASCAL AND NEWER  (= 0x00000002)
TURING AND NEWER  (= 0x00000003)
AMPERE AND NEWER  (= 0x00000004)

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
PS ZCULL STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

------------------------------------------------------------
PS ZCULL TOTAL ALIQUOTS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override total aliquot count.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS ZCULL ZF32 GREATER PRI
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable/disable the PRI hack used for the ZF32+GREATER depth state combination to make HW defaults better match

DISABLE ZF32      (= 0x00000001)
DISABLE ZF32 X24  (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS ZERO TEX MODULATION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables/Disable zero texture modulation perfstrat

OFF, 0, FALSE, DISABLED  (= 0x45134824)
ON, 1, TRUE, ENABLED     (= 0x96012432)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
PS ZERO TEX MODULATION FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

flags for zero texture modulation perfstrat

SKIP TEXTURE ANALYSIS  (= 0x00000001)  // don't even attempt to analyze modulation textures

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PS ZERO TEX MODULATION MIN DEPENDENT INST
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

minimum number of texture results dependent on modulation texture


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
PS ZERO TEX MODULATION PERCENT ZERO
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

percentage of modulation texture (defined over components, not pixels) that must be zero (expressed as 0-100)


Default values for this setting:
DEFAULT:    0x00000032

------------------------------------------------------------
PUSHBUFFER FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

pushbuffer flags

IGNORE SPLIT POINTS  (= 0x00000001)  // ingore split points: no split points, no flushes

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
PUSHBUFFER HEAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Specify the sysmem heap in which to allocate the pushbuffer.

PB HEAP HOST    (= 0x00000000)
PB HEAP CACHED  (= 0x00000001)

Default values for this setting:
DEFAULT:    PB HEAP HOST

------------------------------------------------------------
QMD INVALIDATE INTERNAL CB BINDINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable invalidation of QMD internal constant buffer bindings

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
QMD OCC MAX ASYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the High Occupancy Watermark for resources specific to async queue dispatches. GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link. Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB). Clamped to 128 by HW


Default values for this setting:
DEFAULT:    0x00FFFFFF

------------------------------------------------------------
QMD OCC MAX NON RT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the High Occupancy Watermark for resources.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW. Overrides default regkeys set for sync/async compute work


Default values for this setting:
DEFAULT:    0x00FFFFFF

------------------------------------------------------------
QMD OCC MAX RT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the High Occupancy Watermark for resources for Ray Tracing specific submissions.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW. Overrides default regkeys set for sync/async compute work


Default values for this setting:
DEFAULT:    0x00FFFFFF

------------------------------------------------------------
QMD OCC MAX SYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the High Occupancy Watermark for resources specific to sync queue dispatches.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW


Default values for this setting:
DEFAULT:    0x00FFFFFF

------------------------------------------------------------
QMD OCC THRESHOLD ASYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the Low Occupancy Watermark for each resource specific to async queue dispatches (VEID>0).  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW


Default values for this setting:
DEFAULT:    0x00104000

------------------------------------------------------------
QMD OCC THRESHOLD ASYNC RTCORE ACCEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the Low Occupancy Watermark for resources specific to async queue BVH build dispatches.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW


Default values for this setting:
DEFAULT:    0x00104000

------------------------------------------------------------
QMD OCC THRESHOLD ASYNC RTCORE LAUNCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the Low Occupancy Watermark for resources specific to async queue RT (non-BVH) dispatches.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW


Default values for this setting:
DEFAULT:    0x00104000

------------------------------------------------------------
QMD OCC THRESHOLD NON RT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the Low Occupancy Watermark for each resource.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW. Overrides default regkeys set for sync/async compute work


Default values for this setting:
DEFAULT:    0x000F0F00

------------------------------------------------------------
QMD OCC THRESHOLD RT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the Low Occupancy Watermark for resources for Ray Tracing specific submissions.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW. Overrides default regkeys set for sync/async compute work


Default values for this setting:
DEFAULT:    0x000F0F00

------------------------------------------------------------
QMD OCC THRESHOLD SYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the Low Occupancy Watermark for each resource specific to sync queue dispatches (VEID==0).  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW


Default values for this setting:
DEFAULT:    0x00104000

------------------------------------------------------------
QMD OCC THRESHOLD SYNC RTCORE ACCEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the Low Occupancy Watermark for resources specific to sync queue BVH build dispatches.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW


Default values for this setting:
DEFAULT:    0x00040400

------------------------------------------------------------
QMD OCC THRESHOLD SYNC RTCORE LAUNCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set Occupancy fields in the QMD to program the Low Occupancy Watermark for resources specific to sync queue RT (non-BVH) dispatches.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.  Regkey has 8 bits each for warp threshold, RF threshold, and ShM threshold respectively (ShM being the LSB).  Clamped to 128 by HW


Default values for this setting:
DEFAULT:    0x00104000

------------------------------------------------------------
QMD PRIORITY ASYNC COMPUTE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of async (COMPUTE queue) application QMDs


Default values for this setting:
DEFAULT:    0x00000024

------------------------------------------------------------
QMD PRIORITY ASYNC PERFSTRAT HIGH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of async (COMPUTE queue) high-proirty perfstrat QMDs


Default values for this setting:
DEFAULT:    0x00000018

------------------------------------------------------------
QMD PRIORITY ASYNC PERFSTRAT LOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of async (COMPUTE queue) low-proirty perfstrat QMDs


Default values for this setting:
DEFAULT:    0x00000028

------------------------------------------------------------
QMD PRIORITY ASYNC RTCORE ACCEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of async (COMPUTE queue) RTCore acceleration structure QMDs


Default values for this setting:
DEFAULT:    0x0000001C

------------------------------------------------------------
QMD PRIORITY ASYNC RTCORE LAUNCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of async (COMPUTE queue) RTCore launch QMDs


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
QMD PRIORITY SYNC COMPUTE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of sync (DIRECT queue) application QMDs


Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
QMD PRIORITY SYNC PERFSTRAT HIGH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of sync (DIRECT queue) high-priority perfstrat QMDs


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
QMD PRIORITY SYNC PERFSTRAT LOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of sync (DIRECT queue) low-proirty perfstrat QMDs


Default values for this setting:
DEFAULT:    0x00000014

------------------------------------------------------------
QMD PRIORITY SYNC RTCORE ACCEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of sync (DIRECT queue) RTCore acceleration structure QMDs


------------------------------------------------------------
QMD PRIORITY SYNC RTCORE LAUNCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of sync (DIRECT queue) RTCore launch QMDs


Default values for this setting:
DEFAULT:    0x0000000C

------------------------------------------------------------
QMD SM DISABLE MASK
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The bits (0-63) of the SM Disable Mask. A 1 in any bit position means that SM (TPC in Volta+) will not run CTAs launched from the QMD


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
QMD SM DISABLE MASK FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

APPLY MASK TO COD  (= 0x00000001)  // Apply SM DISABLE MASK to QMD's launched from the Compute Only Device
APPLY MASK TO D3D  (= 0x00000002)  // Apply SM DISABLE MASK to QMD's launched from the D3D Device

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
QMD SM DISABLE MASK ROTATE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Use affinity mask to only enable a fraction of the SMs (TPC in Volta+) for small dispatches, in order to cut down on task sync serialization

OFF             (= 0x00000000)  // All SMs enabled
HALF            (= 0x00000001)  // Half SMs enabled
QUARTER         (= 0x00000002)  // Quarter SMs enabled
MODE MASK       (= 0x000000ff)
DISALLOW SYNC   (= 0x40000000)  // Disallow use of rotated mask for sync compute queues
DISALLOW ASYNC  (= 0x80000000)  // Disallow use of rotated mask for async compute queues

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
QMD SM DISABLE MASK ROTATE USER LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable the affinity mask only for grids less or equal to this size. 0 means use heuristics


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
QMD VIRTUALIZATION ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Disable/Enable QMD Virtualization (available in Turing+)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
QUALITY ENHANCEMENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

HIGHQUALITY, HQ, -a, -0xa      (= 0xfffffff6)
QUALITY, Q, 0                  (= 0x00000000)
PERFORMANCE, P, a, 0xa         (= 0x0000000a)
HIGHPERFORMANCE, HP, 14, 0x14  (= 0x00000014)

Default values for this setting:
DEFAULT:    QUALITY

------------------------------------------------------------
QUALITY ENHANCEMENT SUBSTITUTION
------------------------------------------------------------
This key is of type DWORD
This key is defined for WAR 1969966
You may only assign it to one of the names listed below.

NO SUBSTITUTION              (= 0x00000000)
HIGHQUALITY BECOMES QUALITY  (= 0x00000001)

Default values for this setting:
DEFAULT:    NO SUBSTITUTION

------------------------------------------------------------
QUERY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

DEFAULT                    (= 0x00000000)  // Default from application
FORCE GETDATA FLUSH        (= 0x00000001)  // Force GetData to flush command buffer
FORCE GETDATA WAITFORDATA  (= 0x00000002)  // Force GetData to wait for query results

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
QUIET MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables the Whisper Mode functionality, cap FPS for AC mode only

MIN       (= 0x00000001)  // Minimum
MAX       (= 0x000003ff)  // Maximum
ENABLED   (= 0x10000000)  // Enabled
DISABLED  (= 0x00000000)  // Disabled
XQM       (= 0x10000028)  // External Quiet Mode Setting

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
QUIET MODE APP FPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Override FPS for Whisper Mode, can be set differently for each application

MIN          (= 0x00000001)  // Minimum
MAX          (= 0x000003ff)  // Maximum
NO OVERRIDE  (= 0x00000000)  // No override

Default values for this setting:
DEFAULT:    NO OVERRIDE

------------------------------------------------------------
RAYQUERY AND FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Inline ray query template flags are bitwise ANDed with this value

DEFAULT                  (= 0xffffffff)  // Default.
CLEAR FORCE OPAQUE       (= 0xfffffffe)
CLEAR FORCE NO OPAQUE    (= 0xfffffffd)
CLEAR TERM ON FIRST HIT  (= 0xfffffffb)
CLEAR SKIP CLOSEST HIT   (= 0xfffffff7)
CLEAR CULL BACK FACING   (= 0xffffffef)
CLEAR CULL FRONT FACING  (= 0xffffffdf)
CLEAR CULL OPAQUE        (= 0xffffffbf)
CLEAR CULL NON OPAQUE    (= 0xffffff7f)
CLEAR SKIP TRIANGLES     (= 0xfffffeff)
CLEAR SKIP AABBS         (= 0xfffffdff)

Default values for this setting:
DEFAULT:    0xFFFFFFFF
	DEFAULT                                 
	CLEAR FORCE OPAQUE                      
	CLEAR FORCE NO OPAQUE                   
	CLEAR TERM ON FIRST HIT                 
	CLEAR SKIP CLOSEST HIT                  
	CLEAR CULL BACK FACING                  
	CLEAR CULL FRONT FACING                 
	CLEAR CULL OPAQUE                       
	CLEAR CULL NON OPAQUE                   
	CLEAR SKIP TRIANGLES                    
	CLEAR SKIP AABBS                        

------------------------------------------------------------
RAYQUERY OR FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Inline ray query template flags are bitwise ORed with this value

DEFAULT            (= 0x00000000)  // Default.
FORCE OPAQUE       (= 0x00000001)
FORCE NO OPAQUE    (= 0x00000002)
TERM ON FIRST HIT  (= 0x00000004)
SKIP CLOSEST HIT   (= 0x00000008)
CULL BACK FACING   (= 0x00000010)
CULL FRONT FACING  (= 0x00000020)
CULL OPAQUE        (= 0x00000040)
CULL NON OPAQUE    (= 0x00000080)
SKIP TRIANGLES     (= 0x00000100)
SKIP AABBS         (= 0x00000200)

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
READ ONLY DSV EARLYZ HAZARD WAR ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Track read-only DSVs as last having been bound to PS to catch WAR hazards between early-z and PS.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
READ REGISTRY FOR DVS MACHINE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

read Windows registry for dvs-machine check

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
REDUCE VASPACE MAPPINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x22754241)
ON, 1, TRUE, ENABLED     (= 0x66855023)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
REFCOUNT BACKING STORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Backing store allocation used by the refcount class to store the ref count.

DEFAULT          (= 0x00000000)  // Default driver behavior based on the wddm model: BLOCKLIST on wddm 1.x and MONITORED FENCE on wddm 2.0 Hw Scheduling
BLOCKLIST        (= 0x00000001)  // Force using blocklist backing store. (for debugging purposes only on wddm 2.x)
MONITORED FENCE  (= 0x00000002)  // Force using monitored fence backing store (won't work on wddm 1.x)

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
REFRESHRATEOVERRIDES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
REFRESHRATEOVERRIDE DENYLIST
------------------------------------------------------------
This key is of type BINARY
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
REFRESH RATE OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enables refresh rate override for digital monitors that support 110Hz/120Hz

APPLICATION CONTROLLED  (= 0x00000000)  // Application selects the refresh rate: effectively disabled
HIGHEST AVAILABLE       (= 0x00000001)  // Select the highest available refresh rate from EDID
LOW LATENCY RR MASK     (= 0x00000ff0)  // (Dx9 only) Set the value of RR for low latency (in hex) 

Default values for this setting:
DEFAULT:    APPLICATION CONTROLLED

------------------------------------------------------------
REGCOUNT GS MAX
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the max allowed value for SetGsRegisterCount.  Default: 0xFFFFFFFF.  Currently only implemented in wgf2um driver.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
REGCOUNT GS MIN
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the minimum allowed value for SetGsRegisterCount.  Actually, this value will be max(REGCOUNT GS MIN, 4).  Default: 0x00000000.  Currently only implemented in wgf2um driver.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
REGCOUNT PS MAX
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the max allowed value for SetPsRegisterCount.  Default: 0xFFFFFFFF.  Currently only implemented in wgf2um driver.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
REGCOUNT PS MIN
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the minimum allowed value for SetPsRegisterCount.  Actually, this value will be max(REGCOUNT PS MIN, 4).  Default: 0x00000000.  Currently only implemented in wgf2um driver.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
REGCOUNT VS MAX
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the max allowed value for SetVsRegisterCount.  Default: 0xFFFFFFFF.  Currently only implemented in wgf2um driver.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
REGCOUNT VS MIN
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the minimum allowed value for SetVsRegisterCount.  Actually, this value will be max(REGCOUNT VS MIN, 4).  Default: 0x00000000.  Currently only implemented in wgf2um driver.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
REPORT D3D12 DDI SUPPORTED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Determine the additional (WDDM2.1+) DDI versions to report (D3D12DDI SUPPORTED *).  Encode the enum suffix in the dword (i.e. D3D12DDI SUPPORTED 0013, write 0x00000013


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
RESOURCEMINLODOPTIMIZATIONENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable / Disable memory usage optimization when the resource min lod of a resource is greater than 1.

OFF, 0, FALSE, DISABLED  (= 0x9739af35)  // (DEFAULT) Don't optimize memory usage
ON, 1, TRUE, ENABLED     (= 0xdef2fe3a)  // Optimize memory usage

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
REUSE FREE SPACE IN UMD MANAGED GPFIFO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is the flag for deciding whether to reuse available space on a gpfifo allocation. Applicable for UMD managed gpfifo (HWS) alone.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // disable reuse of free gpfifo space
ON, 1, TRUE, ENABLED     (= 0x00000001)  // enable reuse of free gpfifo space

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
RIDSHIM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Resource Image Dumper Shim (RIDShim) layer settings

ENABLE                            (= 0x00000001)  // Enable the RIDShim layer
DUMP LOG                          (= 0x00000002)  // Dump a log file, located in the root path, named RID.txt
DUMP PRESENT SURFACES             (= 0x00000004)  // Dump present surfaces.
CREATE FRAME DIRECTORIES          (= 0x00000008)  // Create a new directory for each frame (named Frame###) to separated image files from different frame numbers.
START DUMP DISABLED               (= 0x00000010)  // Skip image dumping - useful to enable image dumping later in the app's timeline.
DUMP PRE DRAW                     (= 0x00000020)  // Should images be dumped before the draw/dispatch (in addition to after).
ENABLE HOTKEYS                    (= 0x00000040)  // Enable the use of hotkeys to choose which frames to dump.
DUMP RT AFTER PRESENT             (= 0x00000080)  // Dump render targets after each present call.
DUMP RT AFTER DRAW                (= 0x00000100)  // Dump images of all render targets after every draw call.
DUMP DS AFTER DRAW                (= 0x00000200)  // Dump images of all the depth stencil views after every draw call.
DUMP RT ON SETRTV                 (= 0x00000400)  // Dump previously bound RTV(s) on SetRenderTargets.
DUMP DS ON SETRTV                 (= 0x00000800)  // Dump previously bound DSV on SetRenderTargets.
DUMP CS UAV AFTER DISPATCH        (= 0x00001000)  // Dump UAVs after each Dispatch.
DUMP 3D UAV AFTER DRAW            (= 0x00002000)  // Dump 3D UAVs after each Draw.
DUMP CS UAV ON SETUAV             (= 0x00004000)  // Dump previously bound compute UAVs on SetUAV.
DUMP 3D UAV ON SETUAV             (= 0x00008000)  // Dump previously bound 3D UAVs on SetUAV.
DUMP VS SRV AFTER DRAW            (= 0x00100000)  // Dump all vertex shader resource views after each draw call.
DUMP HS SRV AFTER DRAW            (= 0x00200000)  // Dump all hull shader resource views after each draw call.
DUMP DS SRV AFTER DRAW            (= 0x00400000)  // Dump all domain shader resource views after each draw call.
DUMP GS SRV AFTER DRAW            (= 0x00800000)  // Dump all geometry shader resource views after each draw call.
DUMP PS SRV AFTER DRAW            (= 0x01000000)  // Dump all pixel shader resource views after each draw call.
DUMP CS SRV AFTER DRAW            (= 0x02000000)  // Dump all compute shader resource views after each draw call.
DUMP ALL AFTER CROSSADAPTER COPY  (= 0x10000000)  // Dump both src and dst after copy

------------------------------------------------------------
RIDSHIM9
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Resource Image Dumper Shim for vista + / dx9

DISABLE                       (= 0x00000000)  // Disable RIDSHIM9 layer
DUMP ERRORLOG                 (= 0x00000002)  // Dump Errors in log file, located at root path, named ErrorLog.txt
DUMP RT                       (= 0x00000004)  // Dump render targets
DUMP TEXTURE                  (= 0x00000008)  // Dump textures
DUMP ZBUFFER                  (= 0x00000010)  // Dump Z-Buffers
CREATE FRAME DIRECTORIES      (= 0x00000020)  // Create a new directory for each frame (named Frame###) to separated image files from different frame numbers
ENABLE HOTKEYS                (= 0x00000040)  // Enable the use of hotkeys to choose which frames to dump
DUMP BEFORE DRAW              (= 0x00000080)  // Dump before every draw call
DUMP AFTER DRAW               (= 0x00000100)  // Dump after every draw call
DUMP BEFORE PRESENT           (= 0x00000200)  // Dump before each present call
DUMP AFTER PRESENT            (= 0x00000400)  // Dump after each present call
DUMP BEFORE BLT               (= 0x00000800)  // Dump before every blit call
DUMP AFTER BLT                (= 0x00001000)  // Dump after every blit call
DUMP BEFORE COLORFILL         (= 0x00002000)  // Dump before each colorfill call
DUMP AFTER COLORFILL          (= 0x00004000)  // Dump after each colorfill call
DUMP BEFORE DEPTHFILL         (= 0x00008000)  // Dump before each depthfill call
DUMP AFTER DEPTHFILL          (= 0x00010000)  // Dump after each depthfill call
DUMP BEFORE CLEAR             (= 0x00020000)  // Dump before clear call
DUMP AFTER CLEAR              (= 0x00040000)  // Dump after clear call
DUMP BEFORE UPDATESUBRES      (= 0x00080000)  // Dump before Update Subresource call
DUMP AFTER UPDATESUBRES       (= 0x00100000)  // Dump after Update Subresource call
DUMP VB                       (= 0x00200000)  // Dump vertex buffer
DUMP IB                       (= 0x00400000)  // Dump index buffer
DUMP BEFORE PRESENT MSHYBRID  (= 0x00800000)  // Dump before each present call
DUMP AFTER PRESENT MSHYBRID   (= 0x01000000)  // Dump after each present call
DUMP BEFORE BLT MSHYBRID      (= 0x02000000)  // Dump before every blit call
DUMP AFTER BLT MSHYBRID       (= 0x04000000)  // Dump after every blit call
DUMP AS IMAGE                 (= 0x10000000)  // Dump as Image
DUMP AS TEXT                  (= 0x20000000)  // Dump as Text

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
RIDSHIM9 BASEDIR
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the base directory for files and logs dumped by RIDShim - note that the path to this directory must already exist.


------------------------------------------------------------
RIDSHIM9 DRAWPERFRAME RANGE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A string specifying which draw calls to dump in a frame .For Example: To dump draw 0, draw 10 through 15, and all draw calls after draw 100 within a frame range you would set this string to '0,10-15,100...Also specify the frame range using RIDSHIM9 PRESENT RANGE key'


------------------------------------------------------------
RIDSHIM9 DRAW RANGE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A string specifying which draw calls to generate images .For Example: To dump draw 0, draw 10 through 15, and all draw calls after draw 100 you would set this string to '0,10-15,100...'


------------------------------------------------------------
RIDSHIM9 IMAGE FORMAT
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The type of image format. Valid types are: BMP, PPM, PNG, DDS, EXR. EXR, PPM and DDS are uncompressed. EXR is for bit-accurate (>8 bit) formats but produces the largest files.


------------------------------------------------------------
RIDSHIM9 PRESENT RANGE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A string specifying which present calls to generate images .For Example: To dump present 0, present 10 through 15, and all present calls after present 100 you would set this string to '0,10-15,100...'


------------------------------------------------------------
RIDSHIM9 SINGLE FRAME HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify the hotkey for capturing a single frame in the RIDShim as an ascii value. For example, VK F7 would be 76.


------------------------------------------------------------
RIDSHIM9 TOGGLE HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify the hotkey to be used for toggling the RIDShim device on and off. For example, VK F7 would be 76.


------------------------------------------------------------
RIDSHIM BASEDIR
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the base directory for files and logs dumped by RIDShim - note that the path to this directory must already exist.


------------------------------------------------------------
RIDSHIM DRAW RANGE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A string specifying which draw calls to generate images .For Example: To dump draw 0, draw 10 through 15, and all draw calls after draw 100 you would set this string to '0,10-15,100...'


------------------------------------------------------------
RIDSHIM FRAMES
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A string specifying which frame numbers to generate images for. Example: To dump frame 0, frames 10 through 15, and all frames after frame 100 you would set this string to '0,10-15,100...'


------------------------------------------------------------
RIDSHIM IMAGE FORMAT
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The type of image format. Valid types are: BMP, PPM, PNG, DDS, EXR. EXR, PPM and DDS are uncompressed. EXR is for bit-accurate (>8 bit) formats but produces the largest files.


------------------------------------------------------------
RIDSHIM SINGLE FRAME HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify the hotkey for capturing a single frame in the RIDShim as an ascii value. For example, VK F7 would be 76.


------------------------------------------------------------
RIDSHIM TOGGLE HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify the hotkey to be used for toggling the RIDShim device on and off. For example, VK F7 would be 76.


------------------------------------------------------------
ROOT TABLE PREFETCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Set values for GA10x+ Root Table prefetch feature. See http://nvbugs/2498256.  Note Vertex (bit 1) and Pixel (bit 5) are the only stages implemented on GA10x

OFF                       (= 0x00000000)  // Disable for all stages
VERTEX CULL BEFORE FETCH  (= 0x00000001)  // Prefetch root tables for VERTEX CULL BEFORE FETCH stage
VERTEX                    (= 0x00000002)  // Prefetch root tables for VERTEX stage
TESSELLATION INIT         (= 0x00000004)  // Prefetch root tables for TESSELLATION INIT stage
TESSELLATION              (= 0x00000008)  // Prefetch root tables for TESSELLATION stage
GEOMETRY                  (= 0x00000010)  // Prefetch root tables for GEOMETRY stage
PIXEL                     (= 0x00000020)  // Prefetch root tables for PIXEL stage
ENABLE ALL                (= 0x0000003f)  // Enable for all stages

Default values for this setting:
DEFAULT:    0x0000003F
	VERTEX CULL BEFORE FETCH                
	VERTEX                                  
	TESSELLATION INIT                       
	TESSELLATION                            
	GEOMETRY                                
	PIXEL                                   
	ENABLE ALL                              

------------------------------------------------------------
RTCORE BVH DUMP HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set custom key for BVH bin data dump. Also need to set RTCORE BVH DUMP MODE to HOTKEY. (default is ctrl+home)


Default values for this setting:
DEFAULT:    0x00000024

------------------------------------------------------------
RTCORE BVH DUMP MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable to dump BVH bin data at ECL. This feature reduces performance and increases memory usage.

OFF         (= 0x00000000)  // Feature disabled
CONTINUOUS  (= 0x00000001)  // Continuously dump BVHs
HOTKEY      (= 0x00000002)  // Trigger BVH dump using a hotkey (Can be changed with RTCORE BVH DUMP HOTKEY. Default is ctrl+home)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
RTCORE BVH DUMP PATH
------------------------------------------------------------
This key is of type STRING
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Path where BVH bin data will be dumped


Default values for this setting:
DEFAULT:    .

------------------------------------------------------------
RTCORE DEFAULT CACHE CONFIG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

RTcore default L1/SMEM cache configuration. Does not work with Turing SM-SCG. Individual kernels may override this.

PREFER NONE    (= 0x00000000)  // No preference for shared memory or L1
PREFER SHARED  (= 0x00000001)  // Prefer larger shared memory and smaller L1 cache
PREFER L1      (= 0x00000002)  // Prefer larger L1 cache and smaller shared memory
PREFER EQUAL   (= 0x00000003)  // Prefer equal sized L1 cache and shared memory

Default values for this setting:
DEFAULT:    PREFER NONE

------------------------------------------------------------
RTCORE DISABLE SMEM SPILLS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

RTcore SMEM spilling policy. OFF = allow spills to SMEM, ON = disable spills to SMEM

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Allow spills to SMEM
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Disable spills to SMEM

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
RTCORE DUMP MODULE CUBINS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Dump CUBINs of compiled raytracing shaders to file. Will not dump internal modules such as traversers or schedulers.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
RTCORE DXR USE CUDA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Use CUDA as the backend for rtcore with DXR

NO, 0, OFF, DISABLED  (= 0x00000000)  // CUDA is not used as the backend for RTCORE with DXR
YES, 1, ON, ENABLED   (= 0x00000001)  // CUDA is used as the backend for RTCORE with DXR

Default values for this setting:
DEFAULT:    YES

------------------------------------------------------------
RTCORE EXCEPTION FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Override RTCORE default exception flags

NONE            (= 0x00000000)
STACK OVERFLOW  (= 0x00000001)
TRACE DEPTH     (= 0x00000002)
RTCORE DEFAULT  (= 0xffffffff)

Default values for this setting:
DEFAULT:    0xFFFFFFFF
	STACK OVERFLOW                          
	TRACE DEPTH                             
	RTCORE DEFAULT                          

------------------------------------------------------------
RTCORE KNOBS
------------------------------------------------------------
This key is of type STRING
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String containing multiple knobs passed to RTcore. The format is JSON, with the following differences:  1) the enclosing '{' and '}' are omitted.  2) key identifiers don't have to be in quotes.  3) objects ('{','}') are not supported.  4) C and C++ style comments are supported. Example: 'pipeline.logLaunchDetails:true'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
RTCORE LOG LEVEL
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The log level passed to RTcore, in [0,100]


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
RTCORE MAX REGISTERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum register count for ray tracing pipelines, zero means default


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
RTCORE NUM ATTRIBUTE REGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The number of attribute registers used with RTcore, zero means default


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
RTCORE NUM PAYLOAD REGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

The number of payload registers used with RTcore, zero means default


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
RTCORE PRINT CONTINUATION SPILLS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

For each continuation call, print a list of values that are spilled.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
RTCORE PROFILING
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

RTcore profiling mode. Change dumping behavior using RTCORE PROFILING DUMP MODE and RTCORE PROFILING DUMP HOTKEY

NONE          (= 0x00000000)  // Feature disabled
STATEFUNC     (= 0x00000001)  // Dump state function profile to file
RAYS          (= 0x00000002)  // Dump ray data to file
LAUNCHBUFFER  (= 0x00000004)  // Dump launch buffer to file

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
RTCORE PROFILING ALLOCATION SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

RTcore profiling buffer allocation size. Defaults to 4MiB.


Default values for this setting:
DEFAULT:    0x00400000

------------------------------------------------------------
RTCORE PROFILING DUMP COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies the number of ECLs to dump profile data over, on hotkey press.


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
RTCORE PROFILING DUMP HOTKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set custom key for triggering RTCore profile write. Also need to set RTCORE BVH DUMP MODE to HOTKEY. (default is ctrl+pageup)


Default values for this setting:
DEFAULT:    0x00000021

------------------------------------------------------------
RTCORE PROFILING DUMP MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Specify how frequently profiling data is written to file.

CONTINUOUS  (= 0x00000000)  // Continuously dump to file
HOTKEY      (= 0x00000001)  // Trigger profile dump using a hotkey (Can be changed with RTCORE PROFILING DUMP HOTKEY)

Default values for this setting:
DEFAULT:    0x00000000
	CONTINUOUS                              

------------------------------------------------------------
RTCORE USE CUDA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Use CUDA as the backend for rtcore

NO, 0, OFF, DISABLED  (= 0x00000000)  // CUDA is not used as the backend for RTCORE
YES, 1, ON, ENABLED   (= 0x00000001)  // CUDA is used as the backend for RTCORE

Default values for this setting:
DEFAULT:    YES

------------------------------------------------------------
RTCORE WARPS PER CTA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Suggested warp per CTA count for supported schedulers. Zero is disabled.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
RTCORE WARPS PER CTA AMPERE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Suggested warp per CTA count for supported schedulers for Ampere if global is not set. Zero is disabled.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
RTCORE WARPS PER CTA TURING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Suggested warp per CTA count for supported schedulers for Turing if global is not set. Zero is disabled.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
RTCQ SCHEDULING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

How the D3D12DDI COMMAND QUEUE CREATION FLAG GLOBAL REALTIME PRIORITY and D3D11DDI CREATEDEVICE FLAG ENABLE INCREASED PRIORITY should be implemented

USE MIDBUFFERPREEMPTION  (= 0x00000000)  // Use mid buffer preemption (OS scheduling) when available
USE LOWLATENCY           (= 0x00000001)  // Use the low latency node (HW timeslicing)

Default values for this setting:
DEFAULT:    USE LOWLATENCY

------------------------------------------------------------
RTXIO FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Resource streamer control flags

NONE                        (= 0x00000000)
VIDMEM STAGING ENABLE       (= 0x00000001)  // Uses Staging buffer pinned to vidmem for file reads
HOST STAGING ALWAYS MAPPED  (= 0x00000002)  // Uses host staging buffer mapped for file reads always. Otherwise we map/unmap staging resource for file read and ECL.
ENABLE DRIVER THREAD        (= 0x00000004)  // Use internal worker thread (threaded submissions)
NVME BATCH READS            (= 0x00000008)  // NVMeFSBypass submits multiple reads togather.

Default values for this setting:
DEFAULT:    0x00000004
	ENABLE DRIVER THREAD                    

------------------------------------------------------------
RTXIO MAX SOURCE READ SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of KB for the maximum read size. A smaller number implies more read requests. Default is to use staging buffer / maximum number of overlapped reads


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
RTXIO NVME MAX READ PER CMD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override the number of bytes being copied in single NVMe read command. default use caps


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
RTXIO NVME RESERVED QUEUES ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Use NVMe reserved queues instead of win32 for file reads. This needs nvmetf driver otherwise it would fallback on win32.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
RTXIO NVME USE LBA UMD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

UMD implementation of LBA translation requires running application in admin mode. Default KMD runs with non-admin.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
RTXIO OVERRIDE STAGING BUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of MB for the staging buffer size. The application provides this number but this is a way we can override it in the driver. The default is 0 to not override.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
RUN CTA IN ONE SM PARTITION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Set RunCtaInOneSmPartition bit in the QMD for CTA's with a warp count of at most RUN CTA IN ONE SM PARTITION MAX WARP COUNT

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

------------------------------------------------------------
RUN CTA IN ONE SM PARTITION MAX WARP COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Companion regkey to RUN CTA IN ONE SM PARTITION


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
SCGLOG FIRST CL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

first command list index within a frame to dump in SCG query logs


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SCGLOG FIRST FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

first frame to dump in SCG log


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SCGLOG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

controls types of data in SCG log

LOG PUSHBUFFER FLUSHES   (= 0x00000001)
LOG GR vs CS HAZARDS     (= 0x00000002)
LOG CS vs CS HAZARDS     (= 0x00000004)
LOG REFCOUNTS            (= 0x00000008)
LOG PER FRAME SCG QUERY  (= 0x00000100)  // Enable collecting Gr/CS cycle counts through GP10x SCG queries

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SCGLOG LAST CL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

last command list index within a frame to dump in SCG query logs


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
SCGLOG LAST FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

last frame to dump in SCG log


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
SCGLOG QUERY MASK
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

controls which queries are dumped into SCGLOG

GRAPHICS ACTIVE CYCLES  (= 0x00000001)  // GraphicsActiveCycles, the total number of clocks where any graphics resource is occupied.
COMPUTE ACTIVE CYCLES   (= 0x00000002)  // ComputeActiveCycles, the total number of clock where any compute resource is occupied.
IDLE CYCLES             (= 0x00000004)  // IdleCycles, the total number of clocks where no graphics or compute resource is occupied.
GRAPHICS OCCUPANCY      (= 0x00000008)  // GraphicsOccupancyWithIsbes, the graphics resource occupancy as a percentage, based on the usage of warp IDs, LRF, GFXTRAM, and ISBEs.
UNUSED 0                (= 0x00000010)  // Not used.
DEBUG COUNTER           (= 0x00000020)  // Usage varies based on NV PGRAPH PRI GPCS TPCS MPC VTG DEBUG bits[10:9].
COMPUTE OCCUPANCY       (= 0x00000040)  // ComputeOccupancy, the compute resource occupancy as a percentage, based on the usage of warp IDs, LRF, shared memory, barrier and CTA IDs.
UNUSED 1                (= 0x00000080)  // Not used.

Default values for this setting:
DEFAULT:    0x0000006F
	GRAPHICS ACTIVE CYCLES                  
	COMPUTE ACTIVE CYCLES                   
	IDLE CYCLES                             
	GRAPHICS OCCUPANCY                      
	DEBUG COUNTER                           
	COMPUTE OCCUPANCY                       

------------------------------------------------------------
SCG D3D12 COMPUTE QUEUES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

enables SCG for DX12 compute queues

ENABLED   (= 0x00000001)
DISABLED  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000001
	ENABLED                                 

------------------------------------------------------------
SCG D3D12 CONTROL FILE
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

File path+name for specifying per technique SCG controls. Disables static configurations so they don't conflict.


------------------------------------------------------------
SCG D3D12 CONTROL FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls for various SCG functionality

DISABLE CL HAZARD DETECT                          (= 0x00000001)  // Disables cross command list hazard resolution (can cause RC errors)
DISABLE YIELD ON DRAW                             (= 0x00000002)  // Disable pushing of yields on draw (based on yields per frame). Experimental.
DISABLE YIELD ON PSO CHANGE                       (= 0x00000004)  // Disable pushing of yields on PSO change
DISABLE YIELD ON RT CHANGE                        (= 0x00000008)  // Disable pushing of yields on RT change
DISABLE YIELD MASK                                (= 0x0000000e)
FORCE GR SEMAPHORE WFI                            (= 0x00000010)  // Forces semaphore release/acquire based WFIs for graphics queues
FORCE CS SEMAPHORE WFI                            (= 0x00000020)  // Forces semaphore release/acquire based WFIs for compute queues
FORCE GR HOST WFI                                 (= 0x00000040)  // Forces host release/acquire based WFIs for graphics queues
FORCE CS HOST WFI                                 (= 0x00000080)  // Forces host release/acquire based WFIs for compute queues
DISABLE STATIC CONFIG                             (= 0x00000100)  // Disables all static configurations of SCG.
DISABLE CL INITIAL DESCRIPTOR HEAP SET ON PBDMA1  (= 0x00000200)  // Disables setting initial descriptor heap on PBDMA1

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SCG D3D12 DEBUG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls for various SCG develop/debug functionality

DUMP ASYNC CS DEVICE SHADER HASH    (= 0x00000001)  // Dump compute shader hashes used on compute only devices to the debug file
DUMP SYNC GR CS DEVICE SHADER HASH  (= 0x00000002)  // Dump graphics/compute shader hashes used on sync devices to the debug file
DUMP SHADER GROUP TIMESTAMPS        (= 0x00000004)  // Dump host timestamps of PSO binds for cross engine correlation
REMOVE REDUNDANT HASHES             (= 0x00000010)  // Removes redundant references to hashes already marked for dump
DUMP TO DEBUGGER                    (= 0x00000020)  // Dumps hashes/timelines to debugger instead of debug file
DUMP SCG STATE HAZARDS              (= 0x00000040)  // Enables SCG hazard logging

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SCG D3D12 ENABLE DYNAMIC SMSCG HEURISTIC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Dynamically switch SMSCG on/off for DXR and meta command workloads

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
SCG D3D12 FAST DRAIN THROTTLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Throttles compute SM count on slow drains to force fast drain

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Use default SM SCG configuration
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Use max allowed SMs for fast drain

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
SCG D3D12 GPU HAZARD RESOLVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Switches between GPU and CPU based hazard resolution

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
SCG D3D12 REMOVE BACKUP DEVICE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

remove backup device for SCG

REMOVE BACKUP DEVICE      (= 0x00000001)
REMOVE PROMOTION CONTEXT  (= 0x00000002)
REMOVE BOTH               (= 0x00000003)
DISABLED                  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
SCG D3D12 SINGLE NODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable single node SCG on DX12 graphics queue, GP10x and beyond only

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
SCG D3D12 SINGLE NODE AUTO SCG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable single-node auto SCG on graphics queues

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     

------------------------------------------------------------
SCG D3D12 SINGLE NODE DRIVER SCG COMPUTE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable single-node driver SCG on compute queues

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
SCG D3D12 SINGLE NODE DRIVER SCG GRAPHICS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable single-node driver SCG on graphics queues

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
SCG D3D12 SINGLE NODE DRIVER SCG NO BROADCAST WAIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable D3DDDI CREATEHWQUEUEFLAGS NoBroadcastWait for single-node driver SCG channel

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
SCG D3D12 SINGLE NODE LDA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable single node SCG on DX12 graphics queue for LDA

NONE, 0           (= 0x00000000)
ALL, 1            (= 0x00000001)
TURING AND NEWER  (= 0x00000002)
AMPERE AND NEWER  (= 0x00000003)

Default values for this setting:
DEFAULT:    AMPERE AND NEWER

------------------------------------------------------------
SCG D3D12 SMSCG CONTROL FLAGS DYNAMIC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls SMSCG enable/disable static heuristic

DISABLE SMSCG BUILD BVH COMPUTE             (= 0x00000001)  // Disable SMSCG for compute command buffers that do BVH build
DISABLE SMSCG DISPATCH RAYS COMPUTE         (= 0x00000002)  // Disable SMSCG for compute command buffers that do Dispatch Rays
DISABLE SMSCG EMIT BVH INFO COMPUTE         (= 0x00000004)  // Disable SMSCG for compute command buffers that do emit BVH info
DISABLE SMSCG COPY BVH COMPUTE              (= 0x00000008)  // Disable SMSCG for compute command buffers that do copy BVH
DISABLE SMSCG SET PIPELINE STATE COMPUTE    (= 0x00000010)  // Disable SMSCG for compute command buffers that set DXR pipeline state
DISABLE SMSCG INIT META COMMAND COMPUTE     (= 0x00000020)  // Disable SMSCG for compute command buffers that init meta commands
DISABLE SMSCG EXECUTE META COMMAND COMPUTE  (= 0x00000040)  // Disable SMSCG for compute command buffers that execute meta commands
DISABLE SMSCG LAUNCH CUBIN COMPUTE          (= 0x00000080)  // Disable SMSCG for compute command buffers that execute meta commands
DISABLE SMSCG COMPUTE MASK                  (= 0x000000ff)  // Mask of all compute flags
DISABLE SMSCG BUILD BVH DIRECT              (= 0x00000100)  // Disable SMSCG for direct command buffers that do BVH build
DISABLE SMSCG DISPATCH RAYS DIRECT          (= 0x00000200)  // Disable SMSCG for direct command buffers that do Dispatch Rays
DISABLE SMSCG EMIT BVH INFO DIRECT          (= 0x00000400)  // Disable SMSCG for direct command buffers that do emit BVH info
DISABLE SMSCG COPY BVH DIRECT               (= 0x00000800)  // Disable SMSCG for direct command buffers that do copy BVH
DISABLE SMSCG SET PIPELINE STATE DIRECT     (= 0x00001000)  // Disable SMSCG for direct command buffers that set DXR pipeline state
DISABLE SMSCG INIT META COMMAND DIRECT      (= 0x00002000)  // Disable SMSCG for direct command buffers that init meta commands
DISABLE SMSCG EXECUTE META COMMAND DIRECT   (= 0x00004000)  // Disable SMSCG for direct command buffers that execute meta commands
DISABLE SMSCG LAUNCH CUBIN DIRECT           (= 0x00008000)  // Disable SMSCG for direct command buffers that execute meta commands
DISABLE SMSCG DIRECT MASK                   (= 0x0000ff00)  // Mask of all direct flags
DISABLE SMSCG DEFAULT COMPUTE               (= 0x00010000)  // Flag disables SMSCG on compute command buffers that do not use DXR or Meta Commands
DISABLE SMSCG DEFAULT DIRECT                (= 0x00020000)  // Flag disables SMSCG on direct command buffers that do not use DXR or Meta Commands

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SCG D3D12 SMSCG CONTROL FLAGS STATIC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls SMSCG enable/disable static heuristic

ENABLE SMSCG WITH DXR            (= 0x00000001)  // Enable SMSCG, even with DXR workloads
ENABLE SMSCG WITH META COMMANDS  (= 0x00000002)  // Enable SMSCG, even with DX meta commands
ENABLE SMSCG DEFERRED INIT       (= 0x00000004)  // Wait until async compute queue is used to enable SMSCG
ENABLE SMSCG FOR DRIVER SCG      (= 0x00000008)  // Enable SMSCG on first use of driver SCG (only applies when deferred init is enabled).

------------------------------------------------------------
SCG DEBUG COUNTER MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Selects mode for the 5th subreport SCG semaphore query

GFX PIX QUADS 0      (= 0x00000000)  // Count # of 3D PIX Quads launched per cycle
GFX PIX QUADS 1      (= 0x00000001)  // Same as QUADS 0
WARP DRAIN           (= 0x00000002)  // Count # of warps waiting to drain per cycle
OCCUPANCY EXCL ISBE  (= 0x00000003)  // Count most occupied Gfx resource excluding ISBE

Default values for this setting:
DEFAULT:    OCCUPANCY EXCL ISBE

------------------------------------------------------------
SCG GRAPHICS CQ ID
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DX12: Target a specific graphics CQ ID to pair with async compute (atomically incremented from 0)


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SCG GRAPHICS PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of SCG graphics, should generally match QMD PRIORITY SYNC COMPUTE


Default values for this setting:
DEFAULT:    0x00000010

------------------------------------------------------------
SCG GR HAZARD CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

controls how graphics hazards are handled in SCG mode

DRIVER CONTROLLED  (= 0x00000000)  // default depends on GPU type
FORCE WFI          (= 0x00000001)  // Use WFI (non-SCG default)
FORCE SEMAPHORE    (= 0x00000002)  // Use semaphores
MODE CONTROL MASK  (= 0x000000ff)  // The mask for the field representing above modes
FORCE HOST WAIT    (= 0x00000100)  // A flag to force WFI path using host waits instead of WFI invalidates

Default values for this setting:
DEFAULT:    DRIVER CONTROLLED

------------------------------------------------------------
SCG NVAPI SAMPLER HEADER POOL SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Default number of entries of the sampler header pool when using nvapi SCG device


Default values for this setting:
DEFAULT:    0x000007FF

------------------------------------------------------------
SCG NVAPI SHADER HEAP SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Default size (in bytes) of the shader heap when using nvapi SCG device


Default values for this setting:
DEFAULT:    0x00100000

------------------------------------------------------------
SCG NVAPI TEXTURE HEADER POOL SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Default number of entries of the texture header pool when using nvapi SCG device


Default values for this setting:
DEFAULT:    0x00020000

------------------------------------------------------------
SCG QMD USE DEPENDENT POINTER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable launches using dependent QMD pointer

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SCG SINGLE NODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

enables SCG for legacy apps

DISABLED                 (= 0x00000000)
ENABLED                  (= 0x00000001)
CONDITIONAL PASCAL       (= 0x10000001)  // enabled conditionally, for GP10x specifically
CONDITIONAL PASCAL PLUS  (= 0x20000001)  // enabled conditionally, for all chips >= GP10x
DISABLED ON SLI          (= 0x00000002)  // disabled on SLI configs, for both hws and non-hws
DISABLED ON SLI HWS      (= 0x00000004)  // disabled on SLI configs, for hws only
AMPERE DISABLE SMSCG     (= 0x00000008)  // Disable SMSCG on Ampere GPU. Applicable if autoSCG is enabled
DISABLED WITH HWS OFF    (= 0x00000010)  // Disabled for VR+HWS off for games that we cannot detect VR mode at launch

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
SCG YIELDS PER FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

control number of yields per frame, ~0 - unrestricted, 0 - disabled


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
SETRASTERPIPESYNCCONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Value for the NV9097 SET RASTER PIPE SYNC CONTROL method.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SETREDUCECOLORTHRESHOLDSFORCEENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SETREDUCECOLORTHRESHOLDSFP11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x0000003F

------------------------------------------------------------
SETREDUCECOLORTHRESHOLDSFP16
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
SETREDUCECOLORTHRESHOLDSSRGB8
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
SETREDUCECOLORTHRESHOLDSUNORM10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
SETREDUCECOLORTHRESHOLDSUNORM16
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
SETREDUCECOLORTHRESHOLDSUNORM8
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


Default values for this setting:
DEFAULT:    0x000000FF

------------------------------------------------------------
SETTESSELLATIONCUTHEIGHT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV9097 SET TESSELLATION CUT HEIGHT method. Value must be 2 <= value <= 16.


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
SETTICKCONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for NV5097 SET TICK CONTROL method, where bit 0 is Z ENABLE, bit 1 is COLOR ENABLE, bits 5:2 are MAX TICK COUNT, bits 13:6 are ACCUM TIMEOUT, bits 19:14 are ZBAR TICK WINDOW, bits 25:20 are CBAR TICK WINDOW, and bits 31:26 are PUDDLE AREA

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
SETTICKCONTROLEARLYZ
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for NV5097 SET TICK CONTROL EARLY Z method, where bit 0 is Z ENABLE, bit 1 is COLOR ENABLE, bits 5:2 are MAX TICK COUNT, bits 13:6 are ACCUM TIMEOUT, bits 19:14 are ZBAR TICK WINDOW, bits 25:20 are CBAR TICK WINDOW, and bits 31:26 are PUDDLE AREA

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
SETVTGREGISTERWATERMARKS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Value for NV9097 SET VTG REGISTER WATERMARKS

DEFAULT KEPLER    (= 0x08000080)  // Kepler class default for this method
DEFAULT MAXWELL   (= 0x08000080)  // Maxwell class default for this method
DEFAULT PASCAL A  (= 0x10000080)  // PASCAL A class default for this method
DEFAULT PASCAL B  (= 0x08000080)  // PASCAL B class default for this method
DEFAULT VOLTA A   (= 0x10000080)  // VOLTA A class default for this method
DEFAULT TURING A  (= 0x10000080)  // TURING A class default for this method
DEFAULT AMPERE A  (= 0x10000080)  // AMPERE A class default for this method
DEFAULT AMPERE B  (= 0x10000080)  // AMPERE B class default for this method
DEFAULT ADA A     (= 0x10000080)  // ADA A class default for this method
DEFAULT HOPPER A  (= 0x10000080)  // HOPPER A class default for this method

------------------------------------------------------------
SETVTGWARPWATERMARKS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Value for NV9097 SET VTG WARP WATERMARKS

DEFAULT KEPLER    (= 0x00400008)  // Kepler class default for this method
DEFAULT MAXWELL   (= 0x00400008)  // Maxwell class default for this method
DEFAULT PASCAL A  (= 0x00400008)  // PASCAL A class default for this method
DEFAULT PASCAL B  (= 0x00400008)  // PASCAL B class default for this method
DEFAULT VOLTA A   (= 0x00400008)  // VOLTA A class default for this method
DEFAULT TURING A  (= 0x00400008)  // TURING A class default for this method
DEFAULT AMPERE A  (= 0x00400008)  // AMPERE A class default for this method
DEFAULT AMPERE B  (= 0x00400008)  // AMPERE B class default for this method
DEFAULT ADA A     (= 0x00400008)  // ADA A class default for this method
DEFAULT HOPPER A  (= 0x00400008)  // HOPPER A class default for this method

------------------------------------------------------------
SET 3D CHANNEL INIT METHODS
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Pass 3D Channel initialization Methods. String should contain multiple key value pairs in hexadecimal notation, separated by a semi-colon. Please use format 'HexMethod1 HexValue1; HexMethod2 HexValue2;...'. Driver initialization will fail if incorrect syntax is used. Very little validation is performed here on the actual values, so anything incorrect may lead to TDR's/Failures. Available Kepler+ and only on Develop/Debug drivers


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
SET 3D NODE LOW PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Set the timeslice value for the 3D channel to low priority.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SET ASYNC LAUNCH QUEUE 1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows CWD to launch all VEID>0 (async compute work ) work in CtaLaunchQueue==1. GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
SET COMPUTE CHANNEL INIT METHODS
------------------------------------------------------------
This key is of type STRING
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Pass Compute Channel initialization Methods. String should contain multiple key value pairs in hexadecimal notation, separated by a semi-colon. Please use format 'HexMethod1 HexValue1; HexMethod2 HexValue2;...'. Driver initialization will fail if incorrect syntax is used. Very little validation is performed here on the actual values, so anything incorrect may lead to TDR's/Failures. Available Kepler+ and only on Develop/Debug drivers


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
SET NON RT LAUNCH QUEUE 1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows CWD to launch all compute work from async queue. Default is OFF.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link. Overrides default regkeys set for sync/async compute work

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

Could not locate information for plain text key: SET POWER THROTTLE FOR PCIe COMPLIANCE

------------------------------------------------------------
SET RT LAUNCH QUEUE 1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows CWD to launch Ray tracing compute work from async queue.  GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link. Overrides default regkeys set for sync/async compute work

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
SET SYNC LAUNCH QUEUE 1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Allows CWD to launch all VEID==0 (compute work on main graphics queue) work in CtaLaunchQueue==1. GA10x+ SMSCC feature. See http://nvbugs/2509750 for further details and FD link.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SET VAB DATA
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This regkey defines the value set in the VAB

ZERO              (= 0x00000000)
UINT ONE          (= 0x00000001)
FLOAT ONE         (= 0x3f800000)
FLOAT POS INF     (= 0x7f800000)
FLOAT NAN         (= 0x7fc00000)
USE API DEFAULTS  (= 0xffffffff)  // ZERO on Dx1x, Todo Dx9 

Default values for this setting:
DEFAULT:    USE API DEFAULTS

------------------------------------------------------------
SFR11 OPTIMIZER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables adjustment of heuristics from their initial state to more optimal state

ALL ENABLED                 (= 0x00000000)  // all heuristics in enabled stateS
DISABLE DYNAMIC SHADOWMAPS  (= 0x00000001)  // disable dynamic shadow map splitting
DISABLE DYNAMIC BROADCAST   (= 0x00000002)  // disable dynamic broadcast

Default values for this setting:
DEFAULT:    0x00000000
	ALL ENABLED                             

------------------------------------------------------------
SFR11 OPTIMIZER LOG SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enables dumping of SFR11 oracle stats (dumping goes to PS FILE PATH) and specifies number of frames in the allocated buffer


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SFR AMPERE CHECKERBOARD FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to control CFR checkerboard clip instruction on Ampere+.

DISABLE      (= 0x00000000)  // Disable Ampere checkerboard clip.
ENABLE       (= 0x00000001)  // Enable Ampere checkerboard clip.
TEST SINGLE  (= 0x00000002)  // Debug testing flag. Apply Ampere checkerboard on single GPU for testing.

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
SFR FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

flags that change SFR behaviour

DEFAULT VALUE                                 (= 0x00000000)  // the default behaviour
MAP NON SHADOW MAPS LOCALLY                   (= 0x00000001)  // intended as perf experiment only - will create NON shadow map remote mappings, but will map them locally
ENABLE FULLSCREEN SCISSORS                    (= 0x00000002)  // intended as perf experiment only - will send full-screen scissors to HW instead of real SFR scissors
DISABLE SCROSS TRANSFERS ON BROADCAST         (= 0x00000004)  // intended as perf experiment only - will disable cross transfers when broadcast rendering to split target happens
DISABLE GPU SYNC BARRIERS                     (= 0x00000008)  // intended as perf experiment only - will disable flushes and semaphores used to synchronize GPUs with each other
DISABLE PAGE ALIGNMENT TRANSFERS              (= 0x00000010)  // intended as perf experiment only - will disable transfers occuring due to page boundary being not aligned with SFR scissor boundary
INVERT SCISSOR RANGES                         (= 0x00000020)  // if true, GPU0 will take lower part of the screen and GPU1 will take higher part of the screen
FORCE FULL RESOLVES                           (= 0x00000040)  // if true, remote texture mapping won't be needed - all textures will be fully resolved on access
DISABLE P2P CACHING                           (= 0x00000080)  // if true, P2P mappings for remote texture are created without cache flag
ENABLE SOFTWARE SEMAPHORES                    (= 0x00000100)  // if true, the default behaviour of (HW semaphores only) is switched to use (SW+HW semaphores)
DISABLE BRIDGELESS TRANSFER                   (= 0x00000200)  // if true, bridgeless transfer is disabled
DISABLE DYNAMIC SHADER OPTS                   (= 0x00000400)  // disable sfr-related shader recompilation
ENABLE LOCAL APPEND CONSUME                   (= 0x00000800)  // hidden counters will be locally mapped
DISABLE GPU WIDE ATOMICS                      (= 0x00001000)  // refers to optimization of p2p atomics by combining multiple warps together and issuing one common atomic
ENABLE COPY ENGINE TRANSFER                   (= 0x00002000)  // if true, uses copy engine to transfer boxes instead of 3D engine
DISABLE OCCLUSION QUERIES TURING              (= 0x00004000)  // enables SFR occlusion queries on Turing
ENABLE TRIPLE BUFFERING                       (= 0x00008000)  // enable triple buffering so that 3D can render to a surface when CE transfer is enabled
DISABLE RTX SPLIT                             (= 0x00010000)  // Disable RTX shader splitting
DISABLE 2D UAV ONLY TILE SHAPES 12            (= 0x00020000)  // DX12 resources can be tightly packed into heaps, so APICs can't replay if captured with different alignment. So provide a regkey to disable alignment on 2D UAV (non-RT/non-ZB) resources
DISABLE 3D UAV ONLY TILE SHAPES 12            (= 0x00040000)  // DX12 resources can be tightly packed into heaps, so APICs can't replay if captured with different alignment. So provide a regkey to disable alignment on 3D UAV (non-RT/non-ZB) resources
MAP SHADOW MAPS LOCALLY                       (= 0x00080000)  // intended as perf experiment only - will create shadow map remote mappings, but will map them locally
NONP2 RESOURCE SPLITS SMALLEST ASPECT RATIO   (= 0x00100000)  // non-power-two splitting strategy that prefer tiles of smallest aspect ratio
NONP2 RESOURCE SPLITS RESOURCES ASPECT RATIO  (= 0x00200000)  // non-power-two splitting strategy that prefer tiles to foolow resource's aspect ratio
NONP2 RESOURCE SPLITS RESERVED                (= 0x00300000)  // reserved
DISABLE CUBIN SPLIT                           (= 0x01000000)  // Disable splitting workload submitted through NVAPI cubin launcher
ENABLE TIME BASED SHADER OPT                  (= 0x02000000)  // we try all possible sfr clip optimizations and choose the best according to shader time

Default values for this setting:
DEFAULT:    0x01000000
	DISABLE CUBIN SPLIT                     

------------------------------------------------------------
SFR NZONES PER GPU
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

number of rendering zones per GPU (affects load balancing)


------------------------------------------------------------
SFR PRERESOLVE FILTER
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Name of the file which contains preresolve filter for SFR


Default values for this setting:
DEFAULT:    (null)

------------------------------------------------------------
SFR SHADER OPT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enablement (when non-zero) and control of SFR specicif shader optimizations

OPTIMIZE READ ACCESS       (= 0x00000001)  // look for uav read instructions
OPTIMIZE WRITE ACCESS      (= 0x00000002)  // look for uav write instructions
OPTIMIZE ATOMIC ACCESS     (= 0x00000004)  // look for uav atomic instructions
OPTIMIZE SRV ACCESS        (= 0x00000008)  // look for srv read instructions
OPTIMIZE ACCESS MASK       (= 0x0000000f)  // mask to select access control bits
RESOURCE SLOT MASK         (= 0x0000fff0)  // mask of a field to store resouce slot to look for
RESOURCE SLOT SHIFT        (= 0x00000004)  // first bit of a field to store resouce slot to look for
RESOURCE SLOT ANY          (= 0x00000fff)  // a special resource slot value to represent any slot (the driver will search)
CTA SIZE MASK              (= 0x001f0000)  // if the value, selected by the mask, is non-zero, it is min size of CTA (in WARPs) to allow optimizations
CTA SIZE SHIFT             (= 0x00000010)  // the first bit of the cta size field
CTA SIZE 8                 (= 0x00080000)  // a common predefined value (=8) for min size of CTA to allow optimization
SPLIT ALGORITHM MASK       (= 0x0f000000)  // which algorithm to use for splitting the compute shader; refer to ::computeSfrTiling for more details
SPLIT ALGORITHM SHIFT      (= 0x00000018)  // first bit of the split algorithm
SPLIT ALGORITHM 16REGION   (= 0x00000000)  // algorithm that forces a 16-region split in the resource
SPLIT ALGORITHM 4x4SINGLE  (= 0x01000000)  // algorithm that starts with a 4x4 split and tries to correct height/width one at a time, for a single interation of the CPU implementation
ALLOW HASH BASED OPT       (= 0x10000000)  // enable optimization based on the table of shader hashes
AUTO DX11                  (= 0x40000000)  // enables automatic optimization for dx11
AUTO DX12                  (= 0x80000000)  // enables automatic optimization for dx12
DX12 DEFAULT               (= 0x0008fff7)  // auto-enable DX12 shader optimization for all UAV accesses (read/write/atomic). Restrict it to 8 or more warps per CTA shaders

Default values for this setting:
DEFAULT:    0x4008FFF7
	RESOURCE SLOT MASK                      
	CTA SIZE 8                              
	SPLIT ALGORITHM 16REGION                
	AUTO DX11                               

------------------------------------------------------------
SFR SHADER OPT FILENAME
------------------------------------------------------------
This key is of type STRING
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Name of a file which contains SFR Shader opt flag per shader (Debugging purpose).
Works only when ALLOW HASH BASED OPT is enabled in SFR SHADER OPT.
Each line of the file has a pair of d3dhash and opt flag value, i.e., d3dhash=0xec099c1a087c4c0e,opt=0x9.


Default values for this setting:
DEFAULT:    (null)

------------------------------------------------------------
SHADERMAXCTAPERSM
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies max cta count per sm when compiling/optimizing a shader

MIN  (= 0x00000000)
MAX  (= 0x000000ff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
SHADERMAXREGALLOWED
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specifies max register allowed when compiling/optimizing a shader

MIN  (= 0x00000000)
MAX  (= 0x00000400)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
SHADERMAXREGALLOWED HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Restrict SHADERMAXREGALLOWED to be applied only to this app hash


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
SHADERMAXREGALLOWED TYPES
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Specifies which shader types SHADERMAXREGALLOWED gets applied to

VERTEX SHADER    (= 0x00000001)
HULL SHADER      (= 0x00000002)
DOMAIN SHADER    (= 0x00000004)
GEOMETRY SHADER  (= 0x00000008)
PIXEL SHADER     (= 0x00000010)
COMPUTE SHADER   (= 0x00000020)

Default values for this setting:
DEFAULT:    0x0000003F
	VERTEX SHADER                           
	HULL SHADER                             
	DOMAIN SHADER                           
	GEOMETRY SHADER                         
	PIXEL SHADER                            
	COMPUTE SHADER                          

------------------------------------------------------------
SHADERSCHEDULEOLDEST
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x67287452)  // ROUND ROBIN
ON, 1, TRUE, ENABLED     (= 0x39581020)  // OLDEST THREAD FIRST

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
SHADER HEAP WDDM2 DX1X MULTIBLOCK ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

to use the shader heap multiblock allocation with reserved VA. This will affect Dx1x on Win10+ (Dx12 is hardcoded enabled). When this is set to OFF it fallbacks to resize/grow ShaderHeap (used on win7/8), Will work only on debug & develop drivers. This is designed for Volta since Volta require shader VA unlike offset in older chips and older ShaderHeap resize/grow would preserve offset but change VA. If you want to avoid multiple allocation ( Dx11 / Dx12 ) use big enough size of ShaderHeap so grow can be avoided. (FERMI SHADER HEAP SIZE)

OFF, 0, FALSE, DISABLED  (= 0x00000000)  //  
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Use default

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
SHADER HEAP WDDM2 MULTIBLOCK RESERVE VA SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the amount of VA space in bytes reserved for the shader heap (must be in multiple of 64kb). This is only on Win10+ for Dx1X & Dx12 ( Dx1X requires SHADER HEAP MULTIBLOCK ENABLE ). There are separate default enums for DX11 and DX12 (DX12 requires additional space for DXR shaders) which should be selected at runtime

DEFAULT DX11  (= 0x10000000)  // DX11 Default Size (256MB)
DEFAULT DX12  (= 0x20000000)  // DX12 Default Size (512MB)

Default values for this setting:
DEFAULT:    DEFAULT DX11

------------------------------------------------------------
SHADOWPLAY BLACK LIST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Prohibit ShadowPlay shim in DX apps

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // off
ON, 1, TRUE, ENABLED     (= 0x00000001)  // on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SHADOWPLAY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

ShadowPlay Flags. Bit0: if set, app is whitelisted for Desktop capture . Other bits are ununsed for now


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
SHARPEN ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Empowers an app profile to opt in or opt out of the Sharpen filter.  Default for OpenGL is to be allowed.  Default for dx9/dx11/dx12 is to disable sharpening.  If Optimus Profile designates the current app, to run on the discrete GPU, then sharpen will be allowed.

DISALLOWED, 0, OFF, DISABLED  (= 0x00000000)  // Sharpen is not allowed
OPENGL ALLOWED                (= 0x00000001)  // Sharpen is allowed for OpenGL, value fits in one bit
DX9 ALLOWED                   (= 0x00000002)  // Sharpen is allowed for DX9
DX11 ALLOWED                  (= 0x00000004)  // Sharpen is allowed for DX11
DX12 ALLOWED                  (= 0x00000008)  // Sharpen is allowed for DX12
ALLOWED                       (= 0x0000000f)  // Sharpen is allowed for DX9, DX11, DX12, and OPENGL

Default values for this setting:
DEFAULT:    OPENGL ALLOWED

------------------------------------------------------------
SHARPEN ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable Sharpening Shim.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SHARPEN IGNORE FILM GRAIN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the denoising factor for sharpening filter (Range 0-100).

MIN  (= 0x00000000)
MAX  (= 0x000000ff)

Default values for this setting:
DEFAULT:    0x00000011

------------------------------------------------------------
SHARPEN INDICATOR ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable Sharpening Shim indicator.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SHARPEN VALUE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Defines the sharpening value for sharpening filter (Range 0-100).

MIN  (= 0x00000000)
MAX  (= 0x000000ff)

Default values for this setting:
DEFAULT:    0x00000032

------------------------------------------------------------
SHIM FAILURE INJECTION CALLBACKS
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Select callbacks to fail.

DISABLED       (= 0x0000000000000000)  // Don't fail any callbacks
ALLOCATE       (= 0x0000000000000001)  // Enable failure in allocate
RENDER         (= 0x0000000000000002)  // Enable failure in render
LOCK           (= 0x0000000000000004)  // Enable failure in lock
CREATECONTEXT  (= 0x0000000000000008)  // Enable failure in createContext
MAKERESIDENT   (= 0x0000000000000010)  // Enable failure in makeResident

Default values for this setting:
DEFAULT:    ALLOCATE |
	RENDER                                   |
	LOCK                                     |
	CREATECONTEXT                            |
	MAKERESIDENT                             |
	0xFFFFFFFFFFFFFFE0

------------------------------------------------------------
SHIM FAILURE INJECTION ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable shim to inject failures in callbacks during device creation

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable the failure injection shim
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable the failure injection shim

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SHIM FAILURE INJECTION FAILURE POINT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Fail selected callbacks starting at this callback count during device creation.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SHIM IGPU TRANSCODING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

iGPU transcoding

DISABLE  (= 0x00000000)
ENABLE   (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
SHIM MAGAPI ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable Magnification API shim layer

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable the Magnification API shim
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable the Magnification API shim

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SHIM MAXRES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum resolution we are going to allow for a given application


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SHIM MCCOMPAT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

allow list for shim layer

INTEGRATED     (= 0x00000000)  // Run on IGPU
ENABLE         (= 0x00000001)  // Run on DGPU
USER EDITABLE  (= 0x00000002)  // ReadOnly Profile a.k.a. NOT user editable a.k.a. SHIM RENDERING OPTIONS NAMESPACE::IGNORE OVERRIDES
MASK           (= 0x00000003)  // ENABLE|USER EDITABLE
VIDEO MASK     (= 0x00000004)  // Video bit.
VARYING BIT    (= 0x00000008)  // Varying behavior. Behavior is different based on type of app/platform
AUTO SELECT    (= 0x00000010)  // In Global Setting this means AutoSelect. In per-app setting, this means use Global Setting.
OVERRIDE BIT   (= 0x80000000)

Default values for this setting:
DEFAULT:    0x00000010
	INTEGRATED                              
	INTEGRATED                              
	AUTO SELECT                             

------------------------------------------------------------
SHIM PASSTHRU ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SHIM RENDERING MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Allow list for shim layer per application

INTEGRATED     (= 0x00000000)  // Run on IGPU
ENABLE         (= 0x00000001)  // Run on DGPU
USER EDITABLE  (= 0x00000002)  // ReadOnly Profile a.k.a. NOT user editable a.k.a. SHIM RENDERING OPTIONS NAMESPACE::IGNORE OVERRIDES
MASK           (= 0x00000003)  // ENABLE|USER EDITABLE
VIDEO MASK     (= 0x00000004)  // Video bit.
VARYING BIT    (= 0x00000008)  // Varying behavior. Behavior is different based on type of app/platform
AUTO SELECT    (= 0x00000010)  // In Global Setting this means AutoSelect. In per-app setting, this means use Global Setting.
OVERRIDE BIT   (= 0x80000000)

Default values for this setting:
DEFAULT:    0x00000010
	INTEGRATED                              
	INTEGRATED                              
	AUTO SELECT                             

------------------------------------------------------------
SHIM RENDERING OPTIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Rendering Mode Options for shim layer per application

DEFAULT RENDERING MODE               (= 0x00000000)  // No overrides for Shim rendering methods
DISABLE ASYNC PRESENT                (= 0x00000001)  // Disable Async Presents (for video apps on DX shim to begin with)
EHSHELL DETECT                       (= 0x00000002)  // Video shim - specific, detect App as WMC, use customized present path
FLASHPLAYER HOST DETECT              (= 0x00000004)  // Video shim - specific, App can use flash, use customized present path
VIDEO DRM APP DETECT                 (= 0x00000008)  // Video DRM app detected
IGNORE OVERRIDES                     (= 0x00000010)  // Ignore Right-click Overrides for this app
RESERVED1                            (= 0x00000020)  // Reserved1
ENABLE DWM ASYNC PRESENT             (= 0x00000040)  // Enable async present for DWM ON desktop scheme
RESERVED2                            (= 0x00000080)  // Reserved2
ALLOW INHERITANCE                    (= 0x00000100)  // Benchmarks or Test suites that launch other standalone apps but with the suite's GPU Preference
DISABLE WRAPPERS                     (= 0x00000200)  // Disable all wrappers
DISABLE DXGI WRAPPERS                (= 0x00000400)  // Disable DXGI wrappers
PRUNE UNSUPPORTED FORMATS            (= 0x00000800)  // Prune NV formats unsupported on intel
ENABLE ALPHA FORMAT                  (= 0x00001000)  // Replace X8R8G8B8 with A8R8G8B8 for autocad application group
IGPU TRANSCODING                     (= 0x00002000)  // Enable IGPU Transcoding
DISABLE CUDA                         (= 0x00004000)  // Disable CUDA
ALLOW CP CAPS FOR VIDEO              (= 0x00008000)  // Allow UMD Shim to return Content Protection Caps for video playback
IGPU TRANSCODING FWD OPTIMUS         (= 0x00010000)  // Enable IGPU Transcoding on FWD Optimus configs only
DISABLE DURING SECURE BOOT           (= 0x00020000)  // Disable this app (force to iGPU) if booting in secure boot mode with incompatible drivers
INVERT FOR QUADRO                    (= 0x00040000)  // Used only by CPL to allow app run on the DGPU when it detects Quadro GPU. (used for MobileMark2012)
INVERT FOR MSHYBRID                  (= 0x00080000)  // Used only by CPL to invert suggested GPU for an app between MSHybrid and NV Optimus
REGISTER PROCESS ENABLE GOLD         (= 0x00100000)  // Identifies if the given app doesn't need to turn on dGPU for its entire lifetime (but it might use it for querying, e.g. fmsiscan.exe)
HANDLE WINDOWED MODE PERF OPT        (= 0x00200000)  // Handle Windowed mode perf optimization of creating alternate back buffer to avoid corruption due to app bugs
HANDLE WIN7 ASYNC RUNTIME BUG        (= 0x00400000)  // Disable Async Presents on Win7 Only to hide a Dx10 runtime bug
EXPLICIT ADAPTER OPTED BY APP        (= 0x00800000)  // Explicit Adapter opted by App for rendering
ALLOW DYNAMIC DISPLAY MUX SWITCH     (= 0x01000000)  // Allow Dynamic Display Mux switch from IGPU to dGPU for this app
DISALLOW DYNAMIC DISPLAY MUX SWITCH  (= 0x02000000)  // Dis-allow Dynamic Display Mux switch from IGPU to dGPU for this app
DISABLE TURING POWER POLICY          (= 0x04000000)  // Disable Turing Power Policy for apps like SearchUI.exe, Desktop Components or some OEMs apps which hampers Laptop Battery Life due to keeping GPU ON for app's lifetime

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT RENDERING MODE                  

------------------------------------------------------------
SHOW OPTIMUS OVERLAY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SILK BUFFER POLICY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

For Silk - Specify policy for latency buffer management

DIVISOR MASK          (= 0x0000000f)  // Divide the differnce by this value for fill/drain
ADJUST A MS2 MASK     (= 0x000000f0)  // Start adjust when A * 0.5 milliseconds away from target
ADJUST A MS2 SHIFT    (= 0x00000004)
AVG FRAMES MASK       (= 0x0000ff00)  // Number of frames to average render time
AVG FRAMES SHIFT      (= 0x00000008)
MAX ADJUST MS MASK    (= 0x000f0000)  // Max adjust time in milliseconds
MAX ADJUST MS SHIFT   (= 0x00000010)
MAX DELAY 10MS MASK   (= 0x00f00000)  // Max delay in 10 milliseconds
MAX DELAY 10MS SHIFT  (= 0x00000014)
LATENCY MS MASK       (= 0xff000000)  // Latency target in milliseconds
LATENCY MS SHIFT      (= 0x00000018)
DEFAULT4              (= 0x19a40824)  // 25ms, 100ms, 4ms, 8 frames, 1ms, div 4

Default values for this setting:
DEFAULT:    0x19A40824
	ADJUST A MS2 SHIFT                      
	0x19A40820

------------------------------------------------------------
SILK LOG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables silk logging and test options

DISABLED, OFF, 0  (= 0x00000000)  // Disable Silk logging
ENABLED, ON, 1    (= 0x00000001)  // Enable Silk logging
VSYNC ON ALT      (= 0x00000002)  // Enable alternate VSYNC ON

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
SILK SMOOTHNESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Silk reduces stutters in games caused by variable CPU or GPU workloads 

LOW     (= 0x00000000)  // Low
MEDIUM  (= 0x00000001)  // Medium
HIGH    (= 0x00000002)  // High
ULTRA   (= 0x00000003)  // Ultra
OFF     (= 0x00000004)  // Off

Default values for this setting:
DEFAULT:    LOW

------------------------------------------------------------
SILK SMOOTHNESS ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Setting from which CPL will decide whether to show SILK Smoothness as normal or greyed out

DISABLED, OFF  (= 0x00000000)  // SILK Smoothness is not supported
ENABLED, ON    (= 0x00000001)  // SILK Smoothness is supported

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
SLI2 MODE10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

multichip mode for DX10 apps for new gpus (like TU+)

USE MCCOMPAT                     (= 0x00000000)  // the default value when no sli mode is set.
FORCE 2AFR                       (= 0x00000001)  // force 2-AFR rendering mode for this app
FORCE SFR                        (= 0x00000002)  // force SFR rendering mode for this app
FORCE AFR OF SFR  FALLBACK 2AFR  (= 0x00000003)  // force 2-AFR on 2-way and 3-way, AFR OF SFR on 4-way
DISABLE SLI                      (= 0x00000004)  // disable SLI mode entirely
FORCE 4AFR                       (= 0x00000005)  // force N-way AFR on N-way system
FORCE 3AFR                       (= 0x00000006)  // force 2-AFR on 2-way system and 3-AFR on N-way
FORCE AFR OF SFR  FALLBACK 3AFR  (= 0x00000007)  // force 2-AFR on 2-way system, 3-AFR on 3-way, AFR OF SFR on 4-way
SLI MODE MASK                    (= 0x00000007)  //  --- not a value. This is a mask to select sli mode enum field
OVERRIDE BIT                     (= 0x80000000)  // makes the global profile override app's profile

Default values for this setting:
DEFAULT:    0x00000000
	USE MCCOMPAT                            
	USE MCCOMPAT                            

------------------------------------------------------------
SLI2 MODE12
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

multichip mode for DX12 apps for new gpus (like TU+)

USE MCCOMPAT                     (= 0x00000000)  // the default value when no sli mode is set
FORCE 2AFR                       (= 0x00000001)  // force 2-AFR rendering mode for this app
FORCE SFR                        (= 0x00000002)  // force SFR rendering mode for this app
FORCE AFR OF SFR  FALLBACK 2AFR  (= 0x00000003)  // force 2-AFR on 2-way and 3-way, AFR OF SFR on 4-way
DISABLE SLI                      (= 0x00000004)  // disable SLI mode entirely
FORCE 4AFR                       (= 0x00000005)  // force N-way AFR on N-way system
FORCE 3AFR                       (= 0x00000006)  // force 2-AFR on 2-way system and 3-AFR on N-way
SLI MODE MASK                    (= 0x00000007)  //  --- not a value. This is a mask to select sli mode enum field
FORCE AFR OF SFR  FALLBACK 3AFR  (= 0x00000007)  // force 2-AFR on 2-way system, 3-AFR on 3-way, AFR OF SFR on 4-way
OVERRIDE BIT                     (= 0x80000000)  // makes the global profile override app's profile

Default values for this setting:
DEFAULT:    0x00000000
	USE MCCOMPAT                            
	USE MCCOMPAT                            

------------------------------------------------------------
SLILOG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0x00000000)
MAX  (= 0x00000400)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
SLILOG APP FILTER
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If specified, SLI logs will only be generated for the app .exe in this key.


Default values for this setting:
DEFAULT:    (null)

------------------------------------------------------------
SLILOG CONSOLE TO FILE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Force all console output to go to a file

OFF, 0, FALSE, DISABLED  (= 0x00000001)  // usual behaviour (console output goes to console, file output goes to file)
ON, 1, TRUE, ENABLED     (= 0x00000000)  // console output goes to file, file output does not go anywhere

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SLILOG FILE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Name for the file which will be used for dumping SLI log


Default values for this setting:
DEFAULT:    (null)

------------------------------------------------------------
SLILOG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLE              (= 0x00000000)  // Disable Stall Times Logs
ENABLE 3D TS         (= 0x00000001)  // Log Stall Times for 3D
ENABLE CE TS         (= 0x00000002)  // Log Stall Times for CE
ENABLE BEGIN END TS  (= 0x00000004)  // Log begin and end timestamps for transfers
ENABLE WAIT TS       (= 0x00000008)  // Log wait times for transfers

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
SLILOG SINGLE GPU
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

SLI log emulation on single GPU. Available only when real SLI is off.

OFF0  (= 0x00000000)  // SLI emulation disabled
OFF1  (= 0x00000001)  // SLI emulation disabled
2WAY  (= 0x00000002)  // Emulate 2-way SLI
3WAY  (= 0x00000003)  // Emulate 3-way SLI
4WAY  (= 0x00000004)  // Emulate 4-way SLI

Default values for this setting:
DEFAULT:    OFF0

------------------------------------------------------------
SLIMOSAIC CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control strategies used to improve Mosaic and Surround performance

ALLOW ALL                      (= 0x00000000)  // Allow all performance strategies
DISABLE TWOD                   (= 0x00000001)  // Disable TwoD engine local transfers optimization
FORCE BAR1 WAR                 (= 0x80000000)  // Always request aliasing for DX9 primaries
DISABLE CAN VECTORIZE TRACKER  (= 0x00000002)  // Disable CanVectorizeTracker
DISABLE CE TRANSFER 2WAY       (= 0x00000004)  // Disable CE transfer on 2 way systems
DISABLE CE TRANSFER 3WAY       (= 0x00000010)  // Disable CE transfer on 3 way systems
DISABLE CE TRANSFER 4WAY       (= 0x00000020)  // Disable CE transfer on 4 way systems
UNICAST CE TRANSFER 2WAY       (= 0x00000040)  // Use unicast CE transfer on 2 way systems
UNICAST CE TRANSFER 3WAY       (= 0x00000100)  // Use unicast CE transfer on 3 way systems
UNICAST CE TRANSFER 4WAY       (= 0x00000200)  // Use unicast CE transfer on 4 way systems
SYNC PRESENT CHANNELS          (= 0x00000800)  // Synchronize present channels before present
DISABLE VIDEO BRIDGE           (= 0x00001000)  // Prevents Video Bridge use in GP10x
DISABLE FLIPEX BC TRANSITION   (= 0x00002000)  // Allow FlipEx applications to run in AFR even when in composition mode

Default values for this setting:
DEFAULT:    0x00000000
	ALLOW ALL                               

------------------------------------------------------------
SLIVIDEO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x51661620)
ON, 1, TRUE, ENABLED     (= 0x60792907)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SLI BRIDGELESS OPTIMIZATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Control optimization of bridgeless SLI using extra primary and async copy engine

AUTO SELECT                    (= 0x00000001)  // Allow the driver to take decision
FORCE ON                       (= 0x00000002)  // Enforce bridgeless mode (even on bridged configs)
FORCE OFF                      (= 0x00000004)  // Disable bridgeless optimization (even on supported configs)
SHOW INDICATOR                 (= 0x00000008)  // Enable Indicator for bridgeless SLI optimization
DISABLE CHANNEL PRESENT COPY   (= 0x00000010)  // Disables usage CHANNEL PRESENT COPY for SLI present transfers optimization
DISABLE FLEXI PRESENT CHANNEL  (= 0x00000020)  // Disables switching between CHANNEL PRESENT COPY and CHANNEL ASYNC COPY for present transfers
COPY ON 3D FOR EXPLICIT DX12   (= 0x00000040)  // Use 3D engine for frame transfer in explicit Dx12 (default is CE)
USE MOSAIC SCANOUT OFFSET      (= 0x00000080)  // For scanout composition, use the legacy mosaic escape to get the offset for present transfers

Default values for this setting:
DEFAULT:    AUTO SELECT

------------------------------------------------------------
SLI ENABLE EARLY PUSH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Key to enable/disable early push

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
SLI GPU COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

User visible exposed number of GPUs to use on SLI

AUTOSELECT  (= 0x00000000)  // The default mode, the driver will pick what's best
ONE         (= 0x00000001)  // Use a single GPU
TWO         (= 0x00000002)  // Use 2 GPUs
THREE       (= 0x00000003)  // Use 3 GPUs
FOUR        (= 0x00000004)  // Use 4 GPUs

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
SLI PREDEFINED GPU COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Setting to indicate in the Control Panel how many GPUs to use by default on this SLI profile

AUTOSELECT  (= 0x00000000)  // The default mode, the driver will pick what's best
ONE         (= 0x00000001)  // Use a single GPU
TWO         (= 0x00000002)  // Use 2 GPUs
THREE       (= 0x00000003)  // Use 3 GPUs
FOUR        (= 0x00000004)  // Use 4 GPUs

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
SLI PREDEFINED GPU COUNT DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Setting to indicate in the Control Panel how many GPUs to use by default on this SLI profile on DirectX10

AUTOSELECT  (= 0x00000000)  // The default mode, the driver will pick what's best
ONE         (= 0x00000001)  // Use a single GPU
TWO         (= 0x00000002)  // Use 2 GPUs
THREE       (= 0x00000003)  // Use 3 GPUs
FOUR        (= 0x00000004)  // Use 4 GPUs

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
SLI PREDEFINED MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Setting to indicate in the Control Panel which SLI mode is active by default

AUTOSELECT                       (= 0x00000000)  // The default mode, the driver will pick what's best
FORCE SINGLE                     (= 0x00000001)  // Force the driver to use Single mode
FORCE AFR                        (= 0x00000002)  // Force AFR mode
FORCE AFR2                       (= 0x00000003)  // Special AFR mode
FORCE SFR                        (= 0x00000004)  // Deprecated SFR mode
FORCE AFR OF SFR  FALLBACK 3AFR  (= 0x00000005)  // For 4-Way systems, combined mode

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
SLI PREDEFINED MODE DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Setting to indicate in the Control Panel which SLI mode is active by default on DirectX 10

AUTOSELECT                       (= 0x00000000)  // The default mode, the driver will pick what's best
FORCE SINGLE                     (= 0x00000001)  // Force the driver to use Single mode
FORCE AFR                        (= 0x00000002)  // Force AFR mode
FORCE AFR2                       (= 0x00000003)  // Special AFR mode
FORCE SFR                        (= 0x00000004)  // Deprecated SFR mode
FORCE AFR OF SFR  FALLBACK 3AFR  (= 0x00000005)  // For 4-Way systems, combined mode

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
SLI RENDERING MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

User visible exposed SLI Modes

AUTOSELECT                       (= 0x00000000)  // The default mode, the driver will pick what's best
FORCE SINGLE                     (= 0x00000001)  // Force the driver to use Single mode
FORCE AFR                        (= 0x00000002)  // Force AFR mode
FORCE AFR2                       (= 0x00000003)  // Special AFR mode
FORCE SFR                        (= 0x00000004)  // Deprecated SFR mode
FORCE AFR OF SFR  FALLBACK 3AFR  (= 0x00000005)  // For 4-Way systems, combined mode

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
SLI TIMESTAMP FRAME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If > 0, will dump GPU timestamps for specified frame to file specified by SLILOG FILE


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SPLIT ADAPTER RENDER DEVICE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SPM SHADER EXCEPTIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Allow enabling/disabling of the SPM exceptions

ENABLE                         (= 0x00000001)  // Enable reporting of exceptions (api visible exceptions can be masked with other bits)
ENABLE API ILLEGAL EXCEPTIONS  (= 0x00000002)  // Enable reporting of recoverable exceptions which are illegal in api
ENABLE API LEGAL EXCEPTIONS    (= 0x00000004)  // Enable reporting of api legal exceptions (like out of bound accesses)
DISABLE TEX FORMAT EXCEPTIONS  (= 0x00000008)  // Disable reporting of Tex Format exceptions.  Generally not recommended.  Available Volta+
DISABLE TEX LAYOUT EXCEPTIONS  (= 0x00000010)  // Disable reporting of Tex Layout exceptions.  Generally not recommended.  Available Volta+

------------------------------------------------------------
SPOOFARCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

GK104  (= 0x000000e0)  // KEPLER - GK104. Supported on Vista with Fermi/Kepler GPU
GM108  (= 0x00000110)  // MAXWELL - GM108. Supported on win7 with Kepler GPU
GM204  (= 0x00000120)  // MAXWELL - GM204. Supported on win7 with Maxwell GPU
GP100  (= 0x00000130)  // PASCAL - GP100. Supported on win7 with Maxwell GPU
GV100  (= 0x00000140)  // VOLTA - GV100. Supported on win7 with Maxwell GPU
TU102  (= 0x00000150)  // TURING - TU102. Supported on win7 with Maxwell GPU
GA100  (= 0x00000160)  // AMPERE - GA100. Supported on win7 with Maxwell GPU
GA102  (= 0x00000170)  // AMPERE - GA102. Supported on win10 with Turing/AmpereA GPU
AD102  (= 0x00000180)  // ADA - AD102. Supported on win10 with AmpereA/AmpereB
GH100  (= 0x00000190)  // HOPPER - GH100. Supported on win10 with AmpereA/AmpereB GPU

------------------------------------------------------------
SQUASHWENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x61657714)
ON, 1, TRUE, ENABLED     (= 0x40011596)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
STAGING CACHE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Map() of staging buffer without DISCARD or NO OVERWRITE is a problem unless we can map cached copy.  Smaller values can cause uncached maps to stall but larger values incur lots of memcpy() overhead.  Testing has found 8kb to be a sensible tradeoff (Outlook in sensitive to larger values). SLI uses a minimum value of 4mb.

MIN  (= 0x00000000)
MAX  (= 0x01000001)

Default values for this setting:
DEFAULT:    0x00020000

------------------------------------------------------------
STENCIL CRITERION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO 2DDCONVERGENCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO 2DDHUDSETTINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO 2DD NOTES
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO ALLOWNONEXCLUSIVESTEREO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO API
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO AUTOCONVERGENCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO AUTOCONVERGENCEADJUSTPACE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO COMPAREEYES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO COMPAREFROM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO COMPAT
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO CONFIG
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO CUTOFFFARDEPTHLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO CUTOFFFARDEPTHMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO CUTOFFNEARDEPTHLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO CUTOFFNEARDEPTHMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO CUTOFFSTEPLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO CUTOFFSTEPMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO D
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DATE REL
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DELAYEDSTEREODESKTOP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DELAYED BY PRESENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DELETECONFIG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DEVELOPER
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DEVELOPER ISSUES
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DISABLEONOUTOFMEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DISABLE 2DD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DISCARDHOTKEYS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DX10DSCBNUMBER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DX10VSCBNUMBER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO DX10VSCBNUMBER DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO D EXE NAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO ENABLECE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO ENABLECONSUMERSTEREOSUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO ENABLEPARTIALSTEREOBLIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO FAVORSZ
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO FRUSTUMADJUSTMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO FRUSTUMADJUSTMODE DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO FRUSTUMADJUSTMODE DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GAMECONFIGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GAMESPECIFIC0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GAME ISSUES
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GAME ISSUE CODES
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GAME RELEASE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GAME SETTINGS
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GAMMAADJUSTLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GAMMAADJUSTMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GLASSESDELAYMINUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GLASSESDELAYPLUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO GLASSESSWITCHDELAY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO HOTKEY FRUSTUMADJUSTMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO INGAMELASERSIGHT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO INGAMELASERSIGHTDX9STATES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO INGAMELASERSIGHT DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO INGAMELASERSIGHT DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO INTERLEAVEPATTERN0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO INTERLEAVEPATTERN1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERADJUSTXMINUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERADJUSTXPLUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERADJUSTYMINUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERADJUSTYPLUS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERSIGHT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERSIGHTENABLED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERSIGHTFILE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERSIGHTINDEX
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERSIGHTPROPERTY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERSIGHTTRIGGER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERSIGHT DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERSIGHT DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERXADJUST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERYADJUST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LASERZADJUST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LEFTANAGLYPHFILTER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LEFTCOLORFILTER0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LEFTCOLORFILTER1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LINECODECOLOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO LINK0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO MAXMONITORSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO MAXVERTEXCOUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO MCCOMPAT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

LEGACY        (= 0x00000001)
BROADCAST     (= 0x00000002)
DISABLE SLI   (= 0x00000004)
MASK          (= 0x00000007)  // LEGACY|BROADCAST|DISABLE SLI
OVERRIDE BIT  (= 0x80000000)

Default values for this setting:
DEFAULT:    0x00000004
	DISABLE SLI                             

------------------------------------------------------------
STEREO MEDIAPLAYER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO MIXEDTNL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO MODESETWARNING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO MONITORSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO NOLOCKSUBSTITUTE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO OCULUS HT POSITION SENSITIVITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO OCULUS HT SENSITIVITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO OCULUS SCALE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO OCULUS SETTINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO OPENGL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO P1SH0
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO PARTIALCLEARMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO PREF
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO PSH0
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO PUBLISHER
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO PUSHBUFSUBSTITUTESIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO R
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHW2DDETECTIONMIN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWATSCREENLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWATSCREENMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWEQUALATSCREEN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWGREATERATSCREEN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWINF
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWINF DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWINF DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWLESSATSCREEN
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWLESSATSCREENLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWLESSATSCREENMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWSCR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWSCR DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RHWSCR DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RIGHTANAGLYPHFILTER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RIGHTCOLORFILTER0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RIGHTCOLORFILTER1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO RUNTIMENAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO R EXE NAME
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO SAVESTEREOIMAGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO SHARPVPI
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO SHOWALLVIEWERTYPES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO SNAPSHOTQUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STARTZBIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOADJUSTENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCOLORKEY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCOMPATIBILITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCONVERGENCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCONVERGENCEADJUSTLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCONVERGENCEADJUSTMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCONVERGENCEMULTIPLIER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCONVERGENCE DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCONVERGENCE DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCUTOFF
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCUTOFFDEPTHFAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCUTOFFDEPTHNEAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCUTOFFDEPTHNEAR DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCUTOFFDEPTHNEAR DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCUTOFF DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOCUTOFF DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREODEFAULTON
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREODISABLEASYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREODISABLETNL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREODX9
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOEASYZCHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOENABLESTEREOCURSOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOEPSILON
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOFIRSTTIME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOFLAGSDX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOFORCEVSYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOGAMMA
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOHIDDENPROFILE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOHORIZONTALADJUSTLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOHORIZONTALADJUSTMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOIMAGETYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOLASERSIGHTCOUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOLASERSIGHTMAXCOUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOLCDPATTERNTYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOLINKDLL
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOLOGSHADERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOMEMOENABLED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOMISCFLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOMSGVERTICALOFFSET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREONODEPTHOVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREONOTSUPPORTED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOORTHOENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOOSDENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOPOINTER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOPROFILE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOREFRESHDEFAULTON
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOREFRESHRATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOSEPARATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOSEPARATIONADJUSTLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOSEPARATIONADJUSTMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOSEPARATIONSTEP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOSHADERMATRIXCHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOSTRICTLSCHECK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOSUGGESTSETTINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOTEXTUREENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOTEXTUREENABLE DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOTEXTUREENABLE DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOTOGGLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOTRANSFORMATIONTYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOUNSUGGESTSETTINGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOUSEMATRIX
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOVERTICALADJUSTLESS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOVERTICALADJUSTMORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOVIEWER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOVIEWERTYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOVRCONVERGENCEBIAS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOVRCONVERGENCEBIAS DX10
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOVRCONVERGENCEBIAS DX11
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOVRREFRESHRATEOVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STEREOVRVSYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

VR VSYNC ON               (= 0x00000001)
VR VSYNC OFF              (= 0x00000000)
VR VSYNC GAME CONTROLLED  (= 0x00000002)

------------------------------------------------------------
STEREO STEREOWINDOWEDENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO STYLE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO TIME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO TOGGLEAUTOCONVERGENCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO TOGGLEAUTOCONVERGENCERESTORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO TOGGLELASERSIGHT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO TOGGLEMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO V1SH0
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VALUE
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VR EXCLUSIVITY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Flags related to VR Support

OFF, DESKTOP ONLY APP, 0                     (= 0x00000000)  // Default value. Used for all non-VR (Desktop-only) apps.
VR ONLY APP, 1                               (= 0x00000001)  // For VR-only apps. This will blacklist the app for Stereo (3D Vision). NOTE: This bit is MUTUALLY EXCLUSIVE with DESKTOP VR DUAL MODE APP and VR RUNTIME COMPONENT and STEREO VR APP.
DESKTOP VR DUAL MODE APP, 2                  (= 0x00000002)  // For apps that have both - VR and Desktop Mode. NOTE: This bit is MUTUALLY EXCLUSIVE with VR ONLY APP and VR RUNTIME COMPONENT.
VR RUNTIME COMPONENT, 4                      (= 0x00000004)  // For executables that are part of a VR Runtime. NOTE: This bit is MUTUALLY EXCLUSIVE with DESKTOP ONLY APP and DESKTOP VR DUAL MODE APP and STEREO VR APP.
DESKTOP STEREO APP WITH ADDED VR SUPPORT, 8  (= 0x00000008)  // For executables those do not want to block NV Stereo while running in VR enviornment. NOTE: This bit is MUTUALLY EXCLUSIVE with VR RUNTIME COMPONENT and VR ONLY APP.

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
STEREO VSH0
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH1
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH10
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH2
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH3
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH4
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH5
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH6
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH7
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH8
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO VSH9
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO WATCHDOG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO WIN MODE IN SURROUND
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

NV private interface to enable/disable windowed mode Stereo in Surround

OFF                      (= 0x00000000)  // No windowed mode Stereo in Surround
ENABLE DX10 SINGLE MODE  (= 0x00000100)  // DX10/11 in MC SINGLE MODE mode
ENABLE DX10 BROADCAST    (= 0x00000200)  // DX10/11 in BROADCAST SLI mode (2 GPUs)
ENABLE MASK DX10         (= 0x0000ff00)  // DX10/11 enabled mode

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
STEREO WRITECONFIG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO ZDIRECTION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO ZINF
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO ZSCR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
STEREO  VERSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
SUBCH3D INLINE UPLOADS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable inline uploads in 3D sub-channel

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
SUPPRESS ASSERTS IN AUTOMATION
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Used for suppressing assert which indicates a problem in test/runtime which can't be fixed in the driver and needs to be suppressed to allow the test to run further in automation instead of crashing.

SUPPRESS ASSERT RS1  (= 0x00000001)  // suppress assert on RS1 so that the test continues to run in automation without crashing
SUPPRESS ASSERT RS2  (= 0x00000002)  // suppress assert on RS2 so that the test continues to run in automation without crashing
SUPPRESS ASSERT ALL  (= 0x00000004)  // suppress assert on all so that the test continues to run in automation without crashing

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SUPPRESS MSEDGE ASSERTS IN AUTOMATION
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG)
You may only assign it to one of the names listed below.

Used for suppressing msedge asserts in automation.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
SURFACEDUMPMAXRANGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify the upper range of Draw Call no. for dumping the surface


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SURFACEDUMPMINRANGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify the lower range of Draw Call no for dumping the surface.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SURFACEDUMPMODULO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

To dump every nth draw or present call


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SURFACEFORMATSDX7
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

BASIC       (= 0x10000000)
BUMPMAP     (= 0x20000000)
FLOAT       (= 0x01000000)
DXT         (= 0x04000000)
PALETTIZED  (= 0x08000000)
HILO        (= 0x00200000)
RGBG        (= 0x00400000)
HEMI        (= 0x00800000)
YUV         (= 0x00010000)
ZETA        (= 0x00040000)
CONTROL     (= 0x00080000)
MISC        (= 0x00001000)
NVYX        (= 0x00000800)
ATI         (= 0x00000400)
RAWZ        (= 0x00000200)
INTZ        (= 0x00000100)

------------------------------------------------------------
SURFACEFORMATSDX8
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

BASIC       (= 0x10000000)
BUMPMAP     (= 0x20000000)
FLOAT       (= 0x01000000)
DXT         (= 0x04000000)
PALETTIZED  (= 0x08000000)
HILO        (= 0x00200000)
RGBG        (= 0x00400000)
HEMI        (= 0x00800000)
YUV         (= 0x00010000)
ZETA        (= 0x00040000)
CONTROL     (= 0x00080000)
MISC        (= 0x00001000)
NVYX        (= 0x00000800)
ATI         (= 0x00000400)
RAWZ        (= 0x00000200)
INTZ        (= 0x00000100)

------------------------------------------------------------
SURROUND METERED FRAMES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control how many frames are allowed to be delayed for flip metering in surround, each digit correspond to 2 (bits 3:0) / 3 (bits 6:4) / 4 (bits 11:8) way


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
SYSMEMCACHEDCOPYBEHAVIOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This key is changing sysmem cached copy behavior

DISALLOW                                 (= 0x00000000)  // Disable sysmem caching for textures
ALLOW FOR TEXTURES WITHOUT SUBRESOURCES  (= 0x00000001)  // Allow for textures witout subresources only (default)
ALLOW FOR TEXTURES WITH SUBRESOURCES     (= 0x00000002)  // Allow for textures with mips

Default values for this setting:
DEFAULT:    0x00000001
	ALLOW FOR TEXTURES WITHOUT SUBRESOURCES 

------------------------------------------------------------
SYSMEMPROMOTION
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Value for NV PLTCG LTCS LTSS TSTG CFG 3, bitfields are copied from dev ltc.h

NO PROMOTE          (= 0x00000000)
ALL PROMOTE MASK    (= 0x00000003)  // 1:0
ALL PROMOTE 64B     (= 0x00000001)
ALL PROMOTE 128B    (= 0x00000002)
HUB PROMOTE MASK    (= 0x0000000c)  // 3:2
HUB PROMOTE 64B     (= 0x00000004)
HUB PROMOTE 128B    (= 0x00000008)
CE PROMOTE MASK     (= 0x00000030)  // 5:4
CE PROMOTE 64B      (= 0x00000010)
CE PROMOTE 128B     (= 0x00000020)
FE PROMOTE MASK     (= 0x000000c0)  // 7:6
FE PROMOTE 64B      (= 0x00000040)
FE PROMOTE 128B     (= 0x00000080)
PD PROMOTE MASK     (= 0x00000300)  // 9:8
PD PROMOTE 64B      (= 0x00000100)
PD PROMOTE 128B     (= 0x00000200)
CTX PROMOTE MASK    (= 0x00000c00)  // 11:10
CTX PROMOTE 64B     (= 0x00000400)
CTX PROMOTE 128B    (= 0x00000800)
SCC PROMOTE MASK    (= 0x00003000)  // 13:12
SCC PROMOTE 64B     (= 0x00001000)
SCC PROMOTE 128B    (= 0x00002000)
L1 PROMOTE MASK     (= 0x00030000)  // 17:16
L1 PROMOTE 64B      (= 0x00010000)
L1 PROMOTE 128B     (= 0x00020000)
T1 PROMOTE MASK     (= 0x000c0000)  // 19:18
T1 PROMOTE 64B      (= 0x00040000)
T1 PROMOTE 128B     (= 0x00080000)
PE PROMOTE MASK     (= 0x00300000)  // 21:20
PE PROMOTE 64B      (= 0x00100000)
PE PROMOTE 128B     (= 0x00200000)
RAST PROMOTE MASK   (= 0x00c00000)  // 23:22
RAST PROMOTE 64B    (= 0x00400000)
RAST PROMOTE 128B   (= 0x00800000)
ROP PROMOTE MASK    (= 0x03000000)  // 25:24
ROP PROMOTE 64B     (= 0x01000000)
ROP PROMOTE 128B    (= 0x02000000)
GCC PROMOTE MASK    (= 0x0c000000)  // 27:26
GCC PROMOTE 64B     (= 0x04000000)
GCC PROMOTE 128B    (= 0x08000000)
GPCCS PROMOTE MASK  (= 0x30000000)  // 29:28
GPCCS PROMOTE 64B   (= 0x10000000)
GPCCS PROMOTE 128B  (= 0x20000000)
PROMOTE MASK ALL    (= 0x3fff3fff)  // ALL PROMOTE MASK | HUB PROMOTE MASK | CE PROMOTE MASK | FE PROMOTE MASK | PD PROMOTE MASK | CTX PROMOTE MASK | SCC PROMOTE MASK | L1 PROMOTE MASK | T1 PROMOTE MASK | PE PROMOTE MASK | RAST PROMOTE MASK | ROP PROMOTE MASK | GCC PROMOTE MASK | GPCCS PROMOTE MASK

------------------------------------------------------------
TC TIMEOUT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets PGRAPH PRI GPCS TC TIMEOUT


Default values for this setting:
DEFAULT:    0x00000080

------------------------------------------------------------
TDR EARLY OUT ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Set this key to TRUE to enable the TDR Early Out mechanism. Use alongside TDR EARLY OUT PERCENTAGE

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
TDR EARLY OUT PERCENTAGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set this to be a value between 0 and 100. Lower value implies lower amount of memory available for AA. Use alongside TDR EARLY OUT ENABLE

MIN  (= 0x00000000)
MAX  (= 0x00000064)

Default values for this setting:
DEFAULT:    MAX

------------------------------------------------------------
TESLAINTERTPCARBITRATIONCONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET INTER TPC ARBITRATION CONTROL method, where bit 0 is ENABLE, bits 11:4 are WAVEFRONT WINDOW SIZE, and bits 19:12 are TEXTURE PHASE WINDOW SIZE

MIN  (= 0x00000000)
MAX  (= 0x000fffff)

------------------------------------------------------------
TESLAOCTVERTICESPERTPC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET OCTVERTICES PER TPC method, bits 7:0 are the value, bit 8 is SWITCH TPC ON FLUSH

MIN  (= 0x00000000)
MAX  (= 0x000001ff)

------------------------------------------------------------
TESLAPSWAIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET PS WAIT method

MIN  (= 0x00000000)  // cause the timeout to expire immediately
MAX  (= 0xffffffff)

------------------------------------------------------------
TESLASHADERPERFCOUNTERCONTROL0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET SHADER PERFORMANCE COUNTER CONTROL(0) method, where bit 0 is EDGE, bits 6:4 are BLOCK, bits 23:8 are FUNC and bits 31:24 are EVENT

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
TESLASHADERPERFCOUNTERCONTROL1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET SHADER PERFORMANCE COUNTER CONTROL(1) method, where bit 0 is EDGE, bits 6:4 are BLOCK, bits 23:8 are FUNC and bits 31:24 are EVENT

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
TESLASHADERPERFCOUNTERCONTROL2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET SHADER PERFORMANCE COUNTER CONTROL(2) method, where bit 0 is EDGE, bits 6:4 are BLOCK, bits 23:8 are FUNC and bits 31:24 are EVENT

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
TESLASHADERPERFCOUNTERCONTROL3
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET SHADER PERFORMANCE COUNTER CONTROL(3) method, where bit 0 is EDGE, bits 6:4 are BLOCK, bits 23:8 are FUNC and bits 31:24 are EVENT

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
TESLASHADERPERFCOUNTERVALUE0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET SHADER PERFORMANCE COUNTER VALUE(0) method

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
TESLASHADERPERFCOUNTERVALUE1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET SHADER PERFORMANCE COUNTER VALUE(1) method

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
TESLASHADERPERFCOUNTERVALUE2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET SHADER PERFORMANCE COUNTER VALUE(2) method

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
TESLASHADERPERFCOUNTERVALUE3
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

value for the NV5097 SET SHADER PERFORMANCE COUNTER VALUE(3) method

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

------------------------------------------------------------
TESLA ADDDUMMYCREAD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

value for COPBaseArgs::AddDummyCRead

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
TESLA ANISO QUALITY
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

aniso quality on tesla (aka NV50TexPerfSetting)

MIN            (= 0x00000000)
tpsNV30        (= 0x00000000)
tpsNV40        (= 0x00000001)
tpsDefault     (= 0x00000002)
tpsAssertive   (= 0x00000003)
tpsAggressive  (= 0x00000004)
tpsFerocious   (= 0x00000005)
tpsNSettings   (= 0x00000006)
MAX            (= 0x00000005)  // tpsNSettings-1

Default values for this setting:
DEFAULT:    tpsDefault

------------------------------------------------------------
TESLA REGBANKSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

tesla's register bank size

MIN  (= 0x00000000)
MAX  (= 0xffffffff)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
TESSELLATION LOD MULTIPLIER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

16:16 fixed-point multiplier for hull shader LOD output


Default values for this setting:
DEFAULT:    0x00010000

------------------------------------------------------------
TEST NVFBC LOGO RENDER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Bits to Enable/Disable Logo Render Test in TDK, this should not be set in any other case

DISABLE                 (= 0x00000000)  // Disable NvFBC logo render test
TEST NVFBC LOGO RENDER  (= 0x00000001)  // Enable NvFBC logo render test

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
TEXCOMPRESSENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

enables AC compression for non-DXT texture formats

OFF, 0, FALSE, DISABLED  (= 0x86752318)
ON, 1, TRUE, ENABLED     (= 0x88204955)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
TEXELALIGNMENT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

ZOH CENTER    (= 0x02000000)
ZOH CORNER    (= 0x01000000)
FOH CENTER    (= 0x00200000)
FOH CORNER    (= 0x00100000)
TEXEL CENTER  (= 0x00020000)
TEXEL CORNER  (= 0x00010000)

Default values for this setting:
DEFAULT:    0x01120000
	ZOH CORNER                              
	FOH CORNER                              
	TEXEL CENTER                            

------------------------------------------------------------
TEXHEADERSIMMORTAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x49845612)
ON, 1, TRUE, ENABLED     (= 0x72389234)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
TEXPOOLSIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the texture header pool size

MIN  (= 0x00000001)
MAX  (= 0x00001000)

------------------------------------------------------------
TEXTURESTAGECAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0x00000001)
MAX  (= 0x00000100)

Default values for this setting:
DEFAULT:    MAX

------------------------------------------------------------
THREEDSMAX SHIM FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

3DSMax Shim Layer Control (D3D9 Vista/Win7)

DISABLE        (= 0x00000000)  // Disable the 3DSMax shim layer
ENABLE         (= 0x00000001)  // Enable the 3DSMax shim layer on Quadro and GeForce SMB GPUs
ENABLEGEFORCE  (= 0x00000002)  // Enable the 3DSMax shim layer on GeForce and Quadro (DEVELOP/DEBUG only)

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
TILE COALESCER TILE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Tile coalescer's tile size. Default is 8x8 tile size for pre GP10x and 16x16 for GP10x +

TILE SIZE NOOVERRIDE          (= 0x00000000)  // Do not override tile size. Default on Maxwell B and Pascal A is 8x8 when running with pixel shader interlock, and 16x16 when not in pixel shader interlock mode. On Pascal B and later it's 16x16 irrespective of pixel shader interlock
INTERLOCK TILE SIZE 16x16     (= 0x00000001)  // 16x16 tile size for interlock mode
INTERLOCK TILE SIZE 8x8       (= 0x00000002)  // 8x8 tile size for interlock mode
NO INTERLOCK TILE SIZE 16x16  (= 0x00000004)  // 16x16 tile size for no interlock mode
NO INTERLOCK TILE SIZE 8x8    (= 0x00000008)  // 8x8 tile size for no interlock mode

Default values for this setting:
DEFAULT:    0x00000000
	TILE SIZE NOOVERRIDE                    

------------------------------------------------------------
TIRWITHDEPTH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Target Independent Raster with depth behavior

USE REDUCE COVERAGE DISABLE  (= 0x00000001)  // This will trigger a launch check so it's not the default behavior

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
TRACKED SEMAPHORE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls functionality for dumping of various tracked semaphores

ENABLE SCG GPU STATE HAZARD ANNOTATION  (= 0x00000001)  // Dumps SCG GPU hazard information
ENABLE ENTRY POINT ANNOTATION           (= 0x00000002)  // Dumps all enter/exit entry points (extremely verbose)
ENABLE APP REGIME ANNOTATION            (= 0x00000004)  // Dumps app regime markers
ENABLE CUSTOM ANNOTATION                (= 0x00000008)  // Dumps a variety of hard-coded entrypoints
ENABLE SINGLE NODE SCG ANNOTATION       (= 0x00000010)  // Dumps single-node SCG information
ENABLE PERFSTRAT ANNOTATION             (= 0x00000020)  // Dumps perfstrat information
ENABLE PUSHER ANNOTATION                (= 0x00000040)  // Dumps pusher information, including flush/present
ENABLE COPY ANNOTATION                  (= 0x00000080)  // Dumps internal copy/blit information
ENABLE SHADER ANNOTATION                (= 0x00000100)  // Dumps shader timing information
ENABLE DEBUG ANNOTATION                 (= 0x00000200)  // Use this for testing or debugging, do not check in any code that uses this bit
ENABLE HOTKEY                           (= 0x00001000)  // Waits for hotkey to start profiling and dump (ctrl+F7)
ENABLE EXTERNAL PROCESS NOTIFICATION    (= 0x00002000)  // Signals event on profiling start, and waits for event to complete. Use with ENABLE HOTKEY.
ENABLE PERF INSPECTOR FILENAME          (= 0x00004000)  // Uses a PerfInspector-compatible filename format
ENABLE EXIT ON COMPLETION               (= 0x10000000)  // After TRACKED SEMAPHORE FRAMES or when PerfInspector signals to stop, terminate the process

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
TRACKED SEMAPHORE FRAMES
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Approximate number of frames to capture tracked semaphores for


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
TRIPLE BUFFERING ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Setting from which CPL will decide whether to show Triple Buffering as normal or greyed out

DISABLED, OFF  (= 0x00000000)  // Triple Buffering is not supported
ENABLED, ON    (= 0x00000001)  // Triple Buffering is supported

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
TRMSAAMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Transparency multisampling anti-aliasing modes.

Q        (= 0x00000000)  // (Default, Mixed mode) uses application detection.
ATOC     (= 0x00000001)  // (Old mode) uses the good old ATOC computation, 1x shader.
A4X TC   (= 0x00000002)  // (Quality mode) spawns 4 shader copies, averages alpha only. (only texcoords are adjusted)
C4X TC   (= 0x00000003)  // (Quality mode) spawns 4 shader copies, averages r,g,b, and alpha. (only texcoords are adjusted)
A3X TC   (= 0x00000004)  // (Quality mode) spawns 3 shader copies, averages alpha only. (only texcoords are adjusted)
C3X TC   (= 0x00000005)  // (Quality mode) spawns 3 shader copies, averages r,g,b, and alpha. (only texcoords are adjusted)
A4X ALL  (= 0x00000006)  // (Quality mode) spawns 4 shader copies, averages alpha only. (all parameters are adjusted)
C4X ALL  (= 0x00000007)  // (Quality mode) spawns 4 shader copies, averages r,g,b, and alpha. (all parameters are adjusted)
A3X ALL  (= 0x00000008)  // (Quality mode) spawns 3 shader copies, averages alpha only. (all parameters are adjusted)
C3X ALL  (= 0x00000009)  // (Quality mode) spawns 3 shader copies, averages r,g,b, and alpha. (all parameters are adjusted)
SS2X     (= 0x0000000a)  // Used for internal driver purposes only - spawns 2 shader copies
SS4X     (= 0x0000000b)  // Used for internal driver purposes only - spawns 4 shader copies
SS8X     (= 0x0000000c)  // Used for internal driver purposes only - spawns 8 shader copies
TEST     (= 0x0000000f)  // (Test mode) shows shader types in different colors
MAX      (= 0x0000000f)

Default values for this setting:
DEFAULT:    Q

------------------------------------------------------------
TSF ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable TSF. This causes the TSF to get enabled/disabled provided MFAA(MAXWELL B SAMPLE INTERLEAVE = ON) is already enabled.

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
TSF SETTING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

TSF additional settings

DEFAULT FILTER      (= 0x00000001)  // simple 4 frames based algorithm only applied on static objects
SPATIAL FILTER      (= 0x00000002)  // Additional to default filter, spatial filter on moving objects
DEINTERLACE FILTER  (= 0x00000003)  // Special de-interlacing filter espicially designed for 1x->2x mode
FILTER FROM FILE    (= 0x00000004)  // Load custom filter from file (available only on debug/develop drivers). File named tsfshader.bin should be placed in the path specificed by MAXWELL B SAMPLE INTERLEAVE PATH.

Default values for this setting:
DEFAULT:    SPATIAL FILTER

------------------------------------------------------------
TSF THRESHOLD STATIC OBJECT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Threshold to decide whether object is static or not. This value is divided by 1000.0f before passing to the filter shader. (it's dword because our DRS profile framework won't accept floats in app profile)


Default values for this setting:
DEFAULT:    0x00000032

------------------------------------------------------------
TURING A TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

5 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount / RtvCbCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x00022313

------------------------------------------------------------
TURING A TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
TURING A TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
TURING A TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
TURING A TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
TURING CBV BIND MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Way to choose CBV bind mechanism.

CBV BIND MODE DEFAULT                  (= 0x00000000)  // DX11 Compute - HybridBindless, DX12 - PureBindless
DX12 CBV BIND MODE SHIFT               (= 0x00000000)
DX12 CBV BIND MODE MASK                (= 0x0000000f)
DX12 CBV BIND MODE LEGACY              (= 0x00000001)
DX12 CBV BIND MODE PUREBINDLESS        (= 0x00000000)
DX11 CMP CBV BIND MODE SHIFT           (= 0x00000004)
DX11 CMP CBV BIND MODE MASK            (= 0x000000f0)
DX11 CMP CBV BIND MODE LEGACY          (= 0x00000010)
DX11 CMP CBV BIND MODE PUREBINDLESS    (= 0x00000020)
DX11 CMP CBV BIND MODE HYBRIDBINDLESS  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000000
	CBV BIND MODE DEFAULT                   
	CBV BIND MODE DEFAULT                   
	CBV BIND MODE DEFAULT                   
	DX12 CBV BIND MODE SHIFT                
	DX12 CBV BIND MODE PUREBINDLESS         
	DX11 CMP CBV BIND MODE HYBRIDBINDLESS   

------------------------------------------------------------
TURING DX12 SURFACE BIND MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Decides binding mode for DX12 surfaces

PUREBINDLESS  (= 0x00000000)  // Use Purebindless mode for all surfaces
LEGACY        (= 0x00000001)  // Use Legacy i.e. first 64 surfaces use Bound mode and later use PureBindless mode

Default values for this setting:
DEFAULT:    0x00000000
	PUREBINDLESS                            

------------------------------------------------------------
TURING GCC PREFETCH DXR STRAT ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enables the perfstrat controlled by TURING GCC PREFETCH DXR TOGGLE ENABLE

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // GCC Prefetch DXR Strat Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // GCC Prefetch DXR Strat Enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
TURING GCC PREFETCH DXR TOGGLE ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override NV PGRAPH PRI GPCS GCC DBG PREFETCH ENABLE to switch GCC prefetch off or toggle GCC prefetch around dispatch rays

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Toggle Disabled, switch GCC prefetch off once on first DXR call
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Toggle GCC prefetch around DispatchRays

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
TURING MME64 USE DMA READ PORT
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Set TURING MME64 USE DMA READ PORT=1 to allow MME64 to use the DMA Read Port.

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable MME64 usage of DMA Read Port.
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable MME64 usage of DMA Read Port.

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
TURING MONITORED FENCE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Turing adds monitored fence(conditional trap). This will be used for hw testing purpose only (http://nvbugs/200327547).

DISABLE                  (= 0x00000000)  // legacy behaviour, does not use turing conditional trap.
ENABLE                   (= 0x00000001)  // if set uses monitored fence(conditional trap) for refCount hasReached.
FORCE COMPUTE ON 3D      (= 0x00000040)  // if set uses Compute monitored fence(conditional trap) for refCount instead of 3D.
ENABLE COMPUTE DX1x SCG  (= 0x00000020)  // if set uses Compute interrupt on helper channel for NvAPI SCG.
FORCE CE ON 3D           (= 0x00000080)  // if set uses Copy monitored fence(conditional trap) for refCount instead of 3D.
IGNORE CE HW WAR         (= 0x00000004)  // if set ignores CE additional dummy fence write for CE HW WAR.
IGNORE HASHVA RELEASE    (= 0x00000002)  // if set release 1 to hash VA skipped.
ENABLE LEGACY            (= 0x00000010)  // if set uses unconditional interrupt on pre-Turing (can be used for Pascal).
ENABLE DBG PRINT         (= 0x00000100)  // if set prints debug traces with GPU/CPU VA and methods push.

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
TURING PRI GPCS GCC DBG PREFETCH ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Override the default value for NV PGRAPH PRI GPCS GCC DBG PREFETCH ENABLE

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
TURING ROOTCBV MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Way to choose graphics and compute RootCBV behaviour when DX12 CBV BIND MODE PUREBINDLESS mode is selected for TURING CBV BIND MODE regkey - Using LDG or LDCB.Default is to use LDG for both compute and graphics RootCBVs. 

ROOTCBV MODE FORCE LDG       (= 0x00000000)  // Use LDG for both Graphics and Compute RootCBVs
GRAPHICS ROOTCBV FORCE LDCB  (= 0x00000001)  // Use LDCB for Graphhics RootCBVs
COMPUTE ROOTCBV FORCE LDCB   (= 0x00000002)  // Use LDCB for Compute RootCBVs
ROOTCBV MODE FORCE LDCB      (= 0x00000003)  // Use LDCB for Compute RootCBVs

Default values for this setting:
DEFAULT:    0x00000003
	GRAPHICS ROOTCBV FORCE LDCB             
	COMPUTE ROOTCBV FORCE LDCB              
	ROOTCBV MODE FORCE LDCB                 

------------------------------------------------------------
TURING SM SCG CONTROL COMPUTE IN GRAPHICS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

used to enable the new SM-SCG protocol called 'ComputeInGraphics'

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
TURING TEXTURE BIND MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Decides binding mode for Textures - both DX11 and DX12

DX11 LEGACY  (= 0x00000001)  // Use legacy texture binding (tex/smp combos) for DX11.  Falls back to bindless if tex/smp combo space is exhausted.
DX12 LEGACY  (= 0x00000002)  // Use legacy texture binding (tex/smp combos) for DX12.  Falls back to bindless if tex/smp combo space is exhausted.

Default values for this setting:
DEFAULT:    0x00000001
	DX11 LEGACY                             

------------------------------------------------------------
TURING TEX SMP VIA ROOT TABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Put first 32 tex/smp combos of VS and PS in root table. Only for testing Turing HW root table feature with dx11

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disabled
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
TURING USE BUNDLE64 DRAW
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Disable/Enable Turing Bundle64 Draw methods, if disabled legacy Draw methods will be used

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
UMD HIDE QUADRO IDENTITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

disable Quadro optimization features

DISABLE  (= 0x00000000)  // do not hide Quadro optimizations
ENABLE   (= 0x00000001)  // hide Quadro optimizations, act as a GeForce

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
UMD LOAD PATH
------------------------------------------------------------
This key is of type STRING
This key is defined for defined(DEBUG) || defined(DEVELOP)
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

path we try to load nvwgf2um(x).dll from (this reg key has lower priority than executable path). c:\windows\system32\M verified to work


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
UMD MANAGED GPFIFO INITIAL CAPACITY DX9
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DX9: This key indicates the number of GPFIFO entries in the initial UMD managed gpfifo allocation. Applicable for HWS alone. This should be a power of 2.


Default values for this setting:
DEFAULT:    0x00001000

------------------------------------------------------------
UMD MANAGED GPFIFO INITIAL CAPACITY MAIN CHANNEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This key indicates the number of GPFIFO entries in the initial UMD managed gpfifo allocation, for main/primary/gr channel. Applicable for HWS alone. This should be a power of 2.


Default values for this setting:
DEFAULT:    0x00001000

------------------------------------------------------------
UMD MANAGED GPFIFO INITIAL CAPACITY SCG ASYNC COMPUTE CHANNEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This key indicates the number of GPFIFO entries in the initial UMD managed gpfifo allocation, for SCG async channel (async-compute or driver SCG). Applicable for HWS alone. This should be a power of 2.


Default values for this setting:
DEFAULT:    0x00001000

------------------------------------------------------------
UMD MANAGED GPFIFO INITIAL CAPACITY SCG HELPER CHANNEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This key indicates the number of GPFIFO entries in the initial UMD managed gpfifo allocation, for SCG-helper channel. Applicable for HWS alone. This should be a power of 2.


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
UNORDERED3DCOMPRESSENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable compression on pure 3D UAV's when cbc heuristic is in use

OFF, 0, FALSE, DISABLED  (= 0x99388100)  // Disabled since SUST is slow due to RMW pain
ON, 1, TRUE, ENABLED     (= 0x25558997)  // May not be perf optimal, for arch's experimentation

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
UNORDEREDCOMPRESSENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x99388100)
ON, 1, TRUE, ENABLED     (= 0x25558997)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
UPLOAD QUEUE FLUSH ON SAME SUBCH I2M FOR INVALIDATE WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Set the flush flag when doing same subch i2m blit with invalidate: WAR for bug http://nvbugs/2679551

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // OFF
ON, 1, TRUE, ENABLED     (= 0x00000001)  // ON

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
USERMIPMAPENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x48391723)
ON, 1, TRUE, ENABLED     (= 0x24829101)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
USE CE FOR TRANSFERS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

This regkey enables/controls the usage of CE in various scenarios

DISABLE                    (= 0x00000000)  // Disable the control of CE usage
BUFFER UPLOADS DOWNLOADS   (= 0x00000002)  // Buffer uploads and downloads will use CE
TEXTURE UPLOADS DOWNLOADS  (= 0x00000004)  // Texture uploads and downloads will use CE
TEXTURE STAGING UPLOAD     (= 0x00000008)  // Texture staging upload during Unmap in Map->Update->Unamp will use CE
ALL ENABLE                 (= 0x0000000e)  // All the settings enabled

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
USE CE FOR TRANSFERS THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the minimum size in bytes to transfer on CE


Default values for this setting:
DEFAULT:    0x00000000

Could not locate information for plain text key: USE INCREMENT PUT PRE GA10x

------------------------------------------------------------
VALIDATE PARAMS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable parameter validation of different DX1x DDI functios

NOTHING             (= 0x00000000)  // Do not validate any input
COPYREGION          (= 0x00000001)  // Validate input on CopyRegion functions
INTERPRET NEGATIVE  (= 0x00000002)  // Validate input considering negative input even if the parameter type is unsigned

Default values for this setting:
DEFAULT:    0x00000000
	NOTHING                                 

------------------------------------------------------------
VCAA HILITE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEVELOP) || defined(DEBUG)
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x22754241)
ON, 1, TRUE, ENABLED     (= 0x66855023)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
VERTEX SHADER BATCH CULL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may only assign it to one of the names listed below.

Enable/disable batch culling code in vertex shaders (DX10)

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
VIDEOTEXTUREENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x75360106)
ON, 1, TRUE, ENABLED     (= 0x24917602)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
VK ABORT ON DEVICE LOST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Vulkan: Abort the application if VK ERROR DEVICE LOST is detected

DISABLED  (= 0x00000000)  // Return VK ERROR DEVICE LOST back to the application
ENABLED   (= 0x00000001)  // Abort the application on VK ERROR DEVICE LOST

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK ANSEL FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to control Ansel in the Vulkan driver

NONE                        (= 0x00000000)  // No flags set
SWAPCHAIN ONLY              (= 0x00000001)  // Only track the swapchain images
DISABLE WITH DEVICE GROUPS  (= 0x00000002)  // Disable Ansel when device groups is active

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
VK APP SHADER ASSUMES 0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to forcibly enable zero-initialization of assembly temporaries for different shader stages.

VERTEX           (= 0x00000001)  // Force zero initialization of temporaries in vertex shaders.
FRAGMENT         (= 0x00000002)  // Force zero initialization of temporaries in fragment shaders.
GEOMETRY         (= 0x00000004)  // Force zero initialization of temporaries in geometry shaders.
TESS CONTROL     (= 0x00000008)  // Force zero initialization of temporaries in tessellation control shaders.
TESS EVALUATION  (= 0x00000010)  // Force zero initialization of temporaries in tessellation evaluation shaders.
TASK             (= 0x00000040)  // Force zero initialization of temporaries in task shaders.
MESH             (= 0x00000080)  // Force zero initialization of temporaries in mesh shaders.
ALL STAGES       (= 0x000000ff)  // Force zero initialization of temporaries in all shader stagess.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK APP SHADER INIT OUTPUTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to forcibly enable zero-initialization of shader outputs for different shader stages.

VERTEX           (= 0x00000001)  // Force zero initialization of outputs in vertex shaders.
FRAGMENT         (= 0x00000002)  // Force zero initialization of outputs in fragment shaders.
GEOMETRY         (= 0x00000004)  // Force zero initialization of outputs in geometry shaders.
TESS CONTROL     (= 0x00000008)  // Force zero initialization of outputs in tessellation control shaders.
TESS EVALUATION  (= 0x00000010)  // Force zero initialization of outputs in tessellation evaluation shaders.
ALL STAGES       (= 0x000000ff)  // Force zero initialization of outputs in all shader stagess.

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK AVOID DPC CORES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When enabled, set process affinity to not use cores that are being used for ISR/DPC.

DISABLED                         (= 0x00000000)  // Disable affinitizing off ISR/DPC cores
SET PROCESS AFFINITY ON PRESENT  (= 0x00000001)  // SetProcessAffinity to avoid ISR/DPC cores every QueuePresent

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK BACKGROUND COMPILER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls enablement of background compiler threads used by vulkan driver perfstrats

DISABLE  (= 0x00000000)  // Disable background compilation. Will disable any perfstrats dependent on this functionality
AUTO     (= 0x00000001)  // Spins up background compilation only if there are enabled perfstrats that rely on the functionality

Default values for this setting:
DEFAULT:    AUTO

------------------------------------------------------------
VK BACKGROUND COMPILER IDLE LOG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the background compiler supervisor

DISABLED  (= 0x00000000)  // Disable the background compiler idle printout
ENABLED   (= 0xb69d2ca7)  // Enable the background compiler idle printout

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK BACKGROUND COMPILER IDLE LOG THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls how long we wait before logging that the background compiler is idle, in ms. A value of 0 will cause the message to not be printed


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK BACKGROUND COMPILER SUPERVISOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the background compiler supervisor

DISABLED  (= 0x00000000)  // Disable the supervisor
ENABLED   (= 0x00000001)  // Enable the supervisor

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
VK BACKGROUND COMPILER SUPERVISOR CORE LOAD THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of logical cores that need to be idle before the supervisor will re-awaken the background compiler thread


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
VK BACKGROUND COMPILER SUPERVISOR SLEEP DELAY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls how many milliseconds the supervisor sleeps between load checks while idling the compiler threads


Default values for this setting:
DEFAULT:    0x00000005

------------------------------------------------------------
VK BACKGROUND COMPILER THREAD COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls how many threads get created for carrying out background compilation work


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
VK BACKGROUND COMPILER THREAD PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the priority level for the background compiler threads

LOWEST   (= 0x00000000)
LOW      (= 0x00000001)
NORMAL   (= 0x00000002)
HIGH     (= 0x00000003)
HIGHEST  (= 0x00000004)

Default values for this setting:
DEFAULT:    LOW

------------------------------------------------------------
VK BINDLESS UBO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable higher UBO descriptor limits for Vulkan

DISABLE     (= 0x00000000)  // Disable bindless UBO.
ENABLE      (= 0x00000001)  // Enable bindless UBO.
HW DEFAULT  (= 0x00000002)  // Hardware default.

Default values for this setting:
DEFAULT:    0x00000002
	HW DEFAULT                              

------------------------------------------------------------
VK BLEND OPT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls Vulkan blendopt optimization

DISABLE  (= 0x00000000)  // disable
ENABLE   (= 0x00000001)  // enable

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
VK BLEND OPT INSTRUCTION LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limits blend opt to shaders with instruction count <= this value


Default values for this setting:
DEFAULT:    0x00000200

------------------------------------------------------------
VK BUFFER BOUND CHECK WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Override the buffer bound checking to avoid possible issues in application

DISABLED          (= 0x00000000)  // Disable the indicator
UBO IGNORE RANGE  (= 0x00000001)  // Do UBO bound checking on the whole buffer instead of the specified range

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
VK CLAMP FP BLEND
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control clamping behavior for floating-point blend operations on Pascal and above (see bug 1704952).

TO INFINITY  (= 0x00000000)  // Clamp to +/- infinity. This is the default for OpenGL.
TO MAXVAL    (= 0x00000001)  // Clamp to +/- maximum value. This is the default for DX.

Default values for this setting:
DEFAULT:    TO MAXVAL

------------------------------------------------------------
VK CLIP CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls tight vs guardband clipping. Triangles default to guardband clipping due to bug 2335939.

POINT TIGHT     (= 0x00000001)  // Tight clipping for points (VK POINT CLIPPING BEHAVIOR ALL CLIP PLANES).
LINE TIGHT      (= 0x00000002)  // Tight clipping for lines.
TRIANGLE TIGHT  (= 0x00000004)  // Tight clipping for triangles.
VIEWPORT CLIP   (= 0x00000008)  // Enable viewport clip rectangles.

Default values for this setting:
DEFAULT:    0x00000008
	VIEWPORT CLIP                           

------------------------------------------------------------
VK COMPUTE QUEUES LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limits the number of compute queues exposed through vkGetPhysicalDeviceQueueFamilyProperties.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
VK COMPUTE QUEUE FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags Vulkan SCG behaviour

DISABLED        (= 0x00000000)  // Disable Vulkan Compute Queue support
ENABLE GM20X    (= 0x00000001)  // Enable Vulkan Compute Queue support for GM20X+
ENABLE GP10X    (= 0x00000002)  // Enable Vulkan Compute Queue support for GP10X+
ENABLE TU10X    (= 0x00000004)  // Enable Vulkan Compute Queue support for TU10X+
ENABLE NON SCG  (= 0x80000000)  // Exposes a Vulkan Compute Queue without doing SCG

Default values for this setting:
DEFAULT:    0x00000002
	ENABLE GP10X                            

------------------------------------------------------------
VK CONSTANT FOLDING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control whether shader constant folding is enabled and for which stages

DISABLE          (= 0x00000000)  // Disable shader constant folding (except by explicit hash list)
VERTEX           (= 0x00000001)  // Enable for vertex shaders
FRAGMENT         (= 0x00000002)  // Enable for fragment shaders
GEOMETRY         (= 0x00000004)  // Enable for geometry shaders
TESS CONTROL     (= 0x00000008)  // Enable for tessellation control shaders
TESS EVALUATION  (= 0x00000010)  // Enable for tessellation evaluation shaders
COMPUTE          (= 0x00000020)  // Enable for compute shaders
TASK             (= 0x00000040)  // Enable for task shaders
MESH             (= 0x00000080)  // Enable for mesh shaders
FORCE DISABLE    (= 0x80000000)  // Disable entirely, even for shaders listed in VK CONSTANT FOLDING HASH LIST

Default values for this setting:
DEFAULT:    0x00000022
	FRAGMENT                                
	COMPUTE                                 

------------------------------------------------------------
VK CONSTANT FOLDING ARCH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Mask controlling enablement of constant folding based on GPU family

GP10X  (= 0x00000001)  // Enable constant folding for GP10X+
TU10X  (= 0x00000002)  // Enable constant folding for TU10X+
ALL    (= 0xffffffff)  // Enable constant folding on all gpus

Default values for this setting:
DEFAULT:    0x00000001
	GP10X                                   

------------------------------------------------------------
VK CONSTANT FOLDING DEBUG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Set of debugging flags to control constant folding behavior

TRACKING ONLY                  (= 0x00000001)  // Only perform constant tracking; Never optimize
SKIP VALIDATION                (= 0x00000002)  // Optimize programs, but skip validation (rendering errors can/will occur)
VALIDATION TRAP                (= 0x00000004)  // Never move a program back to the tracking state, even if it fails validation
DISABLE PUSH CONSTANT FOLDING  (= 0x00000008)  // Don't fold push constant values

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK CONSTANT FOLDING HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of shader appHashes to enable Constant Folding for. ';' delimited eg: '0xbadcf00ddeadbeef;'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
VK CONSTANT FOLDING INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Display an indicator showing the status of constant folding. Red - off, orange - on but no identified shaders, yellow - on, variants compiling, green - active with no compiles pending

DISABLED  (= 0x00000000)  // Disable the indicator
ENABLED   (= 0x00000001)  // Enable the indicator

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
VK CONSTANT FOLDING MAX PASS FREQUENCY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of passes to process per second.


Default values for this setting:
DEFAULT:    0x0000003C

------------------------------------------------------------
VK CONSTANT FOLDING MIN UNIFORM COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum number of uniforms a shader must have for it to be analyzed for optimization


------------------------------------------------------------
VK CONSTANT FOLDING PROFILING BUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Amount of memory (per-pass) to allocate for profiling timestamps


Default values for this setting:
DEFAULT:    0x00001000

------------------------------------------------------------
VK CONSTANT FOLDING PROFILING HEURISTIC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable profiling heuristic for VK CFGPU. Optimized shaders will periodically be profiled to determine if CFGPU should continue to be applied to them.

DISABLED  (= 0x00000000)  // Disable profiling heuristic
ENABLED   (= 0x00000001)  // Enable profiling heuristic

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
VK CONSTANT FOLDING PROFILING MAX PERIOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of passes the constant folding perfstrat should wait before re-profiling a shader that has successfully passed the profiling heuristic; each consecutive success grows toward this on an s-curve.


Default values for this setting:
DEFAULT:    0x00008CA0

------------------------------------------------------------
VK CONSTANT FOLDING PROFILING MAX SUSPENSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Maximum number of passes the constant folding perfstrat should wait before re-examining a shader that fails the profiling heuristic; each consecutive failure grows toward this on an s-curve.


Default values for this setting:
DEFAULT:    0x00023280

------------------------------------------------------------
VK CONSTANT FOLDING PROFILING MIN TIME
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Lower bound on the average amount of time (in us) that must be spent in a pipeline for the profiler to consider it worthwhile for constant folding


Default values for this setting:
DEFAULT:    0x000000C8

------------------------------------------------------------
VK CONSTANT FOLDING PROFILING SAMPLE COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of samples the profiler should collect before making a decision


Default values for this setting:
DEFAULT:    0x00000019

------------------------------------------------------------
VK CONSTANT FOLDING STABILITY THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of tracking passes a uniform needs to keep the same value before being constant folded


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
VK CONSTANT FOLDING TRACKING BUFFER COUNT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Number of tracking buffers used by the constant folding perf strat


------------------------------------------------------------
VK CONSTANT FOLDING TRACKING BUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Size of the buffer used for tracking constant values


Default values for this setting:
DEFAULT:    0x00010000

------------------------------------------------------------
VK CONSTANT FOLDING TRACKING PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of constant folding tracking compute work. Lower values are higher priority.

LOWEST PRIORITY   (= 0x0000003f)
HIGHEST PRIORITY  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000028

------------------------------------------------------------
VK CONSTANT FOLDING VALIDATION FAILURE DECAY RATE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Exponential decay rate for constant folding validation failure tracking. The validation failure rate is tracked across multiple frames; set this closer to 1 to require validation to fail over more frames before bailing on the optimization.


Default values for this setting:
DEFAULT:    0.850000

------------------------------------------------------------
VK CONSTANT FOLDING VALIDATION FAILURE THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Minimum percentage of validation attempts that must fail before optimization is aborted and tracking begins again


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
VK CONSTANT FOLDING VALIDATION PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Priority of constant folding validation compute work. Lower values are higher priority.

LOWEST PRIORITY   (= 0x0000003f)
HIGHEST PRIORITY  (= 0x00000000)

Default values for this setting:
DEFAULT:    0x00000018

------------------------------------------------------------
VK COPY CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls if vkCmdCopy* functions use TWOD, PSHADER, or COMPUTE in this order where applicable

PSHADER OFF  (= 0x00000000)  // Don't convert suitable CmdCopyImage into CmdBlitImage
PSHADER ON   (= 0x00000001)  // Allow converting suitable CmdCopyImage into CmdBlitImage to use pixel shader
TWOD OFF     (= 0x00000000)  // Disallow TWOD
TWOD ON      (= 0x00000002)  // Allow TWOD
TWOD AUTO    (= 0x00000004)  // Only allow TWOD based on HW bug and perf

Default values for this setting:
DEFAULT:    0x00000005
	PSHADER ON                              
	TWOD AUTO                               

------------------------------------------------------------
VK COPY QUERY POOL BATCH COPIES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether we'll try to batch query copies using the graphics MME macro

DISABLED  (= 0x00000000)  // Don't batch copies
ENABLED   (= 0x00000001)  // Batch copies if possible

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
VK COPY QUERY POOL COMPUTE THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the switchover point when we'll use start using compute to copy queries


Default values for this setting:
DEFAULT:    0x00000080

------------------------------------------------------------
VK COPY QUERY POOL PREFETCH QUERY THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the maximum number of active queries that we'll use indidual acquires for before attempting to use the prefetch macro


------------------------------------------------------------
VK COPY QUERY POOL PREFETCH SYNC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enables the optimization to use MME to prefetch and preresolve copy query pool host acquires

DISABLE  (= 0x00000000)  // Disable copy query pool acquire prefetch
ENABLE   (= 0x00000001)  // Enable copy query pool acquire prefetch

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
VK DEEP COLOR CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control whether Vulkan surface format SRGB A2B10G10R10 is supported or not

DISABLE                 (= 0x00000000)  // Disable deepcolor formats
ALLOW SRGB A2B10G10R10  (= 0x00000001)  // Export SRGB A2B10G10R10 format

Default values for this setting:
DEFAULT:    ALLOW SRGB A2B10G10R10

------------------------------------------------------------
VK DEFER BARRIERS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls deferral of barriers interleaved with transfer ops

DISABLE            (= 0x00000000)  // disable
MAX REGIONS MASK   (= 0x00000fff)  // number of transfer regions to track before flushing deferred barriers. 0 is disable
INCLUDE TIMESTAMP  (= 0x00001000)  // defer barriers for CmdWriteTimestamp (debug setting)
INCLUDE SPARSE     (= 0x00002000)  // defer barriers for buffers with SPARSE ALIASED BIT (debug setting)

Default values for this setting:
DEFAULT:    0x00000080
	0x00000080

------------------------------------------------------------
VK DEFER FREE MEMORY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls whether to defer freeing memory immediately after vkFreeMemory

DISABLE  (= 0x00000000)  // Disable deferred memory freeing
ENABLE   (= 0x00000001)  // Enable deferred memory freeing

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
VK DEFER PUSH CONSTANT UPDATES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the use of deferred graphics push constant updates

DISABLED  (= 0x00000000)  // Disable push constant deferral
ENABLED   (= 0x00000001)  // Enable push constant deferral

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
VK DEVICE GROUP WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Workarounds related to device groups

NONE                   (= 0x00000000)  // No Workarounds
TRIPLE BUFFER          (= 0x00000001)  // Upgrade device group swapchains to triple buffering to allow scaling
DISABLE DEVICE GROUPS  (= 0x00000002)  // Don't expose device groups on this configuration

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
VK DIRECT GSYNC COMPATIBLE MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control whether G-SYNC Compatible monitors enable VRR at modeset time for Vulkan direct-to-display

DISABLED          (= 0x00000000)  // Disable VRR on all G-SYNC Compatible monitors
WHITELISTED ONLY  (= 0x00000001)  // Enable VRR only on whitelisted G-SYNC Compatible monitors
ENABLED           (= 0x00000002)  // Enable VRR on whitelisted and non-validated G-SYNC Compatible monitors

Default values for this setting:
DEFAULT:    WHITELISTED ONLY

------------------------------------------------------------
VK DIRECT GSYNC MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control whether G-SYNC is allowed at modeset time for Vulkan direct-to-display

DISABLED  (= 0x00000000)  // Disable G-SYNC
ENABLED   (= 0x00000001)  // Enable G-SYNC

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
VK DISABLE LOOP UNROLLING HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of shader appHashes to Disable Loop Unrolling for. ';' delimited eg: '0xbadcf00ddeadbeef;'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
VK DX PRESENT USE ASYNC BLIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

If enabled, interop with DX present via async blit. Supports device groups P2P transfers.

DISABLE     (= 0x00000000)  // Do not use async blit
ENABLE      (= 0x00000001)  // Use async blit
ENABLE SLI  (= 0x00000002)  // Use async blit for SLI only

Default values for this setting:
DEFAULT:    ENABLE SLI

------------------------------------------------------------
VK DYNAMIC PERF STRAT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls the activation of the reduction tracker perf strat

DISABLED            (= 0x00000000)  // Turn off the reduction tracker
REDUCTION           (= 0x00000001)  // Turn on the reduction tracker
REDUCTION GRAPHICS  (= 0x00000002)  // Turn on the reduction tracker for graphics
REDUCTION COMPUTE   (= 0x00000004)  // Turn on the reductino tracker for compute
TILED CACHE         (= 0x00000008)  // Turn on the tiled cache tracker
SMSCC               (= 0x00000010)  // Turn on the SMSCC tracker
ALL                 (= 0x0000001f)  // Turn on all of the trackers

Default values for this setting:
DEFAULT:    0x0000001F
	REDUCTION                               
	REDUCTION GRAPHICS                      
	REDUCTION COMPUTE                       
	TILED CACHE                             
	SMSCC                                   
	ALL                                     

------------------------------------------------------------
VK DYNAMIC PERF STRAT DEBUG BUCKET HASH
------------------------------------------------------------
This key is of type QWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enables some extra logging info for the specified bucket hash


Default values for this setting:
DEFAULT:    0x0000000000000000

------------------------------------------------------------
VK DYNAMIC PERF STRAT FASTEST THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls how many times the fastest settings are hit compared to others before we lock adaptation


Default values for this setting:
DEFAULT:    0x00000002

------------------------------------------------------------
VK DYNAMIC PERF STRAT KNOBS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Tweaks for vulkan dynamic perf strats

NONE                     (= 0x00000000)  // No knobs set
LOCK REDUCTION           (= 0x00000001)  // Lock the perf strat settings after several succesfull attempts
USE REDUCTION HISTORY    (= 0x00000002)  // Track the most succesfull settings and use instead of most recent fastest settings
IGNORE FIRST LAST FRAME  (= 0x00000004)  // Ignore the results of the first/last frame captured

Default values for this setting:
DEFAULT:    0x00000003
	LOCK REDUCTION                          
	USE REDUCTION HISTORY                   

------------------------------------------------------------
VK DYNAMIC PERF STRAT MAX ATTEMPTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max dynamic adjustment attempts


Default values for this setting:
DEFAULT:    0x00000001

------------------------------------------------------------
VK DYNAMIC PERF STRAT RETEST INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the frame interval between bucket retests


Default values for this setting:
DEFAULT:    0x00000014

------------------------------------------------------------
VK DYNAMIC PERF STRAT SMALL BUCKET THRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Cutoff time for short buckets


Default values for this setting:
DEFAULT:    0x00010000

------------------------------------------------------------
VK DYNAMIC PERF STRAT WINDOW SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls how many frames are used to calculate bucket times


Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
VK DYNAMIC SMSCC KNOBS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Tweaks for the vulkan dynamic SMSCC perf strat

NONE                     (= 0x00000000)  // No knobs set
LOCK REDUCTION           (= 0x00000001)  // Lock the perf strat settings after several succesfull attempts
USE REDUCTION HISTORY    (= 0x00000002)  // Track the most succesfull settings and use instead of most recent fastest settings
IGNORE FIRST LAST FRAME  (= 0x00000004)  // Ignore the results of the first/last frame captured

Default values for this setting:
DEFAULT:    0x00000004
	IGNORE FIRST LAST FRAME                 

------------------------------------------------------------
VK DYNAMIC SMSCC RETEST INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the frame interval between bucket retests


Default values for this setting:
DEFAULT:    0x00000064

------------------------------------------------------------
VK DYNAMIC SMSCC WINDOW SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls how many frames are used to calculate bucket times


Default values for this setting:
DEFAULT:    0x00000005

------------------------------------------------------------
VK ENABLE TURING IMPLICIT MULTIVIEW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable Turing multi-view optimization, where shaders dependent on view IDs are optimized to produce outputs for all views in a single pass.

FALSE  (= 0x00000000)  // Disable Turing multiview optimization. 
TRUE   (= 0x00000001)  // Enable Turing multiview optimization. 

Default values for this setting:
DEFAULT:    TRUE

------------------------------------------------------------
VK ETW ERROR EVENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Key to enable event logs dump in the Vulkan driver

NONE      (= 0x00000000)  // Disabled
FLIPPING  (= 0x00000001)  // Only dump flipping error events
ALL       (= 0xffffffff)  // Dump all events

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
VK EXPOSE DEBUG LABEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls if the Vulkan ICD exposes EXT debug label

DISABLE  (= 0x00000000)  // Don't expose EXT debug label.
ENABLE   (= 0x00000001)  // Expose EXT debug label.

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
VK EXPOSE DEBUG UTILS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls if the Vulkan ICD exposes VK EXT debug utils, the presence of which may affect application's performance if they use it unintended.

DISABLE  (= 0x00000000)  // Don't expose VK EXT debug utils.
ENABLE   (= 0x00000001)  // Expose VK EXT debug utils.

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
VK EXPOSE KHR DISPLAY USING WDDC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls if the Vulkan ICD on Windows 10 exposes VK KHR display implemented on top of WDDC

DISABLE  (= 0x00000000)  // Don't expose VK KHR display on top of WDDC.
ENABLE   (= 0x00000001)  // Expose VK KHR display on top of WDDC.

Default values for this setting:
DEFAULT:    0x00000001
	ENABLE                                  

------------------------------------------------------------
VK FAST MATH
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Allow looser floating point behavior for Vulkan compiles for specific stages

VERTEX           (= 0x00000001)  // Enable fast math for Vulkan vertex
FRAGMENT         (= 0x00000002)  // Enable fast math for Vulkan fragment
GEOMETRY         (= 0x00000004)  // Enable fast math for Vulkan geometry
TESS CONTROL     (= 0x00000008)  // Enable fast math for Vulkan tess control
TESS EVALUATION  (= 0x00000010)  // Enable fast math for Vulkan tess evaluation
COMPUTE          (= 0x00000020)  // Enable fast math for Vulkan compute
TASK             (= 0x00000040)  // Enable fast math for Vulkan task
MESH             (= 0x00000080)  // Enable fast math for Vulkan mesh
ALL              (= 0x000000ff)  // Enable fast math for all Vulkan shaders

Default values for this setting:
DEFAULT:    0x000000FF
	VERTEX                                  
	FRAGMENT                                
	GEOMETRY                                
	TESS CONTROL                            
	TESS EVALUATION                         
	COMPUTE                                 
	TASK                                    
	MESH                                    
	ALL                                     

------------------------------------------------------------
VK FIX COMBINED IMAGE SAMPLER DESCRIPTOR HANDLES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

AND the sampler and image descriptor handles with 0xFFF00000 and 0xFFFFF respectively before combining them.

FALSE  (= 0x00000000)
TRUE   (= 0x00000001)

Default values for this setting:
DEFAULT:    TRUE

------------------------------------------------------------
VK FLIPPING CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control method used by Vulkan to do fullscreen flipping

FORCE OFF                        (= 0x00000000)  // Disable flipping, always blit
AUTOSELECT                       (= 0x00000001)  // The driver chooses flipping method
ONLY VIRTUALIZED                 (= 0x00000002)  // Only attempt virtualized flipping (which must be enabled too)
SLI BRIDGELESS FLIPPING DISABLE  (= 0x00000004)  // Force disable of bridgeless flipping for Vulkan

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
VK FLIPPING CONTROL MAILBOX
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Flipping method to use for MAILBOX presentation

NO TEARING     (= 0x00000000)  // Do not allow tearing, even if it means disabling flipping
ALLOW TEARING  (= 0x00000001)  // Allow tearing

Default values for this setting:
DEFAULT:    NO TEARING

------------------------------------------------------------
VK FORCE COMPUTE OPERATIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Force various operations to be implemented using the compute class

DISABLED  (= 0x00000000)
ENABLED   (= 0x00000001)

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK FORCE DEPTH RANGE UNRESTRICTED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Forcibly enable the VK EXT depth range unrestricted functionality, even if the application didn't request it.

DISABLED  (= 0x00000000)  // Allow the application to choose.
ENABLED   (= 0x00000001)  // Force enable VK EXT depth range unrestricted functionality.

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK FORCE EARLYZ WHEN NO FRAGMENT SHADER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether to force early-z for draw calls with no fragment shader. Potentially useful if an app is limited by transitions between early-z and late-z.

DISABLED  (= 0x00000000)  // Don't force early-z
ENABLED   (= 0x00000001)  // Force early-z

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK FULLY PIPELINED COPIES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls if CE copies are fully pipelined between barriers (when allowed by WNF bugs)

DISABLE  (= 0x00000000)  // disable
ENABLE   (= 0x00000001)  // enable

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
VK FULL LOOP UNROLL HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of shader appHashes to enable Full Loop Unroll for. ';' delimited eg: '0xbadcf00ddeadbeef;'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
VK GETDEVICEPROCADDR COMPATIBILITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Compatibility setting that maintains old incorrect vkGetDeviceProcAddr behavior

DISABLE  (= 0x00000000)  // vkGetDeviceProcAddr behaves as the spec demands.
ENABLE   (= 0x00000001)  // vkGetDeviceProcAddr will also return all available Vulkan procs.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
VK GLVC DEBUG FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control how the compiler implements the SPIR-V Invariant decoration

DISABLE         (= 0x00000000)  // Disable GLVC debug code
VALIDATE        (= 0x00000001)  // Do a second compilation using the GLVC for each shader, and run using the result of that.
DUMP            (= 0x00000002)  // Dump GLVC files. Create the directory 'glvcdumps' at PS FILE PATH or the root of the driver where your app will run.
HUMAN READABLE  (= 0x00000004)  // Dumped GLVC files will use human readable field names.

Default values for this setting:
DEFAULT:    0x00000000
	DISABLE                                 

------------------------------------------------------------
VK GRAPHICS QUEUES LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limits the number of graphics queues exposed through vkGetPhysicalDeviceQueueFamilyProperties. Must be greater than zero.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
VK HACKY LINUX UNMAPPED PROMOTE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether unmapped VK allocations will be coerced into vidmem

DISABLED  (= 0x00000000)  // Normal Allocation Behavior
ENABLED   (= 0x00000001)  // Attempt hacky UNMAPPED->VIDMEM promotion

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK HALF FLIPPING BLIT MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control blit mode for Vulkan half flipping

ASYNCBLIT  (= 0x00000001)  // Use ASYNCBLIT (CE)
TWOD       (= 0x00000000)  // Use scaled image blit (TWOD)

Default values for this setting:
DEFAULT:    ASYNCBLIT

------------------------------------------------------------
VK HIDE UNUSED MEMORY TYPES
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

This option stops the driver from advertising memory types it does not use

DISABLE  (= 0x00000000)  // Don't hide unused memory types for backwards compatibility with old trace captures
ENABLE   (= 0x00000001)  // Hide unused memory types

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
VK HIGH LATENCY HOIST HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of shader appHashes to enable High Latency Hoist for. ';' delimited eg: '0xbadcf00ddeadbeef;'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
VK HIGH PRIORITY ALLOCATION PINNING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Perf heuristic that disallows host memory demotion for high priority allocations

DISABLED  (= 0x00000000)  // Disables heuristic
ENABLED   (= 0x00000001)  // Will disallow host memory for high priority allocations up to some cap

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK HIGH PRIORITY ALLOCATION PINNING CAP
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the percent of VRAM that can be consumed by pinned vidmem allocations


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
VK HIGH PRIORITY ALLOCATION PINNING THRESHOLD
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Sets the priority threshold for determining when to pin vidmem allocations


Default values for this setting:
DEFAULT:    0.900000

------------------------------------------------------------
VK HOST VISIBLE VIDMEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether the host-visible vidmem type and heap (DEVICE LOCAL | HOST VISIBLE | HOST COHERENT) are exposed through the Vulkan API.

DISABLED                (= 0x00000000)  // Disabled
ENABLED                 (= 0x00000001)  // Enabled
HW DEFAULT              (= 0x00000002)  // Hardware Default
ENABLE LARGE BAR1 ONLY  (= 0x00000003)  // Enabled only for configs with BAR1 >= FB size

Default values for this setting:
DEFAULT:    HW DEFAULT

------------------------------------------------------------
VK HOST VISIBLE VIDMEM SYSMEM FALLBACK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether oversubscription of the host-visible heap automatically retries in sysmem rather than failing the allocation. For use as WAR for certain applications.

DISABLED  (= 0x00000000)  // Disabled
ENABLED   (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK IDLE QUEUE ON SWAPCHAIN OOD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether we idle the queue on swapchain OOD to prevent application bugs like 2814750

DISABLED  (= 0x00000000)  // Disabled
ENABLED   (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK IMAGE COMPRESSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls on which usage flags images are compressed

NEVER                           (= 0x00000000)  // Never
USAGE TRANSFER SRC              (= 0x00000001)  // VK IMAGE USAGE TRANSFER SRC BIT
USAGE TRANSFER DST              (= 0x00000002)  // VK IMAGE USAGE TRANSFER DST BIT
USAGE SAMPLED                   (= 0x00000004)  // VK IMAGE USAGE SAMPLED BIT
USAGE STORAGE                   (= 0x00000008)  // VK IMAGE USAGE STORAGE BIT
USAGE COLOR ATTACHMENT          (= 0x00000010)  // VK IMAGE USAGE COLOR ATTACHMENT BIT
USAGE DEPTH STENCIL ATTACHMENT  (= 0x00000020)  // VK IMAGE USAGE DEPTH STENCIL ATTACHMENT BIT
USAGE TRANSIENT ATTACHMENT      (= 0x00000040)  // VK IMAGE USAGE TRANSIENT ATTACHMENT BIT
USAGE INPUT ATTACHMENT          (= 0x00000080)  // VK IMAGE USAGE INPUT ATTACHMENT BIT
ALWAYS                          (= 0xffffffff)  // Always compressed

Default values for this setting:
DEFAULT:    0x00000030
	USAGE COLOR ATTACHMENT                  
	USAGE DEPTH STENCIL ATTACHMENT          

------------------------------------------------------------
VK IMAGE COMPRESSION CAP MB
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Max number of MB to request image compression to avoid CBC thrash. 0 for no limit.


Default values for this setting:
DEFAULT:    0x00000400

------------------------------------------------------------
VK IMAGE COMPRESSION PLC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls on which additional usage flags images are compressed when PLC is available

NEVER                           (= 0x00000000)  // Never
USAGE TRANSFER SRC              (= 0x00000001)  // VK IMAGE USAGE TRANSFER SRC BIT
USAGE TRANSFER DST              (= 0x00000002)  // VK IMAGE USAGE TRANSFER DST BIT
USAGE SAMPLED                   (= 0x00000004)  // VK IMAGE USAGE SAMPLED BIT
USAGE STORAGE                   (= 0x00000008)  // VK IMAGE USAGE STORAGE BIT
USAGE COLOR ATTACHMENT          (= 0x00000010)  // VK IMAGE USAGE COLOR ATTACHMENT BIT
USAGE DEPTH STENCIL ATTACHMENT  (= 0x00000020)  // VK IMAGE USAGE DEPTH STENCIL ATTACHMENT BIT
USAGE TRANSIENT ATTACHMENT      (= 0x00000040)  // VK IMAGE USAGE TRANSIENT ATTACHMENT BIT
USAGE INPUT ATTACHMENT          (= 0x00000080)  // VK IMAGE USAGE INPUT ATTACHMENT BIT
ALWAYS                          (= 0xffffffff)  // Always compressed

Default values for this setting:
DEFAULT:    0x00000008
	USAGE STORAGE                           

------------------------------------------------------------
VK INVARIANT DECORATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control how the compiler implements the SPIR-V Invariant decoration

FORCE POSITION INVARIANT  (= 0x00000001)  // Treat the position output as invariant, even if it's not decorated

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK LDC WITH LDG HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of appHashes to replace constant loads with LDG for. ';' delimited eg: '0xbadcf00ddeadbeef;'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
VK LOAD BALANCE SUSPENSION THRESHOLD HIGH
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Resume the load balancer if we are GPU limited for >= than this number of frames out of the last 32


Default values for this setting:
DEFAULT:    0x00000014

------------------------------------------------------------
VK LOAD BALANCE SUSPENSION THRESHOLD LOW
------------------------------------------------------------
This key is of type DWORD
This key is defined for 
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Suspend the load balancer if we are GPU limited for <= than this number of frames out of the last 32


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
VK LOW LATENCY BUFFER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Buffer time above GPU render time to limit FPS in microseconds. Default 800 (0.8ms).


------------------------------------------------------------
VK LOW LATENCY ETW EVENTS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Key to enable event logs dump for Reflex events in the Vulkan driver

DISABLE  (= 0x00000000)  // Disabled
ENABLE   (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
VK LOW LATENCY GAIN A
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

VK Reflex controller gain A.


Default values for this setting:
DEFAULT:    0x0000000A

------------------------------------------------------------
VK LOW LATENCY GAIN B
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

VK Reflex controller gain B.


Default values for this setting:
DEFAULT:    0x00000014

------------------------------------------------------------
VK LOW LATENCY GAP TARGET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

VK Reflex controller target gap time in microseconds.

MIN  (= 0x00000000)
MAX  (= 0x000003e8)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
VK LOW LATENCY OVERLAP TARGET
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

VK Reflex controller target overlap time in microseconds.

MIN  (= 0x00000000)
MAX  (= 0x00002710)

Default values for this setting:
DEFAULT:    0x000007D0

------------------------------------------------------------
VK MEMORY OVERALLOCATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls driver behavior for memory overallocation.

DISABLED                   (= 0x00000000)  // Disabled
EXPOSE AMD OVERALLOCATION  (= 0x00000001)  // Expose the VK AMD memory overallocation behavior extension
ALLOW OVERALLOCATION       (= 0x00000002)  // Allow overallocation by default
ALLOW ON PRE TURING        (= 0x00000004)  // Allow overallocation on Maxwell2+ - compression will be disabled

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
VK NVVM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Enable NVVM compiler for Vulkan

DISABLE       (= 0x00000000)  // Disable NVVM.
ENABLE        (= 0x00000001)  // Enable NVVM.
AUTO          (= 0x00000002)  // Driver default.
FORCE ENABLE  (= 0x00000003)  // Force enable NVVM, even for unsupported SPIR-V.

Default values for this setting:
DEFAULT:    AUTO

------------------------------------------------------------
VK NV EXPOSE DTM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

FALSE  (= 0x00000000)  // Don't expose VK NV texture dirty tile map
TRUE   (= 0x00000001)  // Expose VK NV texture dirty tile map

Default values for this setting:
DEFAULT:    FALSE

------------------------------------------------------------
VK NV RAYTRACING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

DISABLE        (= 0x00000000)  // Don't expose VK NV raytracing
ENABLE         (= 0x00000001)  // Expose VK NV raytracing
ENABLE IF TTU  (= 0x00000002)  // Expose VK NV raytracing if TTU is present

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
VK NV RAYTRACING SM SCG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

FORCE DISABLE                 (= 0x00000000)  // Disable SMSCG for ray tracing
ALLOW ENABLE                  (= 0x00000001)  // Do not disable SMSCG for ray tracing
FORCE DISABLE PRE GA10X ONLY  (= 0x00000002)  // Disable SMSCG for raytracing only on pre-GA10X GPUs

Default values for this setting:
DEFAULT:    FORCE DISABLE PRE GA10X ONLY

------------------------------------------------------------
VK OVERRIDE COPYIMAGE ASPECT Z TO ZS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether we override aspect's VK IMAGE ASPECT STENCIL BIT to set When choosing a path to fulfill VkCmdCopyImage call with on VK IMAGE ASPECT DEPTH BIT set in aspect and at least one of the source image and destination image in depth/stencil interleaved format. When enabled, we actually use compute copy to copy both depth component and stencil component for better performance. Make sure not breaking application's functionality before enable this.

DISABLED  (= 0x00000000)  // Disabled
ENABLED   (= 0x00000001)  // Enabled

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK OVERRIDE SHADER GROUP HANDLE SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When set, override the shader group handle size we return to the application


Default values for this setting:
DEFAULT:    0x00000020

------------------------------------------------------------
VK OVERRIDE VENDORID
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override vendorID in physical device properties. Useful when a game has vendor-specific codepaths. Set to non-zero to enable.


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK PARTIAL LOOP UNROLL HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of shader appHashes to enable Partial Loop Unroll for. ';' delimited eg: '0xbadcf00ddeadbeef;'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
VK POST UNROLL HOIST HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of shader appHashes to enable Post Unroll Hoist for. ';' delimited eg: '0xbadcf00ddeadbeef;'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
VK PRESENT STATE CACHE ALLOWED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Whether the present state cache can be enabled if needed (follows a heuristic)

FALSE  (= 0x00000000)
TRUE   (= 0x00000001)

Default values for this setting:
DEFAULT:    TRUE

------------------------------------------------------------
VK PUSH BINDLESS DESCRIPTORS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls the use of the VPC/root table for pushing descriptors.

USE ROOT TABLE  (= 0x00000001)  // Use root table constant buffers. Where HW permits, this takes precedence over USE VPC
USE VPC         (= 0x00000002)  // Use memory from the driver constant buffer

Default values for this setting:
DEFAULT:    0x00000003
	USE ROOT TABLE                          
	USE VPC                                 

------------------------------------------------------------
VK QUEUES SINGLE STATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Map all VK queues to a single state

DISABLE  (= 0x00000000)  // Vulkan Queues have their own state.
ENABLE   (= 0x00000001)  // Force Vulkan Queues to share a single state.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
VK QUEUE SUBMIT FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Flags to control vkQueueSubmit operation

NONE         (= 0x00000000)  // No flags set
DEFER FLUSH  (= 0x00000001)  // Defers state flushing for queue submits that don't have any fence/semaphore synchronization

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
VK RAY BVH BUILD BATCHING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls enablement of BVH build batching in RTCore

DISABLE  (= 0x00000000)  // Disable BVH build batching
ENABLE   (= 0x00000001)  // Enable BVH build batching

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
VK RAY BVH BUILD BATCHING FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls options for BVH build batching in RTCore

FLUSH ON ALL BARRIERS    (= 0x00000001)  // Flush batched builds on all barrier calls
FLUSH BEFORE TRACE RAYS  (= 0x00000002)  // Flush batched builds before vkCmdTraceRays
SKIP FLUSH ON TIMESTAMP  (= 0x00000004)  // Don't flush batched builds on vkCmdWriteTimestamp

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK RDMA MEM
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls whether RDMA memory is supported in vulkan.

DISABLED                      (= 0x00000000)  // Disable RDMA memory in vulkan.
ENABLED                       (= 0x00000001)  // Enable RDMA memory in vulkan.
ENABLED WITH CPU ACCESS       (= 0x00000002)  // Enable RDMA memory with CPU access enabled in vulkan (requires debug or develop kmd).
ENABLED WITH UMD RESERVATION  (= 0x00000003)  // Enable RDMA memory and reserve memory in UMD.

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
VK REDUCTION ARCH MASK
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

A mask of gpu archs on which reduction tracking will be enabled

KEPLER   (= 0x00000001)
MAXWELL  (= 0x00000002)
PASCAL   (= 0x00000004)
VOLTA    (= 0x00000008)
TURING   (= 0x00000010)
AMPERE   (= 0x00000020)
HOPPER   (= 0x00000040)
ALL      (= 0xffffffff)

Default values for this setting:
DEFAULT:    0xFFFFFFFE
	MAXWELL                                 
	PASCAL                                  
	VOLTA                                   
	TURING                                  
	AMPERE                                  
	HOPPER                                  
	0xFFFFFF80

------------------------------------------------------------
VK REDUCTION REGISTER PER SUBTILE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Modifies PerfknobA REGISTER FILE PER SUBTILE used by the non-dynamic reduction tracker


Default values for this setting:
DEFAULT:    0x00000080

------------------------------------------------------------
VK REDUCTION SUBTILING PERF KNOB A
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Manually sets the subtiling perf knob a method

GM20Y DEFAULT  (= 0x087f6080)  // Default on GM20Y (T210)

Default values for this setting:
DEFAULT:    0x20164010

------------------------------------------------------------
VK REDUCTION WARPS PER SUBTILE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Default PerfknobA QUADS PER SUBTILE used by the reduction tracker


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
VK RTCORE DISABLE CTA SWIZZLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Option to force-disable the RTCore CTA swizzle optimization.

FORCE DISABLE   (= 0x00000001)  // Force RTCore CTA swizzle off
RTCORE DEFAULT  (= 0x00000000)  // RTCore default

Default values for this setting:
DEFAULT:    RTCORE DEFAULT

------------------------------------------------------------
VK SCALARIZER HASH LIST
------------------------------------------------------------
This key is of type STRING
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

String for passing list of shader appHashes to disable Scalarizer for. ';' delimited eg: 'badcf00ddeadbeef;'


Default values for this setting:
DEFAULT:    

------------------------------------------------------------
VK SEMAPHORE CONFIG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls vkSemaphore creation

DISALLOW MONITORED FENCE  (= 0x00000000)  // Use the legacy D3DDDI SEMAPHORE object
USE MONITORED FENCE       (= 0x00000001)  // Use monitored fence when possible
CREATE SIGNALED           (= 0x00000002)  // Create the monitored fence signaled
NO GPU ACCESS             (= 0x00000004)  // Set NoGPUAccess flags
ALLOW SHARED              (= 0x00000008)  // Shared semaphores use monitored fence objects

Default values for this setting:
DEFAULT:    0x00000007
	USE MONITORED FENCE                     
	CREATE SIGNALED                         
	NO GPU ACCESS                           

------------------------------------------------------------
VK SEMAPHORE HAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Select which semaphore HAL is used for timeline semaphore operations on non-WDDM platforms.  If an unsupported HAL is requested, the next-best supported HAL is chosen.  To facilitate this, better HALs must have larger values below.

FERMI       (= 0x00000000)  // Use the baseline 32-bit host semaphore HAL.  Supported by all GPUs.
VOLTA       (= 0x00000001)  // Use the 64-bit host semaphore HAL.  Supported on Volta and above GPUs.
HW DEFAULT  (= 0xffffffff)  // Choose the best HAL supported by the hardware.

Default values for this setting:
DEFAULT:    HW DEFAULT

------------------------------------------------------------
VK SHADER COPARGS FORCE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control which compiler options/optimizations are force enabled/disabled.

ALL DEFAULT                  (= 0x00000000)  // Set all values to driver default
HIGH LATENCY HOIST ENABLE    (= 0x00000001)  // Force enable High Latency Hoist
HIGH LATENCY HOIST DISABLE   (= 0x00000002)  // Force disable High Latency Hoist
PARTIAL LOOP UNROLL ENABLE   (= 0x00000004)  // Force enable Partial Loop Unrolling
PARTIAL LOOP UNROLL DISABLE  (= 0x00000008)  // Force disable Partial Loop Unrolling
FULL LOOP UNROLL ENABLE      (= 0x00000010)  // Force enable Full Loop Unrolling
FULL LOOP UNROLL DISABLE     (= 0x00000020)  // Force disable Full Loop Unrolling
POST UNROLL HOIST ENABLE     (= 0x00000040)  // Force enable Post Unroll Hoist
POST UNROLL HOIST DISABLE    (= 0x00000080)  // Force disable Post Unroll Hoist
SCALARIZER ENABLE            (= 0x00000100)  // Force enable Scalarizer
SCALARIZER DISABLE           (= 0x00000200)  // Force disable Scalarizer
CONSTANT FOLDING ENABLE      (= 0x00000400)  // Force enable Constant folding
CONSTANT FOLDING DISABLE     (= 0x00000800)  // Force disable Constant folding
ENABLE ALL                   (= 0x55555555)  // Force enable all options/optimizations
DISABLE ALL                  (= 0xaaaaaaaa)  // Force disable all options/optimizations

------------------------------------------------------------
VK SINGLE NODE SCG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

When enabled, 3d queues will create an extra ganged compute channel in the 3d context

DISABLED  (= 0x00000000)  // Disable single-node SCG
ENABLED   (= 0x00000001)  // Enable single-node SCG

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
VK SLI PERF WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Workaround to fix SLI performance issue

DISABLED           (= 0x00000000)  // Workaround Disabled
MAX PSTATE NVLINK  (= 0x00000001)  // Use maximum pstate on NVLINK

Default values for this setting:
DEFAULT:    0x00000000
	DISABLED                                

------------------------------------------------------------
VK SPARSE IMAGE COMPRESSION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls on which usage flags sparse images are compressed

NEVER                           (= 0x00000000)  // Never
USAGE TRANSFER SRC              (= 0x00000001)  // VK IMAGE USAGE TRANSFER SRC BIT
USAGE TRANSFER DST              (= 0x00000002)  // VK IMAGE USAGE TRANSFER DST BIT
USAGE SAMPLED                   (= 0x00000004)  // VK IMAGE USAGE SAMPLED BIT
USAGE STORAGE                   (= 0x00000008)  // VK IMAGE USAGE STORAGE BIT
USAGE COLOR ATTACHMENT          (= 0x00000010)  // VK IMAGE USAGE COLOR ATTACHMENT BIT
USAGE DEPTH STENCIL ATTACHMENT  (= 0x00000020)  // VK IMAGE USAGE DEPTH STENCIL ATTACHMENT BIT
USAGE TRANSIENT ATTACHMENT      (= 0x00000040)  // VK IMAGE USAGE TRANSIENT ATTACHMENT BIT
USAGE INPUT ATTACHMENT          (= 0x00000080)  // VK IMAGE USAGE INPUT ATTACHMENT BIT
ALWAYS                          (= 0xffffffff)  // Always compressed

Default values for this setting:
DEFAULT:    0xFFFFFFFF
	USAGE TRANSFER SRC                      
	USAGE TRANSFER DST                      
	USAGE SAMPLED                           
	USAGE STORAGE                           
	USAGE COLOR ATTACHMENT                  
	USAGE DEPTH STENCIL ATTACHMENT          
	USAGE TRANSIENT ATTACHMENT              
	USAGE INPUT ATTACHMENT                  
	ALWAYS                                  

------------------------------------------------------------
VK SWAPCHAIN CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control behavior of VkSwapchainKHR and VkQueuePresentKHR

AUTO                         (= 0x00000000)  // Driver decides
WDDM ZCFLIP DISABLE          (= 0x00000001)  // Force disable of zero-copy flip for WDDM
WDDM ZCFLIP ENABLE           (= 0x00000002)  // Force enable of zero-copy flip for WDDM
WDDM ZCFLIP FORCE ASYNCBLIT  (= 0x00000004)  // Force zero-copy flip to use ASYNCBLIT
WDDM SCG DISABLE             (= 0x00000010)  // Force disallow present on async compute for WDDM
WDDM SCG ENABLE              (= 0x00000020)  // Force allow present on async compute for WDDM
X11 ZCFLIP DISABLE           (= 0x00000100)  // Force disable zero-copy flip for X11
X11 ZCFLIP ENABLE            (= 0x00000200)  // Force enable zero-copy flip for X11
X11 SCG DISABLE              (= 0x00001000)  // Force disallow present on async compute for X11
X11 SCG ENABLE               (= 0x00002000)  // Force allow present on async compute for X11
WDDM NO ASYNC CONTEXT        (= 0x00010000)  // Debug: WDDM executes present flip in the VkQueue's HW context

Default values for this setting:
DEFAULT:    0x00000000
	AUTO                                    

------------------------------------------------------------
VK SWAPCHAIN WAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Workarounds related to VkSwapchainKHR

NONE                    (= 0x00000000)  // No Workarounds
NO OOD WINDOW RESIZE    (= 0x00000001)  // WAR: do not set OUT OF DATE from window resize or fullscreen toggle or drawable size mismatch
NO OOD WINDOW MINIMIZE  (= 0x00000002)  // WAR: do not set OUT OF DATE when window minimizes
NO OOD                  (= 0x00000004)  // Do not set OUT OF DATE in all conditions
NO FSELOST              (= 0x00000008)  // Do not set FSE Lost in all conditions
NO SYS FALLBACK         (= 0x00000010)  // Do not fallback to SYS alloc for swapchain images

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
VK TILEDCACHE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

MAXWELL TILEDCACHE override for Vulkan. 

DYNAMIC                              (= 0x00000000)  // Heuristic-based enable tuned to specific architectures
FORCE DISABLE                        (= 0x00000001)  // Will turn TC off for every vulkan queue
FORCE ENABLE                         (= 0x00000002)  // Will turn TC on for every vulkan queue
KEEP PIPE BIND FLUSH                 (= 0x00000004)  // Keep unnecessary TC flush on pipeline bind added by WARs
IGNORE NEW OOODRAIN HASHES           (= 0x00000008)  // Ignore new OoODrainIssues hashes for TC
OOODRAIN FRAC MASK                   (= 0x000000f0)  // Fraction/15 of frag shaders with OoODrainIssues allowed for TC, 15 is ignore
DONT FLUSH RENDERPASS                (= 0x00000100)  // Don't add TC flush after renderpass
IGNORE PRIM MUL CONST VERSION        (= 0x00000200)  // Ignore product of PRIM LIMIT and CONSTANT BUFFER VERSION LIMIT
DONT FLUSH AFTER CLEAR WHEN ANY ZBC  (= 0x00000400)  // Don't TC flush when any buffers in a clear get ZBC
CODE SIZE FLUSH INTRA SUBPASS MASK   (= 0x00ff0000)  // Unique frag ucode size sum multiplied by 1KB to flush inside subpass, 0 is ignore
CODE SIZE FLUSH INTER SUBPASS MASK   (= 0xff000000)  // Unique frag ucode size sum multiplied by 1KB to flush between subpasses, 0 is ignore
MAXWELL DEFAULT                      (= 0x000007fc)  // Old heuristic
PASCAL DEFAULT                       (= 0x10150000)  // New heuristic for Pascal+ GPUs excluding GV11B
TURING OR NEWER DEFAULT              (= 0x18200000)  // New heuristic for Turing+ GPUs

Default values for this setting:
DEFAULT:    0x00000000
	DYNAMIC                                 
	DYNAMIC                                 
	DYNAMIC                                 
	DYNAMIC                                 

------------------------------------------------------------
VK TILEDCACHE PRIM LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Fine tune max limits to allow TC per subpass in VK TILEDCACHE DYNAMIC

TOTAL INPUT MASK         (= 0x000fffff)  // allowed approx input prims divided by 0x1000, 0 means no limit
INDIR COUNT MASK         (= 0xfff00000)  // allowed number of DrawIndirect/Mesh, 0xfff00000 means no limit
MAXWELL DEFAULT          (= 0xfff00000)  // previous driver had no limit
PASCAL OR NEWER DEFAULT  (= 0x00000026)  // based on empirical data from nvbugs/2487405

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK TILED CACHE CONSTANT BUFFER VERSION LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A limit on the number of constant buffer operations we allow before disabling TC

12BPP MASK               (= 0xff000000)  // multiply by 8 is limit when framebuffer total bytes per pixel > 12
8BPP MASK                (= 0x00ff0000)  // multiply by 8 is limit when framebuffer total bytes per pixel > 8
4BPP MASK                (= 0x0000ff00)  // multiply by 8 is limit when framebuffer total bytes per pixel > 4
0BPP MASK                (= 0x000000ff)  // multiply by 8 is limit when framebuffer total bytes per pixel >= 0
MAXWELL DEFAULT          (= 0x04040404)  // conservative limit from nvbugs/1556442
PASCAL OR NEWER DEFAULT  (= 0x45110904)  // empirical data from nvbugs/2487405, mostly for StrangeBrigade and GFXBench5

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK TILED CACHE CONSTANT BUFFER VERSION LIMIT2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

A limit on the number of constant buffer operations we allow before disabling TC

28BPP MASK               (= 0xff000000)  // multiply by 8 is limit when framebuffer total bytes per pixel > 28
24BPP MASK               (= 0x00ff0000)  // multiply by 8 is limit when framebuffer total bytes per pixel > 24
20BPP MASK               (= 0x0000ff00)  // multiply by 8 is limit when framebuffer total bytes per pixel > 20
16BPP MASK               (= 0x000000ff)  // multiply by 8 is limit when framebuffer total bytes per pixel > 16
MAXWELL DEFAULT          (= 0x04040404)  // conservative limit from nvbugs/1556442
PASCAL OR NEWER DEFAULT  (= 0x05050f21)  // empirical data from nvbugs/2761885, mostly updated for ZombieArmy4

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VK TRANSFER QUEUES LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Limits the number of transfer queues exposed through vkGetPhysicalDeviceQueueFamilyProperties.


Default values for this setting:
DEFAULT:    0xFFFFFFFF

------------------------------------------------------------
VK TURING TILE POOL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls tile pool compression on Turing

ALWAYS UNCOMPRESSED               (= 0x00000001)  // always allocate uncompressed tile pools (and stay uncompressed)
ALWAYS COMPRESSED                 (= 0x00000002)  // always allocate compressed tile pools
UNCOMPRESSED IF DEDICATED IN USE  (= 0x00000004)  // allocate uncompressed tile pool (and stay uncompressed) if dedicated allocations were used
COMPRESS ON ADDITIONAL MAPPING    (= 0x00000008)  // compress tile pool when addition mappings are requested
WDDM2 DEFAULT                     (= 0x00000000)  // wddm2 default (allocate uncompressed and don't compress on addition mapping)

Default values for this setting:
DEFAULT:    0x00000004
	UNCOMPRESSED IF DEDICATED IN USE        

------------------------------------------------------------
VK UCODE SHARING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Select the level of ucode sharing in vulkan

DISABLE  (= 0x00000000)  // Do not share ucode from different pipeline, even with identical ucode hashes.
ENABLE   (= 0x00000001)  // Share ucode from different VKPipeline, when identical post compilation ucode hashes are detected.

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
VK UNDEFINED LAYOUT TRANSITION CLEAR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls clear behavior on layout transition from undefined layout

DISABLE                            (= 0x00000000)  // disable
FORCE ENABLE                       (= 0x00000001)  // enable on all HW
HW DEFAULT                         (= 0x00000002)  // enable on HW that needs it
FORCE ENABLE ALLOW TRANSFER QUEUE  (= 0x00000003)  // enable on all HW, also for layout transition submitted to transfer queue
HW DEFAULT ALLOW TRANSFER QUEUE    (= 0x00000004)  // enable on HW that needs it, also for layout transition submitted to transfer queue

Default values for this setting:
DEFAULT:    HW DEFAULT ALLOW TRANSFER QUEUE

------------------------------------------------------------
VK UNIFORM BRANCH HOIST
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls NVVM UniformBranchHoist pass

DISABLE  (= 0x00000000)  // disable
DETECT   (= 0x00000001)  // enable for whitelisted shader hashes only
ENABLE   (= 0x00000002)  // enable for all shaders

Default values for this setting:
DEFAULT:    DETECT

------------------------------------------------------------
VK UNMAPPED IMAGE MEMORY TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Advertise an unmapped sysmem memory type for Vulkan images

DISABLED         (= 0x00000000)
GENERIC ENABLED  (= 0x00000001)
DEPTH ENABLED    (= 0x00000002)

Default values for this setting:
DEFAULT:    0x00000003

------------------------------------------------------------
VK VIDMEM IMAGE MEMORY TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Advertise an segregate vidmem memory type for Vulkan images

DISABLED            (= 0x00000000)
ENABLED             (= 0x00000001)
WDDM TIER1 DEFAULT  (= 0x00000001)  // Default policy for Tier1 HW on WDDM

Default values for this setting:
DEFAULT:    DISABLED

------------------------------------------------------------
VK WARP SIZE MODIFICATION
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls warp size modification performance knob (reduction tracker)

DEFAULT       (= 0x00000000)  // Driver turns on warp size modification
PS FORCE OFF  (= 0x00000001)  // Warp Size Modification is always disabled in pixel shaders
PS FORCE ON   (= 0x00000002)  // Warp Size Modification is always enbled in pixel shaders

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
VK WDDM VID FRAGMENTATION RESERVE RATIO
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Percentage of vidmem to reserve to combat fragmentation for Vulkan (capped at 128 MB)


Default values for this setting:
DEFAULT:    0x00000004

------------------------------------------------------------
VK ZCULL LOAD STORE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Controls load/store to the zcull backing store

DISABLE  (= 0x00000000)  // Disable zcull load/store.
ENABLE   (= 0x00000001)  // Enable zcull load/store.
AUTO     (= 0x00000002)  // Enable zcull load/store if supported on the hardware.

Default values for this setting:
DEFAULT:    0x00000002
	AUTO                                    

------------------------------------------------------------
VK ZCULL MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

PREFER DEPTH    (= 0x26edc761)  // Prefer Z-only zcull formats, only use ZS formats for VK FORMAT S8 UINT
PREFER STENCIL  (= 0x26edc762)  // Use ZS formats with any image containing stencil
DEPTH ONLY      (= 0x26edc763)  // Do not use ZS formats

Default values for this setting:
DEFAULT:    PREFER DEPTH

------------------------------------------------------------
VK ZCULL SUBREGIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controls the use of zcull subregions for Vulkan

DISABLE  (= 0x00000000)  // Disable zcull subregions.
ENABLE   (= 0x00000001)  // Enable zcull subregions.

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
VOLTA A TILEDCACHE BUFFERINTERLEAVE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

4 3-bit fields to set buffering mode for betaCb / PagePool / cbTblIndex / BinnerCount (default for all - double buffered)


Default values for this setting:
DEFAULT:    0x00002313

------------------------------------------------------------
VOLTA A TILEDCACHE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControl method


Default values for this setting:
DEFAULT:    0x08080202

------------------------------------------------------------
VOLTA A TILEDCACHE CONTROL EXTENDED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheControlExtended method


Default values for this setting:
DEFAULT:    0x00000008

------------------------------------------------------------
VOLTA A TILEDCACHE L2 USAGE
------------------------------------------------------------
This key is of type FLOAT
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set ratio of L2 allowed to be used for Tiled Caching


Default values for this setting:
DEFAULT:    0.500000

------------------------------------------------------------
VOLTA A TILEDCACHE STATETHRESHOLD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

set value of TiledCacheStateThreshold method


Default values for this setting:
DEFAULT:    0x00080001

------------------------------------------------------------
VOLTA UAV L1 CACHE OCGCONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Enable control for L1 caching of surface instructions.

DISABLE FOR SULD  (= 0x00000001)  // force SYS scope (disables L1 caching) for SULD instructions of non-coherent UAVs
DISABLE FOR SUST  (= 0x00000002)  // force SYS scope (disables L1 caching) for SUST instructions of non-coherent UAVs
ALLOW FOR SUATOM  (= 0x00000004)  // force CTA scope (ENABLES L1 caching) for SUATOM/SURED instructions UAVs. This is generally disallowed by the DX spec

Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
VRINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Display the VR indicator

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable VR indicator
SHOW VR INDICATOR        (= 0x80402010)  // Enable VR indicator
SHOW VRS INDICATOR       (= 0x80402011)  // Enable VRS indicator
SHOW AUTOVRS INDICATOR   (= 0x80402012)  // Enable AutoVRS indicator

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
VRPRERENDERLIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN             (= 0x00000000)
MAX             (= 0x000000ff)
APP CONTROLLED  (= 0x00000000)  // The present limit will be controlled by application or driver adjustments.
DEFAULT         (= 0x00000001)

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
VRRFEATUREINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // Disable the feature toggle
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Enable the feature toggle

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
VRRINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Display the VRR State Indicator

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable G-Sync State Indicator
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable G-Sync State Indicator

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
VRROVERLAYINDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLED, OFF, 0, FALSE  (= 0x00000000)  // Disable VRR Onverlay
ENABLED, ON, 1, TRUE     (= 0x00000001)  // Enable VRR Overlay

Default values for this setting:
DEFAULT:    ENABLED

------------------------------------------------------------
VRRREQUESTSTATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLED                 (= 0x00000000)  // Disable G-Sync
FULLSCREEN ONLY          (= 0x00000001)  // Enable G-SYNC in fullscreen mode only
FULLSCREEN AND WINDOWED  (= 0x00000002)  // Enable G-SYNC in fullscreen and windowed modes

Default values for this setting:
DEFAULT:    FULLSCREEN ONLY

------------------------------------------------------------
VRR APP OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Profile-specific override. Overrides the VRR MODE global setting

ALLOW          (= 0x00000000)  // Honor the VRR MODE setting,G-SYNC On
FORCE OFF      (= 0x00000001)  // G-SYNC cannot be enabled for this app
DISALLOW       (= 0x00000002)  // VRR off
ULMB           (= 0x00000003)  // ULMB On
FIXED REFRESH  (= 0x00000004)  // Fixed Refresh mode

Default values for this setting:
DEFAULT:    ALLOW

------------------------------------------------------------
VRR APP OVERRIDE REQUEST STATE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Profile-specific override. Overrides the VRR MODE global setting

ALLOW          (= 0x00000000)  // Honor the VRR MODE setting,G-SYNC On
FORCE OFF      (= 0x00000001)  // G-SYNC cannot be enabled for this app
DISALLOW       (= 0x00000002)  // VRR off
ULMB           (= 0x00000003)  // ULMB On
FIXED REFRESH  (= 0x00000004)  // Fixed Refresh mode

Default values for this setting:
DEFAULT:    ALLOW

------------------------------------------------------------
VRR DEBUG OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

For debugging G-SYNC, bits to alter behavior

NONE                (= 0x00000000)  // Use standard configuration
FORCE ON            (= 0x00000001)  // Force use of VRR regardless of application profile (unless UNSUPPORTED)
FORCE OFF           (= 0x00000002)  // Disable use of VRR regardless of application profile
ENABLE VIDEOBRIDGE  (= 0x00000004)  // Allow UMDs to make use of the VideoBridge
ENABLE DWM SUPPORT  (= 0x00000008)  // Enable with DWM on
FORCE TIMER OFF     (= 0x00000010)  // Force Timer usage off

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
VRR MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

DISABLED                 (= 0x00000000)  // Disable G-Sync
FULLSCREEN ONLY          (= 0x00000001)  // Enable G-SYNC in fullscreen mode only
FULLSCREEN AND WINDOWED  (= 0x00000002)  // Enable G-SYNC in fullscreen and windowed modes

Default values for this setting:
DEFAULT:    FULLSCREEN ONLY

------------------------------------------------------------
VRR OVERRIDE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Override VRR configuration

FORCE ON            (= 0x00000001)  // Force use of VRR regardless of application profile
FORCE OFF           (= 0x00000002)  // Disable use of VRR regardless of application profile
ENABLE VIDEOBRIDGE  (= 0x00000004)  // Allow UMDs to make use of the VideoBridge
ENABLE DWM SUPPORT  (= 0x00000008)  // Enable with DWM on
FORCE TIMER OFF     (= 0x00000010)  // Force Timer usage off

Default values for this setting:
DEFAULT:    0x00000008
	ENABLE DWM SUPPORT                      

------------------------------------------------------------
VRR WINDOWED APP OVERRIDE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Profile-specific override for windowed mode G-SYNC. Overrides the VRR MODE global setting

ALLOW      (= 0x00000000)  // Honor the VRR MODE setting, windowed G-SYNC On
FORCE OFF  (= 0x00000001)  // Winowed G-SYNC cannot be enabled for this app

Default values for this setting:
DEFAULT:    ALLOW

------------------------------------------------------------
VR FEATURES DISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Used for disabling VR features : MRS, SPS, LMS, VRS and MVR

NONE                     (= 0x00000000)  // None of the VR features are disabled
MULTI RES SHADING        (= 0x00000001)  // If bit set, disables the Multi-Resolution Shading Feature
SINGLE PASS STEREO X     (= 0x00000002)  // If bit set, disables the Stereo-X Feature
LENS MATCH SHADING       (= 0x00000004)  // If bit set, disables the Lens Match Shading Feature
VRCOMPOSITOR NODE        (= 0x00000008)  // If bit set, disables using SCGCompute node for VR on Pascal. i.e. keeps using LowLatency on Pascal
VARIABLE RATE SHADING    (= 0x00000010)  // If bit set, disable the Variable Rate Shading Feature
SINGLE PASS STEREO XYZW  (= 0x00000020)  // If bit set, disable the Stereo-XYZW Feature
MULTIVIEW RENDERING      (= 0x00000040)  // If bit set, disable the Multi-View Rendering Feature

Default values for this setting:
DEFAULT:    0x00000000
	NONE                                    

------------------------------------------------------------
VR PERF OPTIONS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

VR - Perf optimizations

DEFAULT         (= 0x00000000)  // No optimization.
NO MIRROR EGPU  (= 0x00000001)  // Disable VR mirror window on eGPU configuration
NO MIRROR       (= 0x00000002)  // Disable VR mirror window on any configuration

Default values for this setting:
DEFAULT:    0x00000000
	DEFAULT                                 

------------------------------------------------------------
VSVERSIONCAP
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

cap shader version to this value (expressed in D3D-style, i.e. version 1.4 == 0xffff0104)

MIN  (= 0xfffe0000)
MAX  (= 0xffffffff)

Default values for this setting:
DEFAULT:    MAX

------------------------------------------------------------
VSYNCMODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

PASSIVE, APP CONTROLLED                      (= 0x60925292)  // App-controlled Vsync
FORCEOFF, DISABLE, OFF, FALSE, 0             (= 0x08416747)  // Force Vsync off
FORCEON, ENABLE, ON, TRUE, FLIPINTERVAL1, 1  (= 0x47814940)  // Force Vsync on
FLIPINTERVAL2, 2                             (= 0x32610244)  // Force Vsync on; wait at least 2 vsyncs between flips (30 fps max)
FLIPINTERVAL3, 3                             (= 0x71271021)  // Force Vsync on; wait at least 3 vsyncs between flips (20 fps max)
FLIPINTERVAL4, 4                             (= 0x13245256)  // Force Vsync on; wait at least 4 vsyncs between flips (15 fps max)
VIRTUAL                                      (= 0x18888888)  // Virtual Vsync

Default values for this setting:
DEFAULT:    PASSIVE

------------------------------------------------------------
VSYNCSMOOTHAFR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Key to control smooth AFR mode

OFF, 0, FALSE, DISABLED  (= 0x00000000)
ON, 1, TRUE, ENABLED     (= 0x00000001)

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
VSYNCTEARCONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Tear control: if enabled and vsync is forced on, framerates are clamped to 60 (or 30/20/15) hz, but rates lower than that run with vsync disabled.

DISABLE, OFF, FALSE, 0  (= 0x96861077)  // Tear control disabled
ENABLE, ON, TRUE, 1     (= 0x99941284)  // Tear control enabled

Default values for this setting:
DEFAULT:    DISABLE

------------------------------------------------------------
VSYNCVRRCONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls enabling or disabling VRR for OGL or D3D

DISABLE, FALSE, 0, OFF  (= 0x00000000)  // VRR off
ENABLE, TRUE, 1, ON     (= 0x00000001)  // VRR on
NOTSUPPORTED, NONE      (= 0x9f95128e)  // VRR not supported

Default values for this setting:
DEFAULT:    ENABLE

------------------------------------------------------------
VSYNC BEHAVIOR FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Flags for altering how the driver interprets VSYNC

NONE                          (= 0x00000000)
DEFAULT                       (= 0x00000000)
IGNORE FLIPINTERVAL MULTIPLE  (= 0x00000001)  // Ignore flip interval when it is greater than 1. Usually, it is used on CPL half refresh rates.

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
VSYNC FLIP USE NV INTERVAL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This controls whether we use the OS flip or the NV internal flip. This is the fix for the flip interval bug 915858

OFF, DISABLED, OS  (= 0x00000000)  // Leave the original behavior, OS flip
ON, ENABLED, NV    (= 0x00000001)  // Use the NV flip internal

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
VULKAN DEVICE SELECTION FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Vulkan Device Selection flags

NONE            (= 0x00000000)  // Default
PRIMARY DEVICE  (= 0x00000001)  // Report only the primary device

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
VULKAN FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Vulkan flags

NONE                             (= 0x00000000)  // Default
RESERVED                         (= 0x00000001)  // Reserved, was don't use sparse memory
DEDICATED ONLY FOR EXTERNAL MEM  (= 0x00000002)  // Only dedicated for external memory

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
WARDISABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined for defined(DEBUG) || defined(DEVELOP)
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

General bitmask to disable WARs for HW bugs

WAR 345079  (= 0x00000001)  // Disable WAR for bug 345079 (dst reduce color writemask bug)
WAR 353523  (= 0x00000002)  // Disable WAR for bug 353523 (disable dst reduce for Half-Life 2: Episode 2)
WAR 246795  (= 0x00000004)  // Disable WAR for bug 246795 (disable dst reduce when VCAA is in use)
WAR 451294  (= 0x00000008)  // Disable WAR for bug 451294 (improved WAR for dst reduce color writemask bug)
MASK        (= 0x0000000f)  // Mask of all bits

Default values for this setting:
DEFAULT:    0x00000002
	WAR 353523                              

------------------------------------------------------------
WDDM13 MARKER TYPE PROFILE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Enable/Disable the Profile MarkerType, which allows high frequency timing data to be logged to ETW.

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
WDDMV2 DEALLOC2 FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

FORCE ALLOCATION IN USE FOR DEALLOC2  (= 0x00000001)  // Always assume that allocation to be deleted is in use. It will tell DXGK to defer destroy untill safe.
DISABLE RS3 HOTFIX FOR 2006962        (= 0x00000002)  // Disable the hotfix for clearing the AssumeNotInUse flag on RS3 to avoid: Error: Driver Verifier error: The driver did not set D3D12DDI DEALLOCATE FLAGS 0022 ASSUME NOT IN USE and D3D12DDI DEALLOCATE FLAGS 0022 SYNCHRONOUS DESTROY when calling DeallocateCB with a valid hResource.

------------------------------------------------------------
WDDMV2 RESIDENCY FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

BIND ON ALLOCATE                     (= 0x00000001)  // Bind block (make allocation resident) on allocate.
WAITONCPU FOR PAGING AFTER ALLOCATE  (= 0x00000002)  // Wait on CPU for paging fenceValue returned at MakeResident. Ignored when BIND ON ALLOCATE is not set.
WAITONCPU FOR PAGING BEFORE PRESENT  (= 0x00000004)  // Wait on CPU before present for max paging fenceValue to reach.
DISABLE NOTWRITTEN OPTIMIZATIN       (= 0x00000008)  // DXGK optimizes eviction based on NotWrittenTo flag in evictCB. Force NotWrittenTo=0 to disable DXGK optimization.
DISABLE EVICT ONLY IF NECESSARY      (= 0x00000010)  // Sets EvictOnlyIfNecessary of EvictCB to false, which means we are telling OS to evict the allocation asap.

------------------------------------------------------------
WDDMV2 SKIP TRIM FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

Ignore Trim calls from the OS for an application.

SKIP TRIM DISABLED    (= 0x00000000)  // Do nothing, default behavior.
SKIP TRIM NORMAL      (= 0x00000001)  // Ignore Normal trim calls.  Usually called by UMD when when makeresident calls fail or when OS requests specific bytes to be evicted when under memory pressure.  Disabling this may lead to application exiting due to Out of memory failures
SKIP TRIM PERIODIC    (= 0x00000002)  // Ignore Periodic trim calls.  Usually called OS periodically to relieve some memory pressure.  Disabling this should generally be safe though it will eventually lead to the OS calling Agressive and Normal trims when under memory pressure
SKIP TRIM AGGRESSIVE  (= 0x00000004)  // Ignore Aggressive trim calls.  Usually called by UMD or OS when under extreme memory pressure. Disabling will lead to application exiting due to Out of memory failures

------------------------------------------------------------
WFORMAT16
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

FIXED, 0  (= 0x92446898)
FLOAT, 1  (= 0x83557128)

Default values for this setting:
DEFAULT:    FIXED

------------------------------------------------------------
WFORMAT32
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

FIXED, 0  (= 0x92446898)
FLOAT, 1  (= 0x83557128)

Default values for this setting:
DEFAULT:    FLOAT

------------------------------------------------------------
WHOLE PSO MESH FLAG
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

DEFAULT WHOLEPSO    (= 0x00000000)  // Perform WholePSO compilation irrespective of attribute ordering mismatch
OPTIMIZED WHOLEPSO  (= 0x00000001)  // Perform Single Stage Functionally correct Recompilation of PS only in case of MS PS SIgnature Mismatch
SINGLE STAGE        (= 0x00000002)  // Perform Single Stage compilation irrespective of attribute ordering mismatch - may be functionally incorrect

Default values for this setting:
DEFAULT:    0x00000001
	OPTIMIZED WHOLEPSO                      

------------------------------------------------------------
WINDOWED GSYNC FOREGROUND APP POLICY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Controls the way to  decide whether app is running in foreground

FOREGROUND POLICY DEFAULT         (= 0x00000000)  // If present window is a foreground window then assume this app is in foreground
FOREGROUND POLICY PRESENT WND     (= 0x00000000)  // If present window is a foreground window then assume this app is in foreground
FOREGROUND POLICY FORCE           (= 0x00000001)  // Assume app is in foreground unconditionally
FOREGROUND POLICY FOREGROUND WND  (= 0x00000002)  // Assume app is in foreground if it owns the foreground window.

Default values for this setting:
DEFAULT:    FOREGROUND POLICY DEFAULT

------------------------------------------------------------
WKS 4PLUSGPUS RESTRICT SOURCES IN EXTENDEDVIEW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Number of Sources we can extend on Single GPU

SOURCE ONE    (= 0x00000001)  // One Source per GPU
SOURCE TWO    (= 0x00000002)  // Two Sources per GPU
SOURCE THREE  (= 0x00000003)  // Three Sources per GPU
SOURCE FOUR   (= 0x00000004)  // Four Sources per GPU

Default values for this setting:
DEFAULT:    SOURCE ONE

------------------------------------------------------------
WKS API STEREO EYES EXCHANGE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Swaps image for the left eye with image for the right eye

OFF  (= 0x00000000)  // Stereo eyes exchange off
ON   (= 0x00000001)  // Stereo eyes exchange on

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
WKS API STEREO MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Display mode to use when stereo is enabled

SHUTTER GLASSES               (= 0x00000000)  // Active stereo mode frame interleaved shutter glasses via DDC adapter shutter glasses (ELSA Revelator)
VERTICAL INTERLACED           (= 0x00000001)  // Passive stereo mode vertical interlaced
TWINVIEW                      (= 0x00000002)  // Passive stereo mode clone mode
NV17 SHUTTER GLASSES AUTO     (= 0x00000003)  // Active stereo mode frame interleaved shutter glasses via 3-pin mini-DIN auto
NV17 SHUTTER GLASSES DAC0     (= 0x00000004)  // Active stereo mode frame interleaved shutter glasses via 3-pin mini-DIN DAC0
NV17 SHUTTER GLASSES DAC1     (= 0x00000005)  // Active stereo mode frame interleaved shutter glasses via 3-pin mini-DIN DAC1
COLOR LINE                    (= 0x00000006)  // Active stereo mode frame interleaved shutter glasses via blue line adapter (StereoGraphics)
COLOR INTERLEAVED             (= 0x00000007)  // Passive stereo mode color interleaved (Sharp 3D)
ANAGLYPH                      (= 0x00000008)  // Passive stereo mode colored anaglyph (left:red right:cyan(blue+green))
HORIZONTAL INTERLACED         (= 0x00000009)  // Passive stereo mode horizontal interlaced (Arisawa/Hyundai/Zalman/Pavione/Miracube)
SIDE FIELD                    (= 0x0000000a)  // Passive stereo mode vertical subfield (Pavione/Miracube)
SUB FIELD                     (= 0x0000000b)  // Passive stereo mode horizontal subfield (Pavione/Miracube)
CHECKERBOARD                  (= 0x0000000c)  // Passive stereo mode checkerboard pattern (3D DLP)
INVERSE CHECKERBOARD          (= 0x0000000d)  // Passive stereo mode inverse checkerboard pattern (3D DLP)
TRIDELITY SL                  (= 0x0000000e)  // Passive stereo mode line-wise biased vertical interlaced (Tridelity SL/SV -> SingleView)
TRIDELITY MV                  (= 0x0000000f)  // Passive stereo mode slanted line-wise biased vertical interlaced 5 view (Tridelity MV -> MultiView)
SEEFRONT                      (= 0x00000010)  // Passive stereo mode using Seefront pattern (SeeFront)
STEREO MIRROR                 (= 0x00000011)  // Passive stereo mode clone mode with right eye mirrored (Planar)
FRAME SEQUENTIAL              (= 0x00000012)  // Active stereo mode frame interleaved (NVIDIA 3D Vision)
AUTODETECT PASSIVE MODE       (= 0x00000013)  // Passive stereo mode autodetected by monitor capabilities
AEGIS DT FRAME SEQUENTIAL     (= 0x00000014)  // Active stereo mode frame interleaved (NVIDIA AegisDT embedded emitter)
OEM EMITTER FRAME SEQUENTIAL  (= 0x00000015)  // Active stereo mode frame interleaved (GPIO connected OEM emitter)
DP INBAND                     (= 0x00000016)  // Active stereo mode frame interleaved via DisplayPort inband MSA signal
USE HW DEFAULT                (= 0xffffffff)  // Select hardware default based on capabilities
DEFAULT GL                    (= 0x00000003)  // Default for Quadro: NV17 SHUTTER GLASSES AUTO

Default values for this setting:
DEFAULT:    SHUTTER GLASSES

------------------------------------------------------------
WKS API STEREO OSD
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

USE DRIVER DEFAULT  (= 0x00000000)  // dont change driver strategy
FORCE ENABLE        (= 0x00000001)  // turn on OSD rendering
FORCE DISABLE       (= 0x00000002)  // turn off OSD rendering
MIN                 (= 0x00000000)
MAX                 (= 0x00000002)

Default values for this setting:
DEFAULT:    USE DRIVER DEFAULT

------------------------------------------------------------
WKS CLIENT ARBITRATION LOGGING
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

OFF                (= 0x00000000)  // don't log
ON                 (= 0x00000001)  // log
DBG DUMP           (= 0x00000002)  // dump the data to debug
DBG RESTRICT LOGS  (= 0x00000004)  // restrict non-clientArb event logs
DBG RESTRICT ALL   (= 0x00000008)  // restrict all non-clientArb logs
SWAPGROUP          (= 0x00000010)  // log Swapgroup Info
TEAR FREE PRESENT  (= 0x00000020)  // log Tear Free Present Info

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
WKS CURSOR MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control of workstation cursor

CURSOR TYPE MASK           (= 0x0000000f)  // which bits tell us the cursor type to use
SW CURSOR                  (= 0x00000001)  // OS SW cursor
CPU POSITION WARP          (= 0x00000002)  // HW cursor with position adjustment calculated by CPU when warping is enabled, but no shape adjustment
SOC EMULATED CURSOR        (= 0x00000003)  // NO HW cursor, but cursor emulated by blending cursor shape on scanoutComposition present
COMBINED CURSOR            (= 0x00000004)  // Combined mode that DWM flipping uses SW CURSOR, app flipping uses REDRAW DESKTOP (only on WDDM2)
REDRAW METHOD MASK         (= 0x000000f0)  // which bits tell us the redrawing method to trigger cursor drawing
REDRAW SETPIXEL            (= 0x00000010)  // use set pixel to trigger the scanout composition pipeline
REDRAW RENDER BEFORE FLIP  (= 0x00000020)  // use render before flip call to trigger the scanout composition pipeline, draws directly to the primary
REDRAW DESKTOP             (= 0x00000040)  // use redraw window to trigger the scanout composition pipeline
REPLACE CURSOR SHAPE MASK  (= 0x00000f00)  // which bits tell us whether replacing cursor shape with pre-defined shape when CPU POSITION WARP is set
REPLACE OFF                (= 0x00000000)  // do not replace the cursor shape with pre-defined shape
REPLACE ON                 (= 0x00000100)  // replace cursor shape with pre-defined shape
CURSOR INFO MASK           (= 0x0000f000)  // mask which bits are responsible to select a cursor shape tagging with type indicator
CURSOR INFO OFF            (= 0x00000000)  // no visible cursor shape tagging
CURSOR INFO HW             (= 0x00001000)  // tag gpu 'H'w cursor with a 'H' in the lower right corner (not rotation aware)
CURSOR INFO SOC            (= 0x00002000)  // tag so'C' emulated cursor with a 'S' in the lower right corner (not rotation aware)
CURSOR INFO WARP           (= 0x00004000)  // tag gpu hw cursor 'W'arp shape replacement with a 'W' in the lower right corner (not rotation aware)

Default values for this setting:
DEFAULT:    0x00000023

------------------------------------------------------------
WKS DEEP COLOR DWM CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Workaround to disable DWM RGBA8 TO RGB10A2 format spoofing due to remote connection issues.

OFF                       (= 0x00000000)  // No workaraound enabled.
DISABLE RGB10A2 SPOOFING  (= 0x00000001)  // If set the default for primary format does not allow RGB10A2 spoofing.

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
WKS DISPLAY REARRANGEMENT WITHIN16K
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Displays rearrangement when crossed overall 16K resolution limit enabled or not

OFF  (= 0x00000000)  // Displays rearrangement off
ON   (= 0x00000001)  // Display rearrangement on

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
WKS DX SWAPGROUPS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

USE DRIVER DEFAULT     (= 0x00000000)  // dont change driver strategy
FORCE NVAPI FLIP WAIT  (= 0x00000001)  // Force the driver not to wait on the flip event in the present, but rather in NVAPI
PRE PRESENT WAIT       (= 0x00000002)  // If bit is set, dx swapgroup wait before present.

Default values for this setting:
DEFAULT:    USE DRIVER DEFAULT

------------------------------------------------------------
WKS FEATURE DEBUG CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Scanout composition backend debug helper controls.

OFF                   (= 0x00000000)  // No debug helper enabled.
ENABLE HDR INDICATOR  (= 0x00000001)  // If set the scanout composition HDR indicator is enabled: showing 2 color encoded 20x20 pixel big rectangles are shown on the top left corner of the hdr scanout buffer.

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
WKS FEATURE INDICATOR
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Toggle Workstation Feature Indicator on or off

OFF, 0, FALSE, DISABLED  (= 0x00000000)  // Disable Everything
ON, 1, TRUE, ENABLED     (= 0x00000001)  // Enable Wks feature Indicator only
FEATURE MASK             (= 0x00000ff0)  // Indicator for specific features
SWAPGROUP                (= 0x00000010)  // Show indicator for swapgroup
SWAPGROUP JOINED         (= 0x00000020)  // Show indicator for clients which joined the swapgroup
COMPOSITOR               (= 0x00000040)  // Show indicator for the compositor
APP MASK                 (= 0x0000f000)  // Enable the indicator to app or DWM
APP                      (= 0x00001000)  // Enable the indicator to APP
DWM                      (= 0x00002000)  // Enable the indicator to DWM

Default values for this setting:
DEFAULT:    0x00000000
	OFF                                     
	OFF                                     
	OFF                                     

------------------------------------------------------------
WKS FEATURE SUPPORT CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

NV private interface to enable/disable workstation features

OFF                                                    (= 0x00000000)  // No workstation features controled by this key enabled yet
SRS 1714 WIN8 STEREO                                   (= 0x00000001)  // Enable wks stereo for native dx11 Win8 stereo
WIN8 STEREO EXPORT IF ENABLED                          (= 0x00000002)  // Export wddm 1.2 stereo modes only if wks stereo is enabled
HDMI STEREO                                            (= 0x00000004)  // Enables HDMI stereo by overriding any suitable display mode to stereo
HDMI EXCLUSIVE STEREO                                  (= 0x00000008)  // Enables stereo just on HDMI displays (requires HDMI STEREO)
TFP CLAIM EXCLUSIVE MUTEX                              (= 0x00000010)  // TEAR FREE PRESENT acquires exclusive mutex
USE ANY FRAME FLIP STEREO MODE FOR TFP AND SWAPGROUP   (= 0x00000020)  // Use ANY FRAME instead of PAIR FLIP flipping mode on Kepler when tearfree or swapgroup is enabled
ALLOW SPLIT STEREO PRESENT BLITS                       (= 0x00000040)  // Allow split stereo present blits to avoid tearing on the right-eye
DISABLE DEEP COLOR SUPPORT                             (= 0x00000080)  // If bit is set, don't allow scanout from 10bpc buffer (create no dwm/gdi 10bpc primary buffer)
DISABLE WIN8 STEREO MODE REFRESHRATE EXPORT BISECTION  (= 0x00000100)  // If bit is set win8 stereo modes are exported with their real refreshrate (and not refreshrate/2)
ENABLE VIDPNOWNERSHIP CHANGE BLANKING SKIPPING ALL     (= 0x00000200)  // If bit is set vipn blanking is forced for all vidpnownership changes (per default this is done for resource preallocation only).
DISABLE VIDPNOWNERSHIP CHANGE BLANKING SKIPPING        (= 0x00000400)  // If bit is set vipn blanking is not skipped (per default this is done for resource preallocation). Overrides ENABLE VIDPNOWNERSHIP CHANGE BLANKING SKIPPING FULL.
DISABLE SCANOUT COMP IFLIP                             (= 0x00000800)  // If bit is set, don't allow scanoutComposition on iFlip on WDDM2
DISABLE CSC FOR NON DWM PRIMARIES                      (= 0x00001000)  // If bit is set sw emulated color space conversion operations and bloating will be performed on primaries allocated by dwm only.
DISABLE DWM STEREO DFLIP                               (= 0x00002000)  // If bit is set, don't allow DFlip for DWM stereo swapchain on WDDM2.3
DISABLE INTERNAL DISPLAY MS STEREO MODES               (= 0x00004000)  // If bit is set, display driver does not export MS stereo modes on internal (laptop) panels
EXPORT HIGH COLOR CAPS ON 10BPC DISPLAYS               (= 0x00008000)  // If bit is set, DXGK MONITORLINKINFO CAPABILITIES::HighColorSpace is exported for 10bpc capable (non-HDR) displays on Quadro (which allows FP16 desktops on RS4+).
DISALLOW PRIVATE CONTEXT CHANNEL FOR NON DWM           (= 0x00010000)  // If bit is set, the usage of kmd's private context channel is disallowed for all applications besides dwm.
DISALLOW PRIVATE CONTEXT CHANNEL FOR DWM               (= 0x00020000)  // If bit is set, the usage of kmd's private context channel is disallowed for the dwm process.
ENABLE SWAPGROUP DWM FLIP BROADCASTING                 (= 0x00040000)  // If bit is set a swapgroup will control the flip of all heads (including dwm owned heads). Fallback option until verified that this is fixed and no longer needed.
WIN8 STEREO ENFORCE DIN SIGNAL                         (= 0x00080000)  // If bit is set, 3pin DIN stereo signal is persistently enabled for active stereo mode.
ENABLE SMOOTHSCALING SUPPORT ON QUADRO                 (= 0x00100000)  // If bit is set, dsr aka smoothscaling aka hyperscaling is supported on Quadro boards.
ENABLE DL DSR SUPPORT ON QUADRO                        (= 0x00200000)  // If bit is set, dl dsr is supported on Quadro boards.
DISALLOW STEREO OUTPUT CONTROL OVERRIDE                (= 0x00400000)  // If bit is set, preferred stereo output target control via NVL CLIENT ARB MODE MODULE STEREO OUTPUT CONTROL is disallowed.

Default values for this setting:
DEFAULT:    0x00086143
	SRS 1714 WIN8 STEREO                    
	WIN8 STEREO EXPORT IF ENABLED           
	ALLOW SPLIT STEREO PRESENT BLITS        
	DISABLE WIN8 STEREO MODE REFRESHRATE EXPORT BISECTION
	DISABLE DWM STEREO DFLIP                
	DISABLE INTERNAL DISPLAY MS STEREO MODES
	WIN8 STEREO ENFORCE DIN SIGNAL          

------------------------------------------------------------
WKS MEMORY ALLOCATION POLICY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

AS NEEDED                  (= 0x00000000)  // As Needed
MODERATE PRE ALLOCATION    (= 0x00000001)  // Moderate pre-allocation
AGGRESSIVE PRE ALLOCATION  (= 0x00000002)  // Aggressive pre-allocation

Default values for this setting:
DEFAULT:    AS NEEDED

------------------------------------------------------------
WKS MOSAIC TOPOLOGY REQUESTED
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

This setting suggest that a new Mosaic Topology is requested or not

OFF, 0, FALSE, REQUEST DISABLED  (= 0x00000000)  // Request Disable
ON, 1, TRUE, REQUEST ENABLED     (= 0x00000001)  // Request Enable

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
WKS POST PROCESSING ENGINE CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

NV private interface to adjust the behavior of the post processing engine

OFF                                                 (= 0x00000000)  // No specific adjustments for the post processing engine are selected
EXECUTE ON DWM                                      (= 0x00000001)  // If bit is set, post processing engine operations are executed on desktop compositor owned fullscreen buffers.
EXECUTE ON NON DWM                                  (= 0x00000002)  // If bit is set, post processing engine operations are executed fullscreen buffers no owned by the desktop compositor.
USE SCRATCH MEMORY AS GPU PROGRAM STORAGE           (= 0x00000004)  // If bit is set, a global os hidden scratch framebuffer portion is used as gpu storage instead of context allocations.
DRAW ON SCREEN INDICATOR                            (= 0x00000008)  // If bit is set, an on screen indicator should be rendered on top of the executed post processing engine gpu program output.
MASK FOR ALL CONTROLLED BITS                        (= 0xffff0000)  // Combined mask bits for all potential mask bit controlled entries.
MASK FOR EXECUTE ON DWM                             (= 0x00010000)  // EXECUTE ON DWM settings are just modified in case this mask bit is also set.
MASK FOR EXECUTE ON NON DWM                         (= 0x00020000)  // EXECUTE ON NON DWM settings are just modified in case this mask bit is also set.
MASK FOR USE SCRATCH MEMORY AS GPU PROGRAM STORAGE  (= 0x00040000)  // USE SCRATCH MEMORY AS GPU PROGRAM STORAGE settings are just modified in case this mask bit is also set.
MASK FOR DRAW ON SCREEN INDICATOR                   (= 0x00080000)  // DRAW ON SCREEN INDICATOR settings are just modified in case this mask bit is also set.

Default values for this setting:
DEFAULT:    0x00000003
	OFF                                     
	OFF                                     
	OFF                                     
	OFF                                     
	OFF                                     
	EXECUTE ON DWM                          
	EXECUTE ON NON DWM                      

------------------------------------------------------------
WKS SCANOUT COMPOSITION CONTROL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

NV private interface to enable/disable scanoutComposition features

OFF                                   (= 0x00000000)  // No specific adjustments for scanoutComposition backend are selected
MULTIGPU MOSAIC UNICAST               (= 0x00000001)  // If bit is set, scanoutComposition performs composition in unicast manner
MULTIGPU MOSAIC ALLOC PACKING         (= 0x00000002)  // If bit is set, scanoutComposition allocation is packed to save memory usage and unicasting is required (for RID 52174)
ENABLE GAMMA FOR PER PIXEL INTENSITY  (= 0x00000004)  // If bit is set, per pixel intensity operations on non-float allocations are performed in linear space by doing a de-gamma on reads and re-gamma on writes.

Default values for this setting:
DEFAULT:    0x00000003
	MULTIGPU MOSAIC UNICAST                 
	MULTIGPU MOSAIC ALLOC PACKING           

------------------------------------------------------------
WKS STEREO DONGLE SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Control of the stereo dongle

OFF  (= 0x00000000)  // Disable stereo dongle support
DAC  (= 0x00000001)  // Enable stereo dongle using stereo signal from GPU
DLP  (= 0x00000002)  // Enable stereo dongle using stereo signal from DLP

Default values for this setting:
DEFAULT:    DAC

------------------------------------------------------------
WKS STEREO SUPPORT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Support of the stereo API for workstations

OFF  (= 0x00000000)  // Disable API stereo support
ON   (= 0x00000001)  // Enable API stereo support

Default values for this setting:
DEFAULT:    OFF

------------------------------------------------------------
WKS STEREO SWAP MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

APPLICATION CONTROL     (= 0x00000000)  // Application Control
PER EYE                 (= 0x00000001)  // Per Eye
PER EYE PAIR            (= 0x00000002)  // Per Eye-Pair
LEGACY BEHAVIOR         (= 0x00000003)  // Legacy Behavior
PER EYE FOR SWAP GROUP  (= 0x00000004)  // Per Eye swap for swapgroup

Default values for this setting:
DEFAULT:    APPLICATION CONTROL

------------------------------------------------------------
WORKER KMI LAYER
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may only assign it to some combination of the names listed below.

Enable the workerKMI layer. Only works with when the AsyncDevice is used.

OFF, 0, FALSE  (= 0x00000000)
ON, 1, TRUE    (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	ON                                      

------------------------------------------------------------
WORKER KMI LAYER THREAD PRIORITY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Sets the priority of helper threads spawned from the Worker KMI layer. These values are treated as signed ints

LOWEST        (= 0xfffffffe)
BELOW NORMAL  (= 0xffffffff)
NORMAL        (= 0x00000000)
ABOVE NORMAL  (= 0x00000001)
HIGHEST       (= 0x00000002)

Default values for this setting:
DEFAULT:    ABOVE NORMAL

------------------------------------------------------------
WRITE FULL BE ENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Bits 28 and 29 for NV PGRAPH PRI BES CROP DEBUG1 and NV PGRAPH PRI BES ZROP DEBUG2. For GA10x+ this is bits 29 and bits 28 in NV PGRAPH PRI GPCS ROPS CROP DEBUG1 AND NV PGRAPH PRI GPCS ROPS ZROP DEBUG2 respectively. ENABLE * ALL and DISABLE * ALL regkeys are available only GA10x+

DISABLE          (= 0x00000000)
CROP VID         (= 0x00000001)
CROP SYS         (= 0x00000002)
ZROP VID         (= 0x00000004)
ZROP SYS         (= 0x00000008)
ENABLE CROP ALL  (= 0x00000010)  // GA10x+ only.  Enable  bit 29 in NV PGRAPH PRI GPCS ROPS CROP DEBUG1
ENABLE ZROP ALL  (= 0x00000020)  // GA10x+ only.  Enable  bit 28 in NV PGRAPH PRI GPCS ROPS ZROP DEBUG2
ALL              (= 0x0000003f)  // CROP VID|CROP SYS|ZROP VID|ZROP SYS|ENABLE CROP ALL|ENABLE ZROP ALL

Default values for this setting:
DEFAULT:    0x0000003F
	CROP VID                                
	CROP SYS                                
	ZROP VID                                
	ZROP SYS                                
	ENABLE CROP ALL                         
	ENABLE ZROP ALL                         
	ALL                                     

------------------------------------------------------------
WRITE TO HOST STAGING BUFFER SIZE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set size of write staging buffer. If key is set to zero it will be ignored


Default values for this setting:
DEFAULT:    0x00000000

------------------------------------------------------------
WSCALE16
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0x00000000)
MAX  (= 0x00010000)

Default values for this setting:
DEFAULT:    MAX

------------------------------------------------------------
WSCALE24
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

MIN  (= 0x00000000)
MAX  (= 0x01000000)

Default values for this setting:
DEFAULT:    MAX

------------------------------------------------------------
WTD ALLOW
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
WTD EXECMODEL
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
WTD FORCEASYNCCMD0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
WTD FORCEASYNCCMD1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
WTD FORCEASYNCCMD2
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
WTD FORCEASYNCCMD3
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
WTD STATS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.


------------------------------------------------------------
YUV EMULATION MODE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Controling yuv emulation settings.

OVERRIDE OFF                           (= 0x00000000)  // No override.
RANGE OVERRIDE MASK                    (= 0x00000003)  // Bitmask for range overrides.
RANGE OVERRIDE NONE                    (= 0x00000000)  // No range override.
RANGE OVERRIDE FULL                    (= 0x00000001)  // Always use limited range.
RANGE OVERRIDE LIMITED                 (= 0x00000002)  // Always use full range.
COLORIMETRY OVERRIDE MASK              (= 0x00000070)  // Bitmask for colorimetry overrides.
COLORIMETRY OVERRIDE NONE              (= 0x00000000)  // No colorimetry override.
COLORIMETRY OVERRIDE BT601             (= 0x00000010)  // Always use BT601.
COLORIMETRY OVERRIDE BT709             (= 0x00000020)  // Always use BT709.
COLORIMETRY OVERRIDE BT2020C           (= 0x00000030)  // Always use BT2020 constant luminance.
COLORIMETRY OVERRIDE BT2020NC          (= 0x00000040)  // Always use BT2020 non-constant luminance.
COLORIMETRY OVERRIDE RGB               (= 0x00000050)  // RGB aka don't do a rgb yuv csc.
BPC OVERRIDE MASK                      (= 0x00000300)  // Bitmask for bpc overrides.
BPC OVERRIDE NONE                      (= 0x00000000)  // No bpc override.
BPC OVERRIDE 8 BPC                     (= 0x00000100)  // Always use 8bpc.
BPC OVERRIDE 10 BPC                    (= 0x00000200)  // Always use 10bpc.
BPC OVERRIDE 12 BPC                    (= 0x00000300)  // Always use 12bpc.
LUT OVERRIDE MASK                      (= 0x00001000)  // Bitmask for lut overrides.
LUT OVERRIDE NONE                      (= 0x00000000)  // No lut override.
LUT OVERRIDE NO LUT                    (= 0x00001000)  // Ignore the lut (always of).
SAT HUE OVERRIDE MASK                  (= 0x00002000)  // Bitmask for saturation and hue overrides.
SAT HUE OVERRIDE NONE                  (= 0x00000000)  // No saturation and hue override.
SAT HUE OVERRIDE NO SAT HUE            (= 0x00002000)  // Ignore Saturation and Hue (always off).
HDR MODE OVERRIDE MASK                 (= 0x00070000)  // Bitmask for hdr overrides.
HDR MODE OVERRIDE NONE                 (= 0x00000000)  // No hdr mode override.
HDR MODE OVERRIDE SDR                  (= 0x00010000)  // Disable HDR
HDR MODE OVERRIDE HDR                  (= 0x00020000)  // Keep hdr enabled all the time (always on).
HDR MODE OVERRIDE EDR                  (= 0x00030000)  // Keep edr enabled all the time (always on).
HDR MODE OVERRIDE LDR                  (= 0x00040000)  // Keep ldr enabled all the time (always on).
HDR CONTROL OVERRIDE MASK              (= 0x01f00000)  // Bitmask for hdr setting overrides.
HDR CONTROL OVERRIDE NONE              (= 0x00000000)  // No hdr control override.
HDR CONTROL OVERRIDE NO CSC            (= 0x00100000)  // Don't use scRGB->rec BT2020 colorspace conversion
HDR CONTROL OVERRIDE NO SCALING        (= 0x00200000)  // Don't perform 80 -> 10000 nits scaling (*0.008)
HDR CONTROL OVERRIDE NO OETF           (= 0x00400000)  // Don't perform inverse PQ EOTF
HDR CONTROL OVERRIDE HDR ALL FORMATS   (= 0x00800000)  // Apply hdr conversion on all primaries (no matter which format they have)
HDR CONTROL OVERRIDE HDR DCIP3 OUTPUT  (= 0x01000000)  // Output DCIP3 PQ output for compatibility with Dolby Maui HDR monitor
YUV PREALLOC OVERRIDE MASK             (= 0x02000000)  // Bitmask for yuv preallocation overrides
YUV PREALLOC OVERRIDE PREALLOC HDR     (= 0x02000000)  // Preallocate a yuv portion for all potential hdr allocations as intrinsic alloc type. Default until on the fly transitions are working.

Default values for this setting:
DEFAULT:    YUV PREALLOC OVERRIDE MASK

------------------------------------------------------------
ZBC
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Zero-Bandwidth Clear(ZBC) Configuration

DISABLE ALL            (= 0x00000000)  // Disable ZBC for all allocations
ALLOW RENDERTARGET     (= 0x00000001)  // Allow ZBC for render targets
ALLOW DEPTH            (= 0x00000002)  // Allow ZBC for depth/stencil buffers
ALLOW PRIMARY          (= 0x00000004)  // Allow ZBC for shared or unshared primaries
ALLOW VIDEO            (= 0x00000008)  // Allow ZBC for video surfaces
ALLOW TEXTURE          (= 0x00000010)  // Allow ZBC for textures
ALLOW CUBEMAP          (= 0x00000020)  // Allow ZBC for cubemap textures
ALLOW VOLUME           (= 0x00000040)  // Allow ZBC for volume textures
ALLOW VERTEXARRAY      (= 0x00000080)  // Allow ZBC for vertex buffers/arrays
ALLOW INDEXARRAY       (= 0x00000100)  // Allow ZBC for index buffers
ALLOW OFFSCREEN        (= 0x00000200)  // Allow ZBC for plain offscreen surfaces
ALLOW STREAMOUT        (= 0x00000400)  // Allow ZBC for stream out buffers
ALLOW SEMAPHORE        (= 0x00004000)  // Allow ZBC for semaphores
ALLOW PUSHBUFFER       (= 0x00010000)  // Allow ZBC for push buffers
ALLOW GPFIFOBUFFER     (= 0x00020000)  // Allow ZBC for gpfifo buffers
ALLOW CONTEXT SAVE     (= 0x00040000)  // Allow ZBC for virtual context allocations
ALLOW TEXHEADERS       (= 0x00080000)  // Allow ZBC for texture headers
ALLOW SAMPLERS         (= 0x00100000)  // Allow ZBC for samplers
ALLOW ZCULL CONTEXT    (= 0x00200000)  // Allow ZBC for ZCull context save areas
ALLOW FRAGMENTPROGRAM  (= 0x00800000)  // Allow ZBC for fragment programs/pixel shaders
ALLOW UNKNOWN          (= 0x40000000)  // Allow ZBC for unknown surfaces
ALLOW GDI              (= 0x80000000)  // Allow ZBC for GDI allocations
ALLOW ALL              (= 0xc0bf47ff)  // Allow ZBC for all allocations (default)
MASK                   (= 0xc0bf47ff)  // Mask of all configuration bits

Default values for this setting:
DEFAULT:    0xC0BF47FF
	ALLOW ALL                               

------------------------------------------------------------
ZBIAS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

positively shift z to accomodate apps that give us slightly negative z

MIN  (= 0x00000000)
MAX  (= 0x0000000a)

Default values for this setting:
DEFAULT:    MIN

------------------------------------------------------------
ZCOMPRESSENABLE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

OFF, 0, FALSE, DISABLED  (= 0x86752318)
ON, 1, TRUE, ENABLED     (= 0x88204955)

Default values for this setting:
DEFAULT:    ON

------------------------------------------------------------
ZCULL FLAGS
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
The key is a collection of Bitfields.
You may assign it to some combination of the names listed below
but that is not required. You may also enter a dword value directly.

Control features specific to zcull

NONE             (= 0x00000000)
DYNAMIC STENCIL  (= 0x00000001)

Default values for this setting:
DEFAULT:    0x00000001
	DYNAMIC STENCIL                         

------------------------------------------------------------
ZCULL SUBREGION ALIQUOT LIMIT
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Specify an artificial upper limit on the total number of aliquots available for a region when using subregions.

ZERO  (= 0x00000000)  // Pretend we have 0 aliquots
NONE  (= 0xffffffff)  // Don't place an artificial limit on the number of aliquots available

Default values for this setting:
DEFAULT:    NONE

------------------------------------------------------------
ZCULL SUBREGION FORMATS 0
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the Zcull Subregion distribution for subregion IDs 0-7.
See ZCULL SUBREGION FORMATS 1 for the other 8 subregions.
ZCULL SUBREGION STRATEGY must be set to EXPLICIT for these keys to take effect.

Each nibble specifies the zcull format for a single subregion, where the lowest order (least significant) 4 bits sets the 0th subregion etc. For adaptive/dynamic subregion assignment, the highest precision formats should be assigned to the lowest numbered IDs (that is, the LSBs in this setting). If there are insufficient aliquots, as many of the requested formats as possible are used (the final of which may have fewer aliquots than required to cover its subregion), and the remaining are set to NONE and given 0 aliquots.

See below for the available zcull formats (the normalized aliquot scaling factor is in parentheses) and some sample distributions.

Z 16X16X2 4X4, Z 4X4  (= 0x00000000)  // (0.5X) Standard 'high res' (coarse) zcull
ZS 16X16 4X4, ZS 4x4  (= 0x00000001)  // (1X  ) Standard zcull with stencil
Z 16X16 4X2, Z 4X2    (= 0x00000002)  // (1X  ) Standard non-stencil format
Z 16X16 2X4, Z 2X4    (= 0x00000003)  // (1X  ) Standard non-stencil format (alternate occluder orientation)
Z 16X8 4X4            (= 0x00000004)  // (1X  )
Z 8X8 4X2             (= 0x00000005)  // (2X  ) High precision
Z 8X8 2X4             (= 0x00000006)  // (2X  ) High precision
Z 16X16 4X8           (= 0x00000007)  // (0.5X) Large occluder coarse zcull
Z 4X8 2X2             (= 0x00000008)  // (4X  ) *** Useful in AA mode  only  *** (highest available precision)
ZS 16X8 4X2           (= 0x00000009)  // (2X  ) *** Unimplemented ***
ZS 16X8 2X4           (= 0x0000000a)  // (2X  ) *** Unimplemented ***
ZS 8X8 2X2            (= 0x0000000b)  // (4X  ) *** Unimplemented ***
Z 4X8 1X1             (= 0x0000000c)  // (8X  ) *** Unimplemented *** Useful in AA  only 
NONE                  (= 0x0000000f)  // (0X  ) No zcull
ONEHIGH               (= 0xfffffff8)  // 1st @ Z 4X8 2X2 (only a win in AA), no zcull for the rest
COARSEHIRES           (= 0x00000000)  // Use high res zcull (Z 16X16X2 4X4 aka Z 4X4) for all of the first 8 subregions
DEFAULT               (= 0x22555555)  // 6 @ Z 8X8 4X2, 2 @ Z 16X16 4X2 (aka Z 4X2)

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
ZCULL SUBREGION FORMATS 1
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Set the Zcull Subregion distribution for subregion IDs 8-15.
See ZCULL SUBREGION FORMATS 0 for the other 8 subregions.
ZCULL SUBREGION STRATEGY must be set to EXPLICIT for these keys to take effect.

Each nibble specifies the zcull format for a single subregion, where the lowest order (least significant) 4 bits sets the 8th subregion, the next 4 set the 9th, and on through the highest order nibble setting the last. For adaptive/dynamic subregion assignment, the lowest precision formats should be assigned to the highest numbered IDs (that is, the MSBs in this setting). If there are insufficient aliquots, as many of the requested formats as possible are used (the final of which may have fewer aliquots than required to cover its subregion), and the remaining are set to NONE and given 0 aliquots.

See below for the available zcull formats (the normalized aliquot scaling factor is in parentheses) and some sample distributions.

Z 16X16X2 4X4, Z 4X4  (= 0x00000000)  // (0.5X) Standard 'high res' (coarse) zcull
ZS 16X16 4X4, ZS 4x4  (= 0x00000001)  // (1X  ) Standard zcull with stencil
Z 16X16 4X2, Z 4X2    (= 0x00000002)  // (1X  ) Standard non-stencil format
Z 16X16 2X4, Z 2X4    (= 0x00000003)  // (1X  ) Standard non-stencil format (alternate occluder orientation)
Z 16X8 4X4            (= 0x00000004)  // (1X  )
Z 8X8 4X2             (= 0x00000005)  // (2X  ) High precision
Z 8X8 2X4             (= 0x00000006)  // (2X  ) High precision
Z 16X16 4X8           (= 0x00000007)  // (0.5X) Large occluder coarse zcull
Z 4X8 2X2             (= 0x00000008)  // (4X  ) *** Useful in AA mode  only  *** (highest available precision)
ZS 16X8 4X2           (= 0x00000009)  // (2X  ) *** Unimplemented ***
ZS 16X8 2X4           (= 0x0000000a)  // (2X  ) *** Unimplemented ***
ZS 8X8 2X2            (= 0x0000000b)  // (4X  ) *** Unimplemented ***
Z 4X8 1X1             (= 0x0000000c)  // (8X  ) *** Unimplemented *** Useful in AA  only 
NONE                  (= 0x0000000f)  // (0X  ) No zcull
ONELOW                (= 0x02222222)  // Last (15th) subregion @ high res zcull, normal zcull for the rest
COARSEHIRES           (= 0x00000000)  // Use high res zcull (Z 16X16X2 4X4 aka Z 4X4) for all of the last 8 subregions
DEFAULT               (= 0xff222222)  // Subregion IDs 8-13 get normal zcull Z 16X16 4X2 (aka Z 4X2), the last two (IDs 14 and 15) get NONE

Default values for this setting:
DEFAULT:    DEFAULT

------------------------------------------------------------
ZCULL SUBREGION REPORT TYPE
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Specify what the counters in the ZCull subregions should count.

There is one counter per subregion and all subregions count the same type of event. The counters only increment when the specified event Type affects a tile.

DEPTH TEST            (= 0x00000000)  // Counts 8x8s that are depth tested
DEPTH TEST NO ACCEPT  (= 0x00000001)  // Counts 8x8s that are depth tested but not trival accepted
DEPTH TEST LATE Z     (= 0x00000002)  // Counts 8x8s that are depth tested in late Z
STENCIL TEST          (= 0x00000003)  // Counts stencil tested 8x8s
AUTOSELECT            (= 0xffffffff)  // Let the driver choose

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
ZCULL SUBREGION STRATEGY
------------------------------------------------------------
This key is of type DWORD
This key is defined all the time - even with release driver
You may only assign it to one of the names listed below.

Select the Zcull Subregion distribution strategy. Set this to EXPLICIT and also set ZCULL SUBREGION FORMATS 0 and ZCULL SUBREGION FORMATS 1 for testing and performance shmooing.

FORCE DISABLE  (= 0x00000000)  // Force subregions off
AUTOSELECT     (= 0x00000001)  // The default mode, the driver will pick a strategy
EXPLICIT       (= 0x00000002)  // Use the formats specified in ZCULL SUBREGION FORMATS 0 and ZCULL SUBREGION FORMATS 1

Default values for this setting:
DEFAULT:    AUTOSELECT

------------------------------------------------------------
ZCULL TOTAL ALIQUOTS
------------------------------------------------------------
This key is of type DWORD
This key is defined only for develop/debug driver
You may assign it to one of the names listed below
but that is not required. You may also enter a number.

Override total aliquot count.


Default values for this setting:
DEFAULT:    0x00000000
